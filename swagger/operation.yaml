components:
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  title: Beincom Payment Service
  version: 0.0.2
openapi: 3.0.2
paths:
  /admins:
    get:
      description: Gets a list of system user
      operationId: getAdmins
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: email
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: namespace
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      - description: Return a total count as well as items (adds extra database processing)
        in: query
        name: count
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    email:
                      description: Admin.email
                      type: string
                    id:
                      description: Admin.id
                      format: uuid
                      type: string
                    is_active:
                      description: Admin.is_active
                      type: boolean
                    namespace:
                      description: Admin.namespace
                      type: string
                    password:
                      description: Admin.password
                      type: string
                    role:
                      description: Admin.role
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Admins
    post:
      description: Create new admin
      operationId: postNewAdmin
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  description: Admin.email
                  type: string
                id:
                  description: Admin.id
                  format: uuid
                  type: string
                is_active:
                  description: Admin.is_active
                  type: boolean
                namespace:
                  description: Admin.namespace
                  type: string
                password:
                  description: Admin.password
                  type: string
                role:
                  description: Admin.role
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  email:
                    description: Admin.email
                    type: string
                  id:
                    description: Admin.id
                    format: uuid
                    type: string
                  is_active:
                    description: Admin.is_active
                    type: boolean
                  namespace:
                    description: Admin.namespace
                    type: string
                  password:
                    description: Admin.password
                    type: string
                  role:
                    description: Admin.role
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Admins
  /admins/{id}:
    delete:
      description: Delete admin by id
      operationId: deleteAdmin
      parameters:
      - description: The admin ID key to get
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created:
                    description: The time the operation was created
                    format: date-time
                    type: string
                  data:
                    additionalProperties:
                      description: Operation.data
                    description: Operation.data
                    type: object
                  detail:
                    description: Additional detailed information about an operation
                      provided by the connector
                  error:
                    description: Any error reported back from the plugin for this
                      operation
                    type: string
                  id:
                    description: The UUID of the operation
                    format: uuid
                    type: string
                  input:
                    additionalProperties:
                      description: The input to this operation
                    description: The input to this operation
                    type: object
                  namespace:
                    description: The namespace of the operation
                    type: string
                  output:
                    additionalProperties:
                      description: Any output reported back from the plugin for this
                        operation
                    description: Any output reported back from the plugin for this
                      operation
                    type: object
                  plugin:
                    description: The plugin responsible for performing the operation
                    type: string
                  retry:
                    description: If this operation was initiated as a retry to a previous
                      operation, this field points to the UUID of the operation being
                      retried
                    format: uuid
                    type: string
                  status:
                    description: The current status of the operation
                    type: string
                  tx:
                    description: The UUID of the FireFly transaction the operation
                      is part of
                    format: uuid
                    type: string
                  type:
                    description: The type of the operation
                    enum:
                    - blockchain_invoke
                    - user_operation_send
                    type: string
                  updated:
                    description: The last update time of the operation
                    format: date-time
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Admins
    get:
      description: Get admin by id
      operationId: getAdminByID
      parameters:
      - description: The admin ID key to get
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  email:
                    description: Admin.email
                    type: string
                  id:
                    description: Admin.id
                    format: uuid
                    type: string
                  is_active:
                    description: Admin.is_active
                    type: boolean
                  namespace:
                    description: Admin.namespace
                    type: string
                  password:
                    description: Admin.password
                    type: string
                  role:
                    description: Admin.role
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Admins
  /admins/login:
    post:
      description: Login
      operationId: postAdminLogin
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  description: Admin.email
                  type: string
                password:
                  description: Admin.password
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  token:
                    description: Admin.token
                    type: string
                type: object
          description: Success
        default:
          description: ""
      tags:
      - Admins
  /apis:
    get:
      description: Gets a list of contract APIs that have been published
      operationId: getContractAPIs
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: interface
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: name
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: networkname
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: published
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      - description: Return a total count as well as items (adds extra database processing)
        in: query
        name: count
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      description: The UUID of the contract API
                      format: uuid
                      type: string
                    interface:
                      description: Reference to the FireFly Interface definition associated
                        with the contract API
                      properties:
                        id:
                          description: The UUID of the FireFly interface
                          format: uuid
                          type: string
                        name:
                          description: The name of the FireFly interface
                          type: string
                        version:
                          description: The version of the FireFly interface
                          type: string
                      type: object
                    location:
                      description: If this API is tied to an individual instance of
                        a smart contract, this field can include a blockchain specific
                        contract identifier. For example an Ethereum contract address,
                        or a Fabric chaincode name and channel
                    message:
                      description: The UUID of the broadcast message that was used
                        to publish this API to the network
                      format: uuid
                      type: string
                    name:
                      description: The name that is used in the URL to access the
                        API
                      type: string
                    namespace:
                      description: The namespace of the contract API
                      type: string
                    networkName:
                      description: The published name of the API within the multiparty
                        network
                      type: string
                    published:
                      description: Indicates if the API is published to other members
                        of the multiparty network
                      type: boolean
                    urls:
                      description: The URLs to use to access the API
                      properties:
                        api:
                          description: The URL to use to invoke the API
                          type: string
                        openapi:
                          description: The URL to download the OpenAPI v3 (Swagger)
                            description for the API generated in JSON or YAML format
                          type: string
                        ui:
                          description: The URL to use in a web browser to access the
                            SwaggerUI explorer/exerciser for the API
                          type: string
                      type: object
                  type: object
                type: array
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - ContractAPIs
    post:
      description: Creates and broadcasts a new custom smart contract API
      operationId: postNewContractAPI
      parameters:
      - description: When true the HTTP request blocks until the message is confirmed
        in: query
        name: confirm
        schema:
          example: "true"
          type: string
      - description: When true the definition will be published to all other members
          of the multiparty network
        in: query
        name: publish
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                interface:
                  description: Reference to the FireFly Interface definition associated
                    with the contract API
                  properties:
                    id:
                      description: The UUID of the FireFly interface
                      format: uuid
                      type: string
                    name:
                      description: The name of the FireFly interface
                      type: string
                    version:
                      description: The version of the FireFly interface
                      type: string
                  type: object
                location:
                  description: If this API is tied to an individual instance of a
                    smart contract, this field can include a blockchain specific contract
                    identifier. For example an Ethereum contract address, or a Fabric
                    chaincode name and channel
                name:
                  description: The name that is used in the URL to access the API
                  type: string
                networkName:
                  description: The published name of the API within the multiparty
                    network
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    description: The UUID of the contract API
                    format: uuid
                    type: string
                  interface:
                    description: Reference to the FireFly Interface definition associated
                      with the contract API
                    properties:
                      id:
                        description: The UUID of the FireFly interface
                        format: uuid
                        type: string
                      name:
                        description: The name of the FireFly interface
                        type: string
                      version:
                        description: The version of the FireFly interface
                        type: string
                    type: object
                  location:
                    description: If this API is tied to an individual instance of
                      a smart contract, this field can include a blockchain specific
                      contract identifier. For example an Ethereum contract address,
                      or a Fabric chaincode name and channel
                  message:
                    description: The UUID of the broadcast message that was used to
                      publish this API to the network
                    format: uuid
                    type: string
                  name:
                    description: The name that is used in the URL to access the API
                    type: string
                  namespace:
                    description: The namespace of the contract API
                    type: string
                  networkName:
                    description: The published name of the API within the multiparty
                      network
                    type: string
                  published:
                    description: Indicates if the API is published to other members
                      of the multiparty network
                    type: boolean
                  urls:
                    description: The URLs to use to access the API
                    properties:
                      api:
                        description: The URL to use to invoke the API
                        type: string
                      openapi:
                        description: The URL to download the OpenAPI v3 (Swagger)
                          description for the API generated in JSON or YAML format
                        type: string
                      ui:
                        description: The URL to use in a web browser to access the
                          SwaggerUI explorer/exerciser for the API
                        type: string
                    type: object
                type: object
          description: Success
        "202":
          content:
            application/json:
              schema:
                properties:
                  id:
                    description: The UUID of the contract API
                    format: uuid
                    type: string
                  interface:
                    description: Reference to the FireFly Interface definition associated
                      with the contract API
                    properties:
                      id:
                        description: The UUID of the FireFly interface
                        format: uuid
                        type: string
                      name:
                        description: The name of the FireFly interface
                        type: string
                      version:
                        description: The version of the FireFly interface
                        type: string
                    type: object
                  location:
                    description: If this API is tied to an individual instance of
                      a smart contract, this field can include a blockchain specific
                      contract identifier. For example an Ethereum contract address,
                      or a Fabric chaincode name and channel
                  message:
                    description: The UUID of the broadcast message that was used to
                      publish this API to the network
                    format: uuid
                    type: string
                  name:
                    description: The name that is used in the URL to access the API
                    type: string
                  namespace:
                    description: The namespace of the contract API
                    type: string
                  networkName:
                    description: The published name of the API within the multiparty
                      network
                    type: string
                  published:
                    description: Indicates if the API is published to other members
                      of the multiparty network
                    type: boolean
                  urls:
                    description: The URLs to use to access the API
                    properties:
                      api:
                        description: The URL to use to invoke the API
                        type: string
                      openapi:
                        description: The URL to download the OpenAPI v3 (Swagger)
                          description for the API generated in JSON or YAML format
                        type: string
                      ui:
                        description: The URL to use in a web browser to access the
                          SwaggerUI explorer/exerciser for the API
                        type: string
                    type: object
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - ContractAPIs
  /apis/{apiName}:
    delete:
      description: Delete a contract API
      operationId: deleteContractAPI
      parameters:
      - description: The name of the contract API
        in: path
        name: apiName
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "204":
          content:
            application/json: {}
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - ContractAPIs
    get:
      description: Gets information about a contract API, including the URLs for the
        OpenAPI Spec and Swagger UI for the API
      operationId: getContractAPIByName
      parameters:
      - description: The name of the contract API
        in: path
        name: apiName
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    description: The UUID of the contract API
                    format: uuid
                    type: string
                  interface:
                    description: Reference to the FireFly Interface definition associated
                      with the contract API
                    properties:
                      id:
                        description: The UUID of the FireFly interface
                        format: uuid
                        type: string
                      name:
                        description: The name of the FireFly interface
                        type: string
                      version:
                        description: The version of the FireFly interface
                        type: string
                    type: object
                  location:
                    description: If this API is tied to an individual instance of
                      a smart contract, this field can include a blockchain specific
                      contract identifier. For example an Ethereum contract address,
                      or a Fabric chaincode name and channel
                  message:
                    description: The UUID of the broadcast message that was used to
                      publish this API to the network
                    format: uuid
                    type: string
                  name:
                    description: The name that is used in the URL to access the API
                    type: string
                  namespace:
                    description: The namespace of the contract API
                    type: string
                  networkName:
                    description: The published name of the API within the multiparty
                      network
                    type: string
                  published:
                    description: Indicates if the API is published to other members
                      of the multiparty network
                    type: boolean
                  urls:
                    description: The URLs to use to access the API
                    properties:
                      api:
                        description: The URL to use to invoke the API
                        type: string
                      openapi:
                        description: The URL to download the OpenAPI v3 (Swagger)
                          description for the API generated in JSON or YAML format
                        type: string
                      ui:
                        description: The URL to use in a web browser to access the
                          SwaggerUI explorer/exerciser for the API
                        type: string
                    type: object
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - ContractAPIs
    put:
      description: The ID of the contract API
      operationId: putContractAPI
      parameters:
      - description: The name of the contract API
        in: path
        name: id
        required: true
        schema:
          example: id
          type: string
      - description: When true the HTTP request blocks until the message is confirmed
        in: query
        name: confirm
        schema:
          example: "true"
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                interface:
                  description: Reference to the FireFly Interface definition associated
                    with the contract API
                  properties:
                    id:
                      description: The UUID of the FireFly interface
                      format: uuid
                      type: string
                    name:
                      description: The name of the FireFly interface
                      type: string
                    version:
                      description: The version of the FireFly interface
                      type: string
                  type: object
                location:
                  description: If this API is tied to an individual instance of a
                    smart contract, this field can include a blockchain specific contract
                    identifier. For example an Ethereum contract address, or a Fabric
                    chaincode name and channel
                name:
                  description: The name that is used in the URL to access the API
                  type: string
                networkName:
                  description: The published name of the API within the multiparty
                    network
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    description: The UUID of the contract API
                    format: uuid
                    type: string
                  interface:
                    description: Reference to the FireFly Interface definition associated
                      with the contract API
                    properties:
                      id:
                        description: The UUID of the FireFly interface
                        format: uuid
                        type: string
                      name:
                        description: The name of the FireFly interface
                        type: string
                      version:
                        description: The version of the FireFly interface
                        type: string
                    type: object
                  location:
                    description: If this API is tied to an individual instance of
                      a smart contract, this field can include a blockchain specific
                      contract identifier. For example an Ethereum contract address,
                      or a Fabric chaincode name and channel
                  message:
                    description: The UUID of the broadcast message that was used to
                      publish this API to the network
                    format: uuid
                    type: string
                  name:
                    description: The name that is used in the URL to access the API
                    type: string
                  namespace:
                    description: The namespace of the contract API
                    type: string
                  networkName:
                    description: The published name of the API within the multiparty
                      network
                    type: string
                  published:
                    description: Indicates if the API is published to other members
                      of the multiparty network
                    type: boolean
                  urls:
                    description: The URLs to use to access the API
                    properties:
                      api:
                        description: The URL to use to invoke the API
                        type: string
                      openapi:
                        description: The URL to download the OpenAPI v3 (Swagger)
                          description for the API generated in JSON or YAML format
                        type: string
                      ui:
                        description: The URL to use in a web browser to access the
                          SwaggerUI explorer/exerciser for the API
                        type: string
                    type: object
                type: object
          description: Success
        "202":
          content:
            application/json:
              schema:
                properties:
                  id:
                    description: The UUID of the contract API
                    format: uuid
                    type: string
                  interface:
                    description: Reference to the FireFly Interface definition associated
                      with the contract API
                    properties:
                      id:
                        description: The UUID of the FireFly interface
                        format: uuid
                        type: string
                      name:
                        description: The name of the FireFly interface
                        type: string
                      version:
                        description: The version of the FireFly interface
                        type: string
                    type: object
                  location:
                    description: If this API is tied to an individual instance of
                      a smart contract, this field can include a blockchain specific
                      contract identifier. For example an Ethereum contract address,
                      or a Fabric chaincode name and channel
                  message:
                    description: The UUID of the broadcast message that was used to
                      publish this API to the network
                    format: uuid
                    type: string
                  name:
                    description: The name that is used in the URL to access the API
                    type: string
                  namespace:
                    description: The namespace of the contract API
                    type: string
                  networkName:
                    description: The published name of the API within the multiparty
                      network
                    type: string
                  published:
                    description: Indicates if the API is published to other members
                      of the multiparty network
                    type: boolean
                  urls:
                    description: The URLs to use to access the API
                    properties:
                      api:
                        description: The URL to use to invoke the API
                        type: string
                      openapi:
                        description: The URL to download the OpenAPI v3 (Swagger)
                          description for the API generated in JSON or YAML format
                        type: string
                      ui:
                        description: The URL to use in a web browser to access the
                          SwaggerUI explorer/exerciser for the API
                        type: string
                    type: object
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - ContractAPIs
  /apis/{apiName}/interface:
    get:
      description: Gets a contract interface for a contract API
      operationId: getContractAPIInterface
      parameters:
      - description: The name of the contract API
        in: path
        name: apiName
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  description:
                    description: A description of the smart contract this FFI represents
                    type: string
                  errors:
                    description: An array of smart contract error definitions
                    items:
                      description: An array of smart contract error definitions
                      properties:
                        description:
                          description: A description of the smart contract error
                          type: string
                        id:
                          description: The UUID of the FFI error definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this error is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the error
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of error parameter/argument definitions
                          items:
                            description: An array of error parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this error within
                            the FFI for use on URL paths
                          type: string
                        signature:
                          description: The stringified signature of the error, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  events:
                    description: An array of smart contract event definitions
                    items:
                      description: An array of smart contract event definitions
                      properties:
                        description:
                          description: A description of the smart contract event
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this event from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this event from the original smart contract. Used by the
                            blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI event definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this event is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the event
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of event parameter/argument definitions
                          items:
                            description: An array of event parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this event within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple event overrides with the same name
                          type: string
                        signature:
                          description: The stringified signature of the event, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  id:
                    description: The UUID of the FireFly interface (FFI) smart contract
                      definition
                    format: uuid
                    type: string
                  message:
                    description: The UUID of the broadcast message that was used to
                      publish this FFI to the network
                    format: uuid
                    type: string
                  methods:
                    description: An array of smart contract method definitions
                    items:
                      description: An array of smart contract method definitions
                      properties:
                        description:
                          description: A description of the smart contract method
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this method from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this method from the original smart contract. Used by
                            the blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI method definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this method is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the method
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of method parameter/argument definitions
                          items:
                            description: An array of method parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this method within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple method overrides with the same name
                          type: string
                        returns:
                          description: An array of method return definitions
                          items:
                            description: An array of method return definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: The name of the FFI - usually matching the smart
                      contract name
                    type: string
                  namespace:
                    description: The namespace of the FFI
                    type: string
                  networkName:
                    description: The published name of the FFI within the multiparty
                      network
                    type: string
                  published:
                    description: Indicates if the FFI is published to other members
                      of the multiparty network
                    type: boolean
                  version:
                    description: A version for the FFI - use of semantic versioning
                      such as 'v1.0.1' is encouraged
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - ContractAPIs
  /apis/{apiName}/invoke/{methodPath}:
    post:
      description: Invokes a method on a smart contract API. Performs a blockchain
        transaction.
      operationId: postContractAPIInvoke
      parameters:
      - description: The name of the contract API
        in: path
        name: apiName
        required: true
        schema:
          type: string
      - description: The name or uniquely generated path name of a method on a smart
          contract
        in: path
        name: methodPath
        required: true
        schema:
          type: string
      - description: When true the HTTP request blocks until the message is confirmed
        in: query
        name: confirm
        schema:
          example: "true"
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  additionalProperties:
                    description: ContractCallRequest.data
                  description: ContractCallRequest.data
                  type: object
                idempotencyKey:
                  description: An optional identifier to allow idempotent submission
                    of requests. Stored on the transaction uniquely within a namespace
                  type: string
                input:
                  additionalProperties:
                    description: A map of named inputs. The name and type of each
                      input must be compatible with the FFI description of the method,
                      so that FireFly knows how to serialize it to the blockchain
                      via the connector
                  description: A map of named inputs. The name and type of each input
                    must be compatible with the FFI description of the method, so
                    that FireFly knows how to serialize it to the blockchain via the
                    connector
                  type: object
                key:
                  description: The blockchain signing key that will sign the invocation.
                    Defaults to the first signing key of the organization that operates
                    the node
                  type: string
                location:
                  description: A blockchain specific contract identifier. For example
                    an Ethereum contract address, or a Fabric chaincode name and channel
                message:
                  description: You can specify a message to correlate with the invocation,
                    which can be of type broadcast or private. Your specified method
                    must support on-chain/off-chain correlation by taking a data input
                    on the call
                  properties:
                    data:
                      description: For input allows you to specify data in-line in
                        the message, that will be turned into data attachments. For
                        output when fetchdata is used on API calls, includes the in-line
                        data payloads of all data attachments
                      items:
                        description: For input allows you to specify data in-line
                          in the message, that will be turned into data attachments.
                          For output when fetchdata is used on API calls, includes
                          the in-line data payloads of all data attachments
                        properties:
                          datatype:
                            description: The optional datatype to use for validation
                              of the in-line data
                            properties:
                              name:
                                description: The name of the datatype
                                type: string
                              version:
                                description: The version of the datatype. Semantic
                                  versioning is encouraged, such as v1.0.1
                                type: string
                            type: object
                          id:
                            description: The UUID of the referenced data resource
                            format: uuid
                            type: string
                          validator:
                            description: The data validator type to use for in-line
                              data
                            type: string
                          value:
                            description: The in-line value for the data. Can be any
                              JSON type - object, array, string, number or boolean
                        type: object
                      type: array
                    group:
                      description: Allows you to specify details of the private group
                        of recipients in-line in the message. Alternative to using
                        the header.group to specify the hash of a group that has been
                        previously resolved
                      properties:
                        members:
                          description: An array of members of the group. If no identities
                            local to the sending node are included, then the organization
                            owner of the local node is added automatically
                          items:
                            description: An array of members of the group. If no identities
                              local to the sending node are included, then the organization
                              owner of the local node is added automatically
                            properties:
                              identity:
                                description: The DID of the group member. On input
                                  can be a UUID or org name, and will be resolved
                                  to a DID
                                type: string
                              node:
                                description: The UUID of the node that will receive
                                  a copy of the off-chain message for the identity.
                                  The first applicable node for the identity will
                                  be picked automatically on input if not specified
                                type: string
                            type: object
                          type: array
                        name:
                          description: Optional name for the group. Allows you to
                            have multiple separate groups with the same list of participants
                          type: string
                      type: object
                    header:
                      description: The message header contains all fields that are
                        used to build the message hash
                      properties:
                        author:
                          description: The DID of identity of the submitter
                          type: string
                        cid:
                          description: The correlation ID of the message. Set this
                            when a message is a response to another message
                          format: uuid
                          type: string
                        group:
                          description: Private messages only - the identifier hash
                            of the privacy group. Derived from the name and member
                            list of the group
                          format: byte
                          type: string
                        key:
                          description: The on-chain signing key used to sign the transaction
                          type: string
                        tag:
                          description: The message tag indicates the purpose of the
                            message to the applications that process it
                          type: string
                        topics:
                          description: A message topic associates this message with
                            an ordered stream of data. A custom topic should be assigned
                            - using the default topic is discouraged
                          items:
                            description: A message topic associates this message with
                              an ordered stream of data. A custom topic should be
                              assigned - using the default topic is discouraged
                            type: string
                          type: array
                        txtype:
                          description: The type of transaction used to order/deliver
                            this message
                          enum:
                          - none
                          - unpinned
                          - batch_pin
                          - network_action
                          - token_pool
                          - token_transfer
                          - contract_deploy
                          - contract_invoke
                          - contract_invoke_pin
                          - token_approval
                          - data_publish
                          - user_operation_send
                          type: string
                        type:
                          description: The type of the message
                          enum:
                          - definition
                          - broadcast
                          - private
                          - groupinit
                          - transfer_broadcast
                          - transfer_private
                          - approval_broadcast
                          - approval_private
                          type: string
                      type: object
                    idempotencyKey:
                      description: An optional unique identifier for a message. Cannot
                        be duplicated within a namespace, thus allowing idempotent
                        submission of messages to the API. Local only - not transferred
                        when the message is sent to other members of the network
                      type: string
                  type: object
                options:
                  additionalProperties:
                    description: A map of named inputs that will be passed through
                      to the blockchain connector
                  description: A map of named inputs that will be passed through to
                    the blockchain connector
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created:
                    description: The time the operation was created
                    format: date-time
                    type: string
                  data:
                    additionalProperties:
                      description: Operation.data
                    description: Operation.data
                    type: object
                  error:
                    description: Any error reported back from the plugin for this
                      operation
                    type: string
                  id:
                    description: The UUID of the operation
                    format: uuid
                    type: string
                  input:
                    additionalProperties:
                      description: The input to this operation
                    description: The input to this operation
                    type: object
                  namespace:
                    description: The namespace of the operation
                    type: string
                  output:
                    additionalProperties:
                      description: Any output reported back from the plugin for this
                        operation
                    description: Any output reported back from the plugin for this
                      operation
                    type: object
                  plugin:
                    description: The plugin responsible for performing the operation
                    type: string
                  retry:
                    description: If this operation was initiated as a retry to a previous
                      operation, this field points to the UUID of the operation being
                      retried
                    format: uuid
                    type: string
                  status:
                    description: The current status of the operation
                    type: string
                  tx:
                    description: The UUID of the FireFly transaction the operation
                      is part of
                    format: uuid
                    type: string
                  type:
                    description: The type of the operation
                    enum:
                    - blockchain_invoke
                    - user_operation_send
                    type: string
                  updated:
                    description: The last update time of the operation
                    format: date-time
                    type: string
                type: object
          description: Success
        "202":
          content:
            application/json:
              schema:
                properties:
                  created:
                    description: The time the operation was created
                    format: date-time
                    type: string
                  data:
                    additionalProperties:
                      description: Operation.data
                    description: Operation.data
                    type: object
                  error:
                    description: Any error reported back from the plugin for this
                      operation
                    type: string
                  id:
                    description: The UUID of the operation
                    format: uuid
                    type: string
                  input:
                    additionalProperties:
                      description: The input to this operation
                    description: The input to this operation
                    type: object
                  namespace:
                    description: The namespace of the operation
                    type: string
                  output:
                    additionalProperties:
                      description: Any output reported back from the plugin for this
                        operation
                    description: Any output reported back from the plugin for this
                      operation
                    type: object
                  plugin:
                    description: The plugin responsible for performing the operation
                    type: string
                  retry:
                    description: If this operation was initiated as a retry to a previous
                      operation, this field points to the UUID of the operation being
                      retried
                    format: uuid
                    type: string
                  status:
                    description: The current status of the operation
                    type: string
                  tx:
                    description: The UUID of the FireFly transaction the operation
                      is part of
                    format: uuid
                    type: string
                  type:
                    description: The type of the operation
                    enum:
                    - blockchain_invoke
                    - user_operation_send
                    type: string
                  updated:
                    description: The last update time of the operation
                    format: date-time
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - ContractAPIs
  /apis/{apiName}/listeners/{eventPath}:
    get:
      description: Gets a list of contract listeners
      operationId: getContractAPIListeners
      parameters:
      - description: The name of the contract API
        in: path
        name: apiName
        required: true
        schema:
          type: string
      - description: The name or uniquely generated path name of a event on a smart
          contract
        in: path
        name: eventPath
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: backendid
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: filters
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: interface
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: location
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: name
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: signature
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: state
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: topic
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: updated
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      - description: Return a total count as well as items (adds extra database processing)
        in: query
        name: count
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    backendId:
                      description: An ID assigned by the blockchain connector to this
                        listener
                      type: string
                    created:
                      description: The creation time of the listener
                      format: date-time
                      type: string
                    event:
                      description: 'Deprecated: Please use ''event'' in the array
                        of ''filters'' instead'
                      properties:
                        description:
                          description: A description of the smart contract event
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this event from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this event from the original smart contract. Used by the
                            blockchain plugin and for documentation generation.
                          type: object
                        name:
                          description: The name of the event
                          type: string
                        params:
                          description: An array of event parameter/argument definitions
                          items:
                            description: An array of event parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                      type: object
                    filters:
                      description: A list of filters for the contract listener. Each
                        filter is made up of an Event and an optional Location. Events
                        matching these filters will always be emitted in the order
                        determined by the blockchain.
                      items:
                        description: A list of filters for the contract listener.
                          Each filter is made up of an Event and an optional Location.
                          Events matching these filters will always be emitted in
                          the order determined by the blockchain.
                        properties:
                          event:
                            description: The definition of the event, either provided
                              in-line when creating the listener, or extracted from
                              the referenced FFI
                            properties:
                              description:
                                description: A description of the smart contract event
                                type: string
                              details:
                                additionalProperties:
                                  description: Additional blockchain specific fields
                                    about this event from the original smart contract.
                                    Used by the blockchain plugin and for documentation
                                    generation.
                                description: Additional blockchain specific fields
                                  about this event from the original smart contract.
                                  Used by the blockchain plugin and for documentation
                                  generation.
                                type: object
                              name:
                                description: The name of the event
                                type: string
                              params:
                                description: An array of event parameter/argument
                                  definitions
                                items:
                                  description: An array of event parameter/argument
                                    definitions
                                  properties:
                                    name:
                                      description: The name of the parameter. Note
                                        that parameters must be ordered correctly
                                        on the FFI, according to the order in the
                                        blockchain smart contract
                                      type: string
                                    schema:
                                      description: FireFly uses an extended subset
                                        of JSON Schema to describe parameters, similar
                                        to OpenAPI/Swagger. Converters are available
                                        for native blockchain interface definitions
                                        / type systems - such as an Ethereum ABI.
                                        See the documentation for more detail
                                  type: object
                                type: array
                            type: object
                          interface:
                            description: A reference to an existing FFI, containing
                              pre-registered type information for the event
                            properties:
                              id:
                                description: The UUID of the FireFly interface
                                format: uuid
                                type: string
                              name:
                                description: The name of the FireFly interface
                                type: string
                              version:
                                description: The version of the FireFly interface
                                type: string
                            type: object
                          location:
                            description: A blockchain specific contract identifier.
                              For example an Ethereum contract address, or a Fabric
                              chaincode name and channel
                          signature:
                            description: The stringified signature of the event and
                              location, as computed by the blockchain plugin
                            type: string
                        type: object
                      type: array
                    id:
                      description: The UUID of the smart contract listener
                      format: uuid
                      type: string
                    interface:
                      description: 'Deprecated: Please use ''interface'' in the array
                        of ''filters'' instead'
                      properties:
                        id:
                          description: The UUID of the FireFly interface
                          format: uuid
                          type: string
                        name:
                          description: The name of the FireFly interface
                          type: string
                        version:
                          description: The version of the FireFly interface
                          type: string
                      type: object
                    location:
                      description: 'Deprecated: Please use ''location'' in the array
                        of ''filters'' instead'
                    name:
                      description: A descriptive name for the listener
                      type: string
                    namespace:
                      description: The namespace of the listener, which defines the
                        namespace of all blockchain events detected by this listener
                      type: string
                    options:
                      description: Options that control how the listener subscribes
                        to events from the underlying blockchain
                      properties:
                        firstEvent:
                          description: A blockchain specific string, such as a block
                            number, to start listening from. The special strings 'oldest'
                            and 'newest' are supported by all blockchain connectors.
                            Default is 'newest'
                          type: string
                      type: object
                    signature:
                      description: A concatenation of all the stringified signature
                        of the event and location, as computed by the blockchain plugin
                      type: string
                    topic:
                      description: A topic to set on the FireFly event that is emitted
                        each time a blockchain event is detected from the blockchain.
                        Setting this topic on a number of listeners allows applications
                        to easily subscribe to all events they need
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - ContractAPIs
    post:
      description: Creates a new blockchain listener for events emitted by custom
        smart contracts
      operationId: postContractAPIListeners
      parameters:
      - description: The name of the contract API
        in: path
        name: apiName
        required: true
        schema:
          type: string
      - description: The name or uniquely generated path name of a event on a smart
          contract
        in: path
        name: eventPath
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                event:
                  description: 'Deprecated: Please use ''event'' in the array of ''filters''
                    instead'
                  properties:
                    description:
                      description: A description of the smart contract event
                      type: string
                    details:
                      additionalProperties:
                        description: Additional blockchain specific fields about this
                          event from the original smart contract. Used by the blockchain
                          plugin and for documentation generation.
                      description: Additional blockchain specific fields about this
                        event from the original smart contract. Used by the blockchain
                        plugin and for documentation generation.
                      type: object
                    name:
                      description: The name of the event
                      type: string
                    params:
                      description: An array of event parameter/argument definitions
                      items:
                        description: An array of event parameter/argument definitions
                        properties:
                          name:
                            description: The name of the parameter. Note that parameters
                              must be ordered correctly on the FFI, according to the
                              order in the blockchain smart contract
                            type: string
                          schema:
                            description: FireFly uses an extended subset of JSON Schema
                              to describe parameters, similar to OpenAPI/Swagger.
                              Converters are available for native blockchain interface
                              definitions / type systems - such as an Ethereum ABI.
                              See the documentation for more detail
                        type: object
                      type: array
                  type: object
                location:
                  description: 'Deprecated: Please use ''location'' in the array of
                    ''filters'' instead'
                name:
                  description: A descriptive name for the listener
                  type: string
                options:
                  description: Options that control how the listener subscribes to
                    events from the underlying blockchain
                  properties:
                    firstEvent:
                      description: A blockchain specific string, such as a block number,
                        to start listening from. The special strings 'oldest' and
                        'newest' are supported by all blockchain connectors. Default
                        is 'newest'
                      type: string
                  type: object
                topic:
                  description: A topic to set on the FireFly event that is emitted
                    each time a blockchain event is detected from the blockchain.
                    Setting this topic on a number of listeners allows applications
                    to easily subscribe to all events they need
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  backendId:
                    description: An ID assigned by the blockchain connector to this
                      listener
                    type: string
                  created:
                    description: The creation time of the listener
                    format: date-time
                    type: string
                  event:
                    description: 'Deprecated: Please use ''event'' in the array of
                      ''filters'' instead'
                    properties:
                      description:
                        description: A description of the smart contract event
                        type: string
                      details:
                        additionalProperties:
                          description: Additional blockchain specific fields about
                            this event from the original smart contract. Used by the
                            blockchain plugin and for documentation generation.
                        description: Additional blockchain specific fields about this
                          event from the original smart contract. Used by the blockchain
                          plugin and for documentation generation.
                        type: object
                      name:
                        description: The name of the event
                        type: string
                      params:
                        description: An array of event parameter/argument definitions
                        items:
                          description: An array of event parameter/argument definitions
                          properties:
                            name:
                              description: The name of the parameter. Note that parameters
                                must be ordered correctly on the FFI, according to
                                the order in the blockchain smart contract
                              type: string
                            schema:
                              description: FireFly uses an extended subset of JSON
                                Schema to describe parameters, similar to OpenAPI/Swagger.
                                Converters are available for native blockchain interface
                                definitions / type systems - such as an Ethereum ABI.
                                See the documentation for more detail
                          type: object
                        type: array
                    type: object
                  filters:
                    description: A list of filters for the contract listener. Each
                      filter is made up of an Event and an optional Location. Events
                      matching these filters will always be emitted in the order determined
                      by the blockchain.
                    items:
                      description: A list of filters for the contract listener. Each
                        filter is made up of an Event and an optional Location. Events
                        matching these filters will always be emitted in the order
                        determined by the blockchain.
                      properties:
                        event:
                          description: The definition of the event, either provided
                            in-line when creating the listener, or extracted from
                            the referenced FFI
                          properties:
                            description:
                              description: A description of the smart contract event
                              type: string
                            details:
                              additionalProperties:
                                description: Additional blockchain specific fields
                                  about this event from the original smart contract.
                                  Used by the blockchain plugin and for documentation
                                  generation.
                              description: Additional blockchain specific fields about
                                this event from the original smart contract. Used
                                by the blockchain plugin and for documentation generation.
                              type: object
                            name:
                              description: The name of the event
                              type: string
                            params:
                              description: An array of event parameter/argument definitions
                              items:
                                description: An array of event parameter/argument
                                  definitions
                                properties:
                                  name:
                                    description: The name of the parameter. Note that
                                      parameters must be ordered correctly on the
                                      FFI, according to the order in the blockchain
                                      smart contract
                                    type: string
                                  schema:
                                    description: FireFly uses an extended subset of
                                      JSON Schema to describe parameters, similar
                                      to OpenAPI/Swagger. Converters are available
                                      for native blockchain interface definitions
                                      / type systems - such as an Ethereum ABI. See
                                      the documentation for more detail
                                type: object
                              type: array
                          type: object
                        interface:
                          description: A reference to an existing FFI, containing
                            pre-registered type information for the event
                          properties:
                            id:
                              description: The UUID of the FireFly interface
                              format: uuid
                              type: string
                            name:
                              description: The name of the FireFly interface
                              type: string
                            version:
                              description: The version of the FireFly interface
                              type: string
                          type: object
                        location:
                          description: A blockchain specific contract identifier.
                            For example an Ethereum contract address, or a Fabric
                            chaincode name and channel
                        signature:
                          description: The stringified signature of the event and
                            location, as computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  id:
                    description: The UUID of the smart contract listener
                    format: uuid
                    type: string
                  interface:
                    description: 'Deprecated: Please use ''interface'' in the array
                      of ''filters'' instead'
                    properties:
                      id:
                        description: The UUID of the FireFly interface
                        format: uuid
                        type: string
                      name:
                        description: The name of the FireFly interface
                        type: string
                      version:
                        description: The version of the FireFly interface
                        type: string
                    type: object
                  location:
                    description: 'Deprecated: Please use ''location'' in the array
                      of ''filters'' instead'
                  name:
                    description: A descriptive name for the listener
                    type: string
                  namespace:
                    description: The namespace of the listener, which defines the
                      namespace of all blockchain events detected by this listener
                    type: string
                  options:
                    description: Options that control how the listener subscribes
                      to events from the underlying blockchain
                    properties:
                      firstEvent:
                        description: A blockchain specific string, such as a block
                          number, to start listening from. The special strings 'oldest'
                          and 'newest' are supported by all blockchain connectors.
                          Default is 'newest'
                        type: string
                    type: object
                  signature:
                    description: A concatenation of all the stringified signature
                      of the event and location, as computed by the blockchain plugin
                    type: string
                  topic:
                    description: A topic to set on the FireFly event that is emitted
                      each time a blockchain event is detected from the blockchain.
                      Setting this topic on a number of listeners allows applications
                      to easily subscribe to all events they need
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - ContractAPIs
  /apis/{apiName}/publish:
    post:
      description: Publish a contract API to all other members of the multiparty network
      operationId: postContractAPIPublish
      parameters:
      - description: The name of the contract API
        in: path
        name: apiName
        required: true
        schema:
          type: string
      - description: When true the HTTP request blocks until the message is confirmed
        in: query
        name: confirm
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                networkName:
                  description: An optional name to be used for publishing this definition
                    to the multiparty network, which may differ from the local name
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  description:
                    description: A description of the smart contract this FFI represents
                    type: string
                  errors:
                    description: An array of smart contract error definitions
                    items:
                      description: An array of smart contract error definitions
                      properties:
                        description:
                          description: A description of the smart contract error
                          type: string
                        id:
                          description: The UUID of the FFI error definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this error is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the error
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of error parameter/argument definitions
                          items:
                            description: An array of error parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this error within
                            the FFI for use on URL paths
                          type: string
                        signature:
                          description: The stringified signature of the error, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  events:
                    description: An array of smart contract event definitions
                    items:
                      description: An array of smart contract event definitions
                      properties:
                        description:
                          description: A description of the smart contract event
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this event from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this event from the original smart contract. Used by the
                            blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI event definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this event is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the event
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of event parameter/argument definitions
                          items:
                            description: An array of event parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this event within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple event overrides with the same name
                          type: string
                        signature:
                          description: The stringified signature of the event, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  id:
                    description: The UUID of the FireFly interface (FFI) smart contract
                      definition
                    format: uuid
                    type: string
                  message:
                    description: The UUID of the broadcast message that was used to
                      publish this FFI to the network
                    format: uuid
                    type: string
                  methods:
                    description: An array of smart contract method definitions
                    items:
                      description: An array of smart contract method definitions
                      properties:
                        description:
                          description: A description of the smart contract method
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this method from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this method from the original smart contract. Used by
                            the blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI method definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this method is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the method
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of method parameter/argument definitions
                          items:
                            description: An array of method parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this method within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple method overrides with the same name
                          type: string
                        returns:
                          description: An array of method return definitions
                          items:
                            description: An array of method return definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: The name of the FFI - usually matching the smart
                      contract name
                    type: string
                  namespace:
                    description: The namespace of the FFI
                    type: string
                  networkName:
                    description: The published name of the FFI within the multiparty
                      network
                    type: string
                  published:
                    description: Indicates if the FFI is published to other members
                      of the multiparty network
                    type: boolean
                  version:
                    description: A version for the FFI - use of semantic versioning
                      such as 'v1.0.1' is encouraged
                    type: string
                type: object
          description: Success
        "202":
          content:
            application/json:
              schema:
                properties:
                  description:
                    description: A description of the smart contract this FFI represents
                    type: string
                  errors:
                    description: An array of smart contract error definitions
                    items:
                      description: An array of smart contract error definitions
                      properties:
                        description:
                          description: A description of the smart contract error
                          type: string
                        id:
                          description: The UUID of the FFI error definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this error is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the error
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of error parameter/argument definitions
                          items:
                            description: An array of error parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this error within
                            the FFI for use on URL paths
                          type: string
                        signature:
                          description: The stringified signature of the error, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  events:
                    description: An array of smart contract event definitions
                    items:
                      description: An array of smart contract event definitions
                      properties:
                        description:
                          description: A description of the smart contract event
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this event from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this event from the original smart contract. Used by the
                            blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI event definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this event is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the event
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of event parameter/argument definitions
                          items:
                            description: An array of event parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this event within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple event overrides with the same name
                          type: string
                        signature:
                          description: The stringified signature of the event, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  id:
                    description: The UUID of the FireFly interface (FFI) smart contract
                      definition
                    format: uuid
                    type: string
                  message:
                    description: The UUID of the broadcast message that was used to
                      publish this FFI to the network
                    format: uuid
                    type: string
                  methods:
                    description: An array of smart contract method definitions
                    items:
                      description: An array of smart contract method definitions
                      properties:
                        description:
                          description: A description of the smart contract method
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this method from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this method from the original smart contract. Used by
                            the blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI method definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this method is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the method
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of method parameter/argument definitions
                          items:
                            description: An array of method parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this method within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple method overrides with the same name
                          type: string
                        returns:
                          description: An array of method return definitions
                          items:
                            description: An array of method return definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: The name of the FFI - usually matching the smart
                      contract name
                    type: string
                  namespace:
                    description: The namespace of the FFI
                    type: string
                  networkName:
                    description: The published name of the FFI within the multiparty
                      network
                    type: string
                  published:
                    description: Indicates if the FFI is published to other members
                      of the multiparty network
                    type: boolean
                  version:
                    description: A version for the FFI - use of semantic versioning
                      such as 'v1.0.1' is encouraged
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - ContractAPIs
  /apis/{apiName}/query/{methodPath}:
    post:
      description: Queries a method on a smart contract API. Performs a read-only
        query.
      operationId: postContractAPIQuery
      parameters:
      - description: The name of the contract API
        in: path
        name: apiName
        required: true
        schema:
          type: string
      - description: The name or uniquely generated path name of a method on a smart
          contract
        in: path
        name: methodPath
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  additionalProperties:
                    description: ContractCallRequest.data
                  description: ContractCallRequest.data
                  type: object
                idempotencyKey:
                  description: An optional identifier to allow idempotent submission
                    of requests. Stored on the transaction uniquely within a namespace
                  type: string
                input:
                  additionalProperties:
                    description: A map of named inputs. The name and type of each
                      input must be compatible with the FFI description of the method,
                      so that FireFly knows how to serialize it to the blockchain
                      via the connector
                  description: A map of named inputs. The name and type of each input
                    must be compatible with the FFI description of the method, so
                    that FireFly knows how to serialize it to the blockchain via the
                    connector
                  type: object
                key:
                  description: The blockchain signing key that will sign the invocation.
                    Defaults to the first signing key of the organization that operates
                    the node
                  type: string
                location:
                  description: A blockchain specific contract identifier. For example
                    an Ethereum contract address, or a Fabric chaincode name and channel
                options:
                  additionalProperties:
                    description: A map of named inputs that will be passed through
                      to the blockchain connector
                  description: A map of named inputs that will be passed through to
                    the blockchain connector
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: {}
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - ContractAPIs
  /blockchainevents:
    get:
      description: Gets a list of blockchain events
      operationId: getBlockchainEvents
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: listener
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: name
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: protocolid
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: source
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: timestamp
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: tx.blockchainid
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: tx.id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: tx.type
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      - description: Return a total count as well as items (adds extra database processing)
        in: query
        name: count
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      description: The UUID assigned to the event by FireFly
                      format: uuid
                      type: string
                    info:
                      additionalProperties:
                        description: Detailed blockchain specific information about
                          the event, as generated by the blockchain connector
                      description: Detailed blockchain specific information about
                        the event, as generated by the blockchain connector
                      type: object
                    listener:
                      description: The UUID of the listener that detected this event,
                        or nil for built-in events in the system namespace
                      format: uuid
                      type: string
                    name:
                      description: The name of the event in the blockchain smart contract
                      type: string
                    namespace:
                      description: The namespace of the listener that detected this
                        blockchain event
                      type: string
                    output:
                      additionalProperties:
                        description: The data output by the event, parsed to JSON
                          according to the interface of the smart contract
                      description: The data output by the event, parsed to JSON according
                        to the interface of the smart contract
                      type: object
                    protocolId:
                      description: An alphanumerically sortable string that represents
                        this event uniquely on the blockchain (convention for plugins
                        is zero-padded values BLOCKNUMBER/TXN_INDEX/EVENT_INDEX)
                      type: string
                    source:
                      description: The blockchain plugin or token service that detected
                        the event
                      type: string
                    timestamp:
                      description: The time allocated to this event by the blockchain.
                        This is the block timestamp for most blockchain connectors
                      format: date-time
                      type: string
                    tx:
                      description: If this blockchain event is coorelated to FireFly
                        transaction such as a FireFly submitted token transfer, this
                        field is set to the UUID of the FireFly transaction
                      properties:
                        blockchainId:
                          description: The blockchain transaction ID, in the format
                            specific to the blockchain involved in the transaction.
                            Not all FireFly transactions include a blockchain
                          type: string
                        id:
                          description: The UUID of the FireFly transaction
                          format: uuid
                          type: string
                        type:
                          description: The type of the FireFly transaction
                          type: string
                      type: object
                  type: object
                type: array
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - BlockchainEvents
  /blockchainevents/{id}:
    get:
      description: Gets a blockchain event
      operationId: getBlockchainEventByID
      parameters:
      - description: The blockchain event ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    description: The UUID assigned to the event by FireFly
                    format: uuid
                    type: string
                  info:
                    additionalProperties:
                      description: Detailed blockchain specific information about
                        the event, as generated by the blockchain connector
                    description: Detailed blockchain specific information about the
                      event, as generated by the blockchain connector
                    type: object
                  listener:
                    description: The UUID of the listener that detected this event,
                      or nil for built-in events in the system namespace
                    format: uuid
                    type: string
                  name:
                    description: The name of the event in the blockchain smart contract
                    type: string
                  namespace:
                    description: The namespace of the listener that detected this
                      blockchain event
                    type: string
                  output:
                    additionalProperties:
                      description: The data output by the event, parsed to JSON according
                        to the interface of the smart contract
                    description: The data output by the event, parsed to JSON according
                      to the interface of the smart contract
                    type: object
                  protocolId:
                    description: An alphanumerically sortable string that represents
                      this event uniquely on the blockchain (convention for plugins
                      is zero-padded values BLOCKNUMBER/TXN_INDEX/EVENT_INDEX)
                    type: string
                  source:
                    description: The blockchain plugin or token service that detected
                      the event
                    type: string
                  timestamp:
                    description: The time allocated to this event by the blockchain.
                      This is the block timestamp for most blockchain connectors
                    format: date-time
                    type: string
                  tx:
                    description: If this blockchain event is coorelated to FireFly
                      transaction such as a FireFly submitted token transfer, this
                      field is set to the UUID of the FireFly transaction
                    properties:
                      blockchainId:
                        description: The blockchain transaction ID, in the format
                          specific to the blockchain involved in the transaction.
                          Not all FireFly transactions include a blockchain
                        type: string
                      id:
                        description: The UUID of the FireFly transaction
                        format: uuid
                        type: string
                      type:
                        description: The type of the FireFly transaction
                        type: string
                    type: object
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - BlockchainEvents
  /charts/histogram/{collection}:
    get:
      description: Gets a JSON object containing statistics data that can be used
        to build a graphical representation of recent activity in a given database
        collection
      operationId: getChartHistogram
      parameters:
      - description: The collection ID
        in: path
        name: collection
        required: true
        schema:
          type: string
      - description: Start time of the data to be fetched
        in: query
        name: startTime
        schema:
          type: string
      - description: End time of the data to be fetched
        in: query
        name: endTime
        schema:
          type: string
      - description: Number of buckets between start time and end time
        in: query
        name: buckets
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    count:
                      description: Total count of entries in this time bucket within
                        the histogram
                      type: string
                    isCapped:
                      description: Indicates whether there are more results in this
                        bucket that are not being displayed
                      type: boolean
                    timestamp:
                      description: Starting timestamp for the bucket
                      format: date-time
                      type: string
                    types:
                      description: Array of separate counts for individual types of
                        record within the bucket
                      items:
                        description: Array of separate counts for individual types
                          of record within the bucket
                        properties:
                          count:
                            description: Count of entries of a given type within a
                              bucket
                            type: string
                          type:
                            description: Name of the type
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - ChartHistogram
  /contracts/interfaces:
    get:
      description: Gets a list of contract interfaces that have been published
      operationId: getContractInterfaces
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: name
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: networkname
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: published
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: version
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      - description: Return a total count as well as items (adds extra database processing)
        in: query
        name: count
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    description:
                      description: A description of the smart contract this FFI represents
                      type: string
                    errors:
                      description: An array of smart contract error definitions
                      items:
                        description: An array of smart contract error definitions
                        properties:
                          description:
                            description: A description of the smart contract error
                            type: string
                          id:
                            description: The UUID of the FFI error definition
                            format: uuid
                            type: string
                          interface:
                            description: The UUID of the FFI smart contract definition
                              that this error is part of
                            format: uuid
                            type: string
                          name:
                            description: The name of the error
                            type: string
                          namespace:
                            description: The namespace of the FFI
                            type: string
                          params:
                            description: An array of error parameter/argument definitions
                            items:
                              description: An array of error parameter/argument definitions
                              properties:
                                name:
                                  description: The name of the parameter. Note that
                                    parameters must be ordered correctly on the FFI,
                                    according to the order in the blockchain smart
                                    contract
                                  type: string
                                schema:
                                  description: FireFly uses an extended subset of
                                    JSON Schema to describe parameters, similar to
                                    OpenAPI/Swagger. Converters are available for
                                    native blockchain interface definitions / type
                                    systems - such as an Ethereum ABI. See the documentation
                                    for more detail
                              type: object
                            type: array
                          pathname:
                            description: The unique name allocated to this error within
                              the FFI for use on URL paths
                            type: string
                          signature:
                            description: The stringified signature of the error, as
                              computed by the blockchain plugin
                            type: string
                        type: object
                      type: array
                    events:
                      description: An array of smart contract event definitions
                      items:
                        description: An array of smart contract event definitions
                        properties:
                          description:
                            description: A description of the smart contract event
                            type: string
                          details:
                            additionalProperties:
                              description: Additional blockchain specific fields about
                                this event from the original smart contract. Used
                                by the blockchain plugin and for documentation generation.
                            description: Additional blockchain specific fields about
                              this event from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                            type: object
                          id:
                            description: The UUID of the FFI event definition
                            format: uuid
                            type: string
                          interface:
                            description: The UUID of the FFI smart contract definition
                              that this event is part of
                            format: uuid
                            type: string
                          name:
                            description: The name of the event
                            type: string
                          namespace:
                            description: The namespace of the FFI
                            type: string
                          params:
                            description: An array of event parameter/argument definitions
                            items:
                              description: An array of event parameter/argument definitions
                              properties:
                                name:
                                  description: The name of the parameter. Note that
                                    parameters must be ordered correctly on the FFI,
                                    according to the order in the blockchain smart
                                    contract
                                  type: string
                                schema:
                                  description: FireFly uses an extended subset of
                                    JSON Schema to describe parameters, similar to
                                    OpenAPI/Swagger. Converters are available for
                                    native blockchain interface definitions / type
                                    systems - such as an Ethereum ABI. See the documentation
                                    for more detail
                              type: object
                            type: array
                          pathname:
                            description: The unique name allocated to this event within
                              the FFI for use on URL paths. Supports contracts that
                              have multiple event overrides with the same name
                            type: string
                          signature:
                            description: The stringified signature of the event, as
                              computed by the blockchain plugin
                            type: string
                        type: object
                      type: array
                    id:
                      description: The UUID of the FireFly interface (FFI) smart contract
                        definition
                      format: uuid
                      type: string
                    message:
                      description: The UUID of the broadcast message that was used
                        to publish this FFI to the network
                      format: uuid
                      type: string
                    methods:
                      description: An array of smart contract method definitions
                      items:
                        description: An array of smart contract method definitions
                        properties:
                          description:
                            description: A description of the smart contract method
                            type: string
                          details:
                            additionalProperties:
                              description: Additional blockchain specific fields about
                                this method from the original smart contract. Used
                                by the blockchain plugin and for documentation generation.
                            description: Additional blockchain specific fields about
                              this method from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                            type: object
                          id:
                            description: The UUID of the FFI method definition
                            format: uuid
                            type: string
                          interface:
                            description: The UUID of the FFI smart contract definition
                              that this method is part of
                            format: uuid
                            type: string
                          name:
                            description: The name of the method
                            type: string
                          namespace:
                            description: The namespace of the FFI
                            type: string
                          params:
                            description: An array of method parameter/argument definitions
                            items:
                              description: An array of method parameter/argument definitions
                              properties:
                                name:
                                  description: The name of the parameter. Note that
                                    parameters must be ordered correctly on the FFI,
                                    according to the order in the blockchain smart
                                    contract
                                  type: string
                                schema:
                                  description: FireFly uses an extended subset of
                                    JSON Schema to describe parameters, similar to
                                    OpenAPI/Swagger. Converters are available for
                                    native blockchain interface definitions / type
                                    systems - such as an Ethereum ABI. See the documentation
                                    for more detail
                              type: object
                            type: array
                          pathname:
                            description: The unique name allocated to this method
                              within the FFI for use on URL paths. Supports contracts
                              that have multiple method overrides with the same name
                            type: string
                          returns:
                            description: An array of method return definitions
                            items:
                              description: An array of method return definitions
                              properties:
                                name:
                                  description: The name of the parameter. Note that
                                    parameters must be ordered correctly on the FFI,
                                    according to the order in the blockchain smart
                                    contract
                                  type: string
                                schema:
                                  description: FireFly uses an extended subset of
                                    JSON Schema to describe parameters, similar to
                                    OpenAPI/Swagger. Converters are available for
                                    native blockchain interface definitions / type
                                    systems - such as an Ethereum ABI. See the documentation
                                    for more detail
                              type: object
                            type: array
                        type: object
                      type: array
                    name:
                      description: The name of the FFI - usually matching the smart
                        contract name
                      type: string
                    namespace:
                      description: The namespace of the FFI
                      type: string
                    networkName:
                      description: The published name of the FFI within the multiparty
                        network
                      type: string
                    published:
                      description: Indicates if the FFI is published to other members
                        of the multiparty network
                      type: boolean
                    version:
                      description: A version for the FFI - use of semantic versioning
                        such as 'v1.0.1' is encouraged
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Contracts
    post:
      description: Creates and broadcasts a new custom smart contract interface
      operationId: postNewContractInterface
      parameters:
      - description: When true the HTTP request blocks until the message is confirmed
        in: query
        name: confirm
        schema:
          example: "true"
          type: string
      - description: When true the definition will be published to all other members
          of the multiparty network
        in: query
        name: publish
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: A description of the smart contract this FFI represents
                  type: string
                errors:
                  description: An array of smart contract error definitions
                  items:
                    description: An array of smart contract error definitions
                    properties:
                      description:
                        description: A description of the smart contract error
                        type: string
                      name:
                        description: The name of the error
                        type: string
                      params:
                        description: An array of error parameter/argument definitions
                        items:
                          description: An array of error parameter/argument definitions
                          properties:
                            name:
                              description: The name of the parameter. Note that parameters
                                must be ordered correctly on the FFI, according to
                                the order in the blockchain smart contract
                              type: string
                            schema:
                              description: FireFly uses an extended subset of JSON
                                Schema to describe parameters, similar to OpenAPI/Swagger.
                                Converters are available for native blockchain interface
                                definitions / type systems - such as an Ethereum ABI.
                                See the documentation for more detail
                          type: object
                        type: array
                    type: object
                  type: array
                events:
                  description: An array of smart contract event definitions
                  items:
                    description: An array of smart contract event definitions
                    properties:
                      description:
                        description: A description of the smart contract event
                        type: string
                      details:
                        additionalProperties:
                          description: Additional blockchain specific fields about
                            this event from the original smart contract. Used by the
                            blockchain plugin and for documentation generation.
                        description: Additional blockchain specific fields about this
                          event from the original smart contract. Used by the blockchain
                          plugin and for documentation generation.
                        type: object
                      name:
                        description: The name of the event
                        type: string
                      params:
                        description: An array of event parameter/argument definitions
                        items:
                          description: An array of event parameter/argument definitions
                          properties:
                            name:
                              description: The name of the parameter. Note that parameters
                                must be ordered correctly on the FFI, according to
                                the order in the blockchain smart contract
                              type: string
                            schema:
                              description: FireFly uses an extended subset of JSON
                                Schema to describe parameters, similar to OpenAPI/Swagger.
                                Converters are available for native blockchain interface
                                definitions / type systems - such as an Ethereum ABI.
                                See the documentation for more detail
                          type: object
                        type: array
                    type: object
                  type: array
                methods:
                  description: An array of smart contract method definitions
                  items:
                    description: An array of smart contract method definitions
                    properties:
                      description:
                        description: A description of the smart contract method
                        type: string
                      details:
                        additionalProperties:
                          description: Additional blockchain specific fields about
                            this method from the original smart contract. Used by
                            the blockchain plugin and for documentation generation.
                        description: Additional blockchain specific fields about this
                          method from the original smart contract. Used by the blockchain
                          plugin and for documentation generation.
                        type: object
                      name:
                        description: The name of the method
                        type: string
                      params:
                        description: An array of method parameter/argument definitions
                        items:
                          description: An array of method parameter/argument definitions
                          properties:
                            name:
                              description: The name of the parameter. Note that parameters
                                must be ordered correctly on the FFI, according to
                                the order in the blockchain smart contract
                              type: string
                            schema:
                              description: FireFly uses an extended subset of JSON
                                Schema to describe parameters, similar to OpenAPI/Swagger.
                                Converters are available for native blockchain interface
                                definitions / type systems - such as an Ethereum ABI.
                                See the documentation for more detail
                          type: object
                        type: array
                      returns:
                        description: An array of method return definitions
                        items:
                          description: An array of method return definitions
                          properties:
                            name:
                              description: The name of the parameter. Note that parameters
                                must be ordered correctly on the FFI, according to
                                the order in the blockchain smart contract
                              type: string
                            schema:
                              description: FireFly uses an extended subset of JSON
                                Schema to describe parameters, similar to OpenAPI/Swagger.
                                Converters are available for native blockchain interface
                                definitions / type systems - such as an Ethereum ABI.
                                See the documentation for more detail
                          type: object
                        type: array
                    type: object
                  type: array
                name:
                  description: The name of the FFI - usually matching the smart contract
                    name
                  type: string
                networkName:
                  description: The published name of the FFI within the multiparty
                    network
                  type: string
                version:
                  description: A version for the FFI - use of semantic versioning
                    such as 'v1.0.1' is encouraged
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  description:
                    description: A description of the smart contract this FFI represents
                    type: string
                  errors:
                    description: An array of smart contract error definitions
                    items:
                      description: An array of smart contract error definitions
                      properties:
                        description:
                          description: A description of the smart contract error
                          type: string
                        id:
                          description: The UUID of the FFI error definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this error is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the error
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of error parameter/argument definitions
                          items:
                            description: An array of error parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this error within
                            the FFI for use on URL paths
                          type: string
                        signature:
                          description: The stringified signature of the error, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  events:
                    description: An array of smart contract event definitions
                    items:
                      description: An array of smart contract event definitions
                      properties:
                        description:
                          description: A description of the smart contract event
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this event from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this event from the original smart contract. Used by the
                            blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI event definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this event is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the event
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of event parameter/argument definitions
                          items:
                            description: An array of event parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this event within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple event overrides with the same name
                          type: string
                        signature:
                          description: The stringified signature of the event, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  id:
                    description: The UUID of the FireFly interface (FFI) smart contract
                      definition
                    format: uuid
                    type: string
                  message:
                    description: The UUID of the broadcast message that was used to
                      publish this FFI to the network
                    format: uuid
                    type: string
                  methods:
                    description: An array of smart contract method definitions
                    items:
                      description: An array of smart contract method definitions
                      properties:
                        description:
                          description: A description of the smart contract method
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this method from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this method from the original smart contract. Used by
                            the blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI method definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this method is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the method
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of method parameter/argument definitions
                          items:
                            description: An array of method parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this method within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple method overrides with the same name
                          type: string
                        returns:
                          description: An array of method return definitions
                          items:
                            description: An array of method return definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: The name of the FFI - usually matching the smart
                      contract name
                    type: string
                  namespace:
                    description: The namespace of the FFI
                    type: string
                  networkName:
                    description: The published name of the FFI within the multiparty
                      network
                    type: string
                  published:
                    description: Indicates if the FFI is published to other members
                      of the multiparty network
                    type: boolean
                  version:
                    description: A version for the FFI - use of semantic versioning
                      such as 'v1.0.1' is encouraged
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Contracts
  /contracts/interfaces/{interfaceId}:
    delete:
      description: Delete a contract interface
      operationId: deleteContractInterface
      parameters:
      - description: The ID of the contract interface
        in: path
        name: interfaceId
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "204":
          content:
            application/json: {}
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Contracts
    get:
      description: Gets a contract interface by its ID
      operationId: getContractInterface
      parameters:
      - description: The ID of the contract interface
        in: path
        name: interfaceId
        required: true
        schema:
          type: string
      - description: When set, the API will return the full FireFly Interface document
          including all methods, events, and parameters
        in: query
        name: fetchchildren
        schema:
          example: "true"
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  description:
                    description: A description of the smart contract this FFI represents
                    type: string
                  errors:
                    description: An array of smart contract error definitions
                    items:
                      description: An array of smart contract error definitions
                      properties:
                        description:
                          description: A description of the smart contract error
                          type: string
                        id:
                          description: The UUID of the FFI error definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this error is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the error
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of error parameter/argument definitions
                          items:
                            description: An array of error parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this error within
                            the FFI for use on URL paths
                          type: string
                        signature:
                          description: The stringified signature of the error, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  events:
                    description: An array of smart contract event definitions
                    items:
                      description: An array of smart contract event definitions
                      properties:
                        description:
                          description: A description of the smart contract event
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this event from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this event from the original smart contract. Used by the
                            blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI event definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this event is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the event
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of event parameter/argument definitions
                          items:
                            description: An array of event parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this event within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple event overrides with the same name
                          type: string
                        signature:
                          description: The stringified signature of the event, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  id:
                    description: The UUID of the FireFly interface (FFI) smart contract
                      definition
                    format: uuid
                    type: string
                  message:
                    description: The UUID of the broadcast message that was used to
                      publish this FFI to the network
                    format: uuid
                    type: string
                  methods:
                    description: An array of smart contract method definitions
                    items:
                      description: An array of smart contract method definitions
                      properties:
                        description:
                          description: A description of the smart contract method
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this method from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this method from the original smart contract. Used by
                            the blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI method definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this method is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the method
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of method parameter/argument definitions
                          items:
                            description: An array of method parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this method within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple method overrides with the same name
                          type: string
                        returns:
                          description: An array of method return definitions
                          items:
                            description: An array of method return definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: The name of the FFI - usually matching the smart
                      contract name
                    type: string
                  namespace:
                    description: The namespace of the FFI
                    type: string
                  networkName:
                    description: The published name of the FFI within the multiparty
                      network
                    type: string
                  published:
                    description: Indicates if the FFI is published to other members
                      of the multiparty network
                    type: boolean
                  version:
                    description: A version for the FFI - use of semantic versioning
                      such as 'v1.0.1' is encouraged
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Contracts
  /contracts/interfaces/{name}/{version}:
    get:
      description: Gets a contract interface by its name and version
      operationId: getContractInterfaceByNameAndVersion
      parameters:
      - description: The name of the contract interface
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The version of the contract interface
        in: path
        name: version
        required: true
        schema:
          type: string
      - description: When set, the API will return the full FireFly Interface document
          including all methods, events, and parameters
        in: query
        name: fetchchildren
        schema:
          example: "true"
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  description:
                    description: A description of the smart contract this FFI represents
                    type: string
                  errors:
                    description: An array of smart contract error definitions
                    items:
                      description: An array of smart contract error definitions
                      properties:
                        description:
                          description: A description of the smart contract error
                          type: string
                        id:
                          description: The UUID of the FFI error definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this error is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the error
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of error parameter/argument definitions
                          items:
                            description: An array of error parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this error within
                            the FFI for use on URL paths
                          type: string
                        signature:
                          description: The stringified signature of the error, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  events:
                    description: An array of smart contract event definitions
                    items:
                      description: An array of smart contract event definitions
                      properties:
                        description:
                          description: A description of the smart contract event
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this event from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this event from the original smart contract. Used by the
                            blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI event definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this event is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the event
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of event parameter/argument definitions
                          items:
                            description: An array of event parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this event within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple event overrides with the same name
                          type: string
                        signature:
                          description: The stringified signature of the event, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  id:
                    description: The UUID of the FireFly interface (FFI) smart contract
                      definition
                    format: uuid
                    type: string
                  message:
                    description: The UUID of the broadcast message that was used to
                      publish this FFI to the network
                    format: uuid
                    type: string
                  methods:
                    description: An array of smart contract method definitions
                    items:
                      description: An array of smart contract method definitions
                      properties:
                        description:
                          description: A description of the smart contract method
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this method from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this method from the original smart contract. Used by
                            the blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI method definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this method is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the method
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of method parameter/argument definitions
                          items:
                            description: An array of method parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this method within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple method overrides with the same name
                          type: string
                        returns:
                          description: An array of method return definitions
                          items:
                            description: An array of method return definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: The name of the FFI - usually matching the smart
                      contract name
                    type: string
                  namespace:
                    description: The namespace of the FFI
                    type: string
                  networkName:
                    description: The published name of the FFI within the multiparty
                      network
                    type: string
                  published:
                    description: Indicates if the FFI is published to other members
                      of the multiparty network
                    type: boolean
                  version:
                    description: A version for the FFI - use of semantic versioning
                      such as 'v1.0.1' is encouraged
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Contracts
  /contracts/interfaces/{name}/{version}/publish:
    post:
      description: Publish a contract interface to all other members of the multiparty
        network
      operationId: postContractInterfacePublish
      parameters:
      - description: The name of the contract interface
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The version of the contract interface
        in: path
        name: version
        required: true
        schema:
          type: string
      - description: When true the HTTP request blocks until the message is confirmed
        in: query
        name: confirm
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                networkName:
                  description: An optional name to be used for publishing this definition
                    to the multiparty network, which may differ from the local name
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  description:
                    description: A description of the smart contract this FFI represents
                    type: string
                  errors:
                    description: An array of smart contract error definitions
                    items:
                      description: An array of smart contract error definitions
                      properties:
                        description:
                          description: A description of the smart contract error
                          type: string
                        id:
                          description: The UUID of the FFI error definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this error is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the error
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of error parameter/argument definitions
                          items:
                            description: An array of error parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this error within
                            the FFI for use on URL paths
                          type: string
                        signature:
                          description: The stringified signature of the error, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  events:
                    description: An array of smart contract event definitions
                    items:
                      description: An array of smart contract event definitions
                      properties:
                        description:
                          description: A description of the smart contract event
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this event from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this event from the original smart contract. Used by the
                            blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI event definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this event is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the event
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of event parameter/argument definitions
                          items:
                            description: An array of event parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this event within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple event overrides with the same name
                          type: string
                        signature:
                          description: The stringified signature of the event, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  id:
                    description: The UUID of the FireFly interface (FFI) smart contract
                      definition
                    format: uuid
                    type: string
                  message:
                    description: The UUID of the broadcast message that was used to
                      publish this FFI to the network
                    format: uuid
                    type: string
                  methods:
                    description: An array of smart contract method definitions
                    items:
                      description: An array of smart contract method definitions
                      properties:
                        description:
                          description: A description of the smart contract method
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this method from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this method from the original smart contract. Used by
                            the blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI method definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this method is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the method
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of method parameter/argument definitions
                          items:
                            description: An array of method parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this method within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple method overrides with the same name
                          type: string
                        returns:
                          description: An array of method return definitions
                          items:
                            description: An array of method return definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: The name of the FFI - usually matching the smart
                      contract name
                    type: string
                  namespace:
                    description: The namespace of the FFI
                    type: string
                  networkName:
                    description: The published name of the FFI within the multiparty
                      network
                    type: string
                  published:
                    description: Indicates if the FFI is published to other members
                      of the multiparty network
                    type: boolean
                  version:
                    description: A version for the FFI - use of semantic versioning
                      such as 'v1.0.1' is encouraged
                    type: string
                type: object
          description: Success
        "202":
          content:
            application/json:
              schema:
                properties:
                  description:
                    description: A description of the smart contract this FFI represents
                    type: string
                  errors:
                    description: An array of smart contract error definitions
                    items:
                      description: An array of smart contract error definitions
                      properties:
                        description:
                          description: A description of the smart contract error
                          type: string
                        id:
                          description: The UUID of the FFI error definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this error is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the error
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of error parameter/argument definitions
                          items:
                            description: An array of error parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this error within
                            the FFI for use on URL paths
                          type: string
                        signature:
                          description: The stringified signature of the error, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  events:
                    description: An array of smart contract event definitions
                    items:
                      description: An array of smart contract event definitions
                      properties:
                        description:
                          description: A description of the smart contract event
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this event from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this event from the original smart contract. Used by the
                            blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI event definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this event is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the event
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of event parameter/argument definitions
                          items:
                            description: An array of event parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this event within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple event overrides with the same name
                          type: string
                        signature:
                          description: The stringified signature of the event, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  id:
                    description: The UUID of the FireFly interface (FFI) smart contract
                      definition
                    format: uuid
                    type: string
                  message:
                    description: The UUID of the broadcast message that was used to
                      publish this FFI to the network
                    format: uuid
                    type: string
                  methods:
                    description: An array of smart contract method definitions
                    items:
                      description: An array of smart contract method definitions
                      properties:
                        description:
                          description: A description of the smart contract method
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this method from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this method from the original smart contract. Used by
                            the blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI method definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this method is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the method
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of method parameter/argument definitions
                          items:
                            description: An array of method parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this method within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple method overrides with the same name
                          type: string
                        returns:
                          description: An array of method return definitions
                          items:
                            description: An array of method return definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: The name of the FFI - usually matching the smart
                      contract name
                    type: string
                  namespace:
                    description: The namespace of the FFI
                    type: string
                  networkName:
                    description: The published name of the FFI within the multiparty
                      network
                    type: string
                  published:
                    description: Indicates if the FFI is published to other members
                      of the multiparty network
                    type: boolean
                  version:
                    description: A version for the FFI - use of semantic versioning
                      such as 'v1.0.1' is encouraged
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Contracts
  /contracts/interfaces/generate:
    post:
      description: A convenience method to convert a blockchain specific smart contract
        format into a FireFly Interface format. The specific blockchain plugin in
        use must support this functionality.
      operationId: postGenerateContractInterface
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  description: The description of the FFI to be generated. Defaults
                    to the description extracted by the blockchain specific converter
                    utility
                  type: string
                input:
                  description: A blockchain connector specific payload. For example
                    in Ethereum this is a JSON structure containing an 'abi' array,
                    and optionally a 'devdocs' array.
                name:
                  description: The name of the FFI to generate
                  type: string
                namespace:
                  description: The namespace into which the FFI will be generated
                  type: string
                version:
                  description: The version of the FFI to generate
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  description:
                    description: A description of the smart contract this FFI represents
                    type: string
                  errors:
                    description: An array of smart contract error definitions
                    items:
                      description: An array of smart contract error definitions
                      properties:
                        description:
                          description: A description of the smart contract error
                          type: string
                        id:
                          description: The UUID of the FFI error definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this error is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the error
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of error parameter/argument definitions
                          items:
                            description: An array of error parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this error within
                            the FFI for use on URL paths
                          type: string
                        signature:
                          description: The stringified signature of the error, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  events:
                    description: An array of smart contract event definitions
                    items:
                      description: An array of smart contract event definitions
                      properties:
                        description:
                          description: A description of the smart contract event
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this event from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this event from the original smart contract. Used by the
                            blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI event definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this event is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the event
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of event parameter/argument definitions
                          items:
                            description: An array of event parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this event within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple event overrides with the same name
                          type: string
                        signature:
                          description: The stringified signature of the event, as
                            computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  id:
                    description: The UUID of the FireFly interface (FFI) smart contract
                      definition
                    format: uuid
                    type: string
                  message:
                    description: The UUID of the broadcast message that was used to
                      publish this FFI to the network
                    format: uuid
                    type: string
                  methods:
                    description: An array of smart contract method definitions
                    items:
                      description: An array of smart contract method definitions
                      properties:
                        description:
                          description: A description of the smart contract method
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this method from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this method from the original smart contract. Used by
                            the blockchain plugin and for documentation generation.
                          type: object
                        id:
                          description: The UUID of the FFI method definition
                          format: uuid
                          type: string
                        interface:
                          description: The UUID of the FFI smart contract definition
                            that this method is part of
                          format: uuid
                          type: string
                        name:
                          description: The name of the method
                          type: string
                        namespace:
                          description: The namespace of the FFI
                          type: string
                        params:
                          description: An array of method parameter/argument definitions
                          items:
                            description: An array of method parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                        pathname:
                          description: The unique name allocated to this method within
                            the FFI for use on URL paths. Supports contracts that
                            have multiple method overrides with the same name
                          type: string
                        returns:
                          description: An array of method return definitions
                          items:
                            description: An array of method return definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: The name of the FFI - usually matching the smart
                      contract name
                    type: string
                  namespace:
                    description: The namespace of the FFI
                    type: string
                  networkName:
                    description: The published name of the FFI within the multiparty
                      network
                    type: string
                  published:
                    description: Indicates if the FFI is published to other members
                      of the multiparty network
                    type: boolean
                  version:
                    description: A version for the FFI - use of semantic versioning
                      such as 'v1.0.1' is encouraged
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Contracts
  /contracts/invoke:
    post:
      description: Invokes a method on a smart contract. Performs a blockchain transaction.
      operationId: postContractInvoke
      parameters:
      - description: When true the HTTP request blocks until the blockchain transaction
          is confirmed
        in: query
        name: confirm
        schema:
          example: "true"
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  additionalProperties:
                    description: ContractCallRequest.data
                  description: ContractCallRequest.data
                  type: object
                errors:
                  description: An in-line FFI errors definition for the method to
                    invoke. Alternative to specifying FFI
                  items:
                    description: An in-line FFI errors definition for the method to
                      invoke. Alternative to specifying FFI
                    properties:
                      description:
                        description: A description of the smart contract error
                        type: string
                      name:
                        description: The name of the error
                        type: string
                      params:
                        description: An array of error parameter/argument definitions
                        items:
                          description: An array of error parameter/argument definitions
                          properties:
                            name:
                              description: The name of the parameter. Note that parameters
                                must be ordered correctly on the FFI, according to
                                the order in the blockchain smart contract
                              type: string
                            schema:
                              description: FireFly uses an extended subset of JSON
                                Schema to describe parameters, similar to OpenAPI/Swagger.
                                Converters are available for native blockchain interface
                                definitions / type systems - such as an Ethereum ABI.
                                See the documentation for more detail
                          type: object
                        type: array
                    type: object
                  type: array
                idempotencyKey:
                  description: An optional identifier to allow idempotent submission
                    of requests. Stored on the transaction uniquely within a namespace
                  type: string
                input:
                  additionalProperties:
                    description: A map of named inputs. The name and type of each
                      input must be compatible with the FFI description of the method,
                      so that FireFly knows how to serialize it to the blockchain
                      via the connector
                  description: A map of named inputs. The name and type of each input
                    must be compatible with the FFI description of the method, so
                    that FireFly knows how to serialize it to the blockchain via the
                    connector
                  type: object
                interface:
                  description: The UUID of a method within a pre-configured FireFly
                    interface (FFI) definition for a smart contract. Required if the
                    'method' is omitted. Also see Contract APIs as a way to configure
                    a dedicated API for your FFI, including all methods and an OpenAPI/Swagger
                    interface
                  format: uuid
                  type: string
                key:
                  description: The blockchain signing key that will sign the invocation.
                    Defaults to the first signing key of the organization that operates
                    the node
                  type: string
                location:
                  description: A blockchain specific contract identifier. For example
                    an Ethereum contract address, or a Fabric chaincode name and channel
                message:
                  description: You can specify a message to correlate with the invocation,
                    which can be of type broadcast or private. Your specified method
                    must support on-chain/off-chain correlation by taking a data input
                    on the call
                  properties:
                    data:
                      description: For input allows you to specify data in-line in
                        the message, that will be turned into data attachments. For
                        output when fetchdata is used on API calls, includes the in-line
                        data payloads of all data attachments
                      items:
                        description: For input allows you to specify data in-line
                          in the message, that will be turned into data attachments.
                          For output when fetchdata is used on API calls, includes
                          the in-line data payloads of all data attachments
                        properties:
                          datatype:
                            description: The optional datatype to use for validation
                              of the in-line data
                            properties:
                              name:
                                description: The name of the datatype
                                type: string
                              version:
                                description: The version of the datatype. Semantic
                                  versioning is encouraged, such as v1.0.1
                                type: string
                            type: object
                          id:
                            description: The UUID of the referenced data resource
                            format: uuid
                            type: string
                          validator:
                            description: The data validator type to use for in-line
                              data
                            type: string
                          value:
                            description: The in-line value for the data. Can be any
                              JSON type - object, array, string, number or boolean
                        type: object
                      type: array
                    group:
                      description: Allows you to specify details of the private group
                        of recipients in-line in the message. Alternative to using
                        the header.group to specify the hash of a group that has been
                        previously resolved
                      properties:
                        members:
                          description: An array of members of the group. If no identities
                            local to the sending node are included, then the organization
                            owner of the local node is added automatically
                          items:
                            description: An array of members of the group. If no identities
                              local to the sending node are included, then the organization
                              owner of the local node is added automatically
                            properties:
                              identity:
                                description: The DID of the group member. On input
                                  can be a UUID or org name, and will be resolved
                                  to a DID
                                type: string
                              node:
                                description: The UUID of the node that will receive
                                  a copy of the off-chain message for the identity.
                                  The first applicable node for the identity will
                                  be picked automatically on input if not specified
                                type: string
                            type: object
                          type: array
                        name:
                          description: Optional name for the group. Allows you to
                            have multiple separate groups with the same list of participants
                          type: string
                      type: object
                    header:
                      description: The message header contains all fields that are
                        used to build the message hash
                      properties:
                        author:
                          description: The DID of identity of the submitter
                          type: string
                        cid:
                          description: The correlation ID of the message. Set this
                            when a message is a response to another message
                          format: uuid
                          type: string
                        group:
                          description: Private messages only - the identifier hash
                            of the privacy group. Derived from the name and member
                            list of the group
                          format: byte
                          type: string
                        key:
                          description: The on-chain signing key used to sign the transaction
                          type: string
                        tag:
                          description: The message tag indicates the purpose of the
                            message to the applications that process it
                          type: string
                        topics:
                          description: A message topic associates this message with
                            an ordered stream of data. A custom topic should be assigned
                            - using the default topic is discouraged
                          items:
                            description: A message topic associates this message with
                              an ordered stream of data. A custom topic should be
                              assigned - using the default topic is discouraged
                            type: string
                          type: array
                        txtype:
                          description: The type of transaction used to order/deliver
                            this message
                          enum:
                          - none
                          - unpinned
                          - batch_pin
                          - network_action
                          - token_pool
                          - token_transfer
                          - contract_deploy
                          - contract_invoke
                          - contract_invoke_pin
                          - token_approval
                          - data_publish
                          - user_operation_send
                          type: string
                        type:
                          description: The type of the message
                          enum:
                          - definition
                          - broadcast
                          - private
                          - groupinit
                          - transfer_broadcast
                          - transfer_private
                          - approval_broadcast
                          - approval_private
                          type: string
                      type: object
                    idempotencyKey:
                      description: An optional unique identifier for a message. Cannot
                        be duplicated within a namespace, thus allowing idempotent
                        submission of messages to the API. Local only - not transferred
                        when the message is sent to other members of the network
                      type: string
                  type: object
                method:
                  description: An in-line FFI method definition for the method to
                    invoke. Required when FFI is not specified
                  properties:
                    description:
                      description: A description of the smart contract method
                      type: string
                    details:
                      additionalProperties:
                        description: Additional blockchain specific fields about this
                          method from the original smart contract. Used by the blockchain
                          plugin and for documentation generation.
                      description: Additional blockchain specific fields about this
                        method from the original smart contract. Used by the blockchain
                        plugin and for documentation generation.
                      type: object
                    name:
                      description: The name of the method
                      type: string
                    params:
                      description: An array of method parameter/argument definitions
                      items:
                        description: An array of method parameter/argument definitions
                        properties:
                          name:
                            description: The name of the parameter. Note that parameters
                              must be ordered correctly on the FFI, according to the
                              order in the blockchain smart contract
                            type: string
                          schema:
                            description: FireFly uses an extended subset of JSON Schema
                              to describe parameters, similar to OpenAPI/Swagger.
                              Converters are available for native blockchain interface
                              definitions / type systems - such as an Ethereum ABI.
                              See the documentation for more detail
                        type: object
                      type: array
                    returns:
                      description: An array of method return definitions
                      items:
                        description: An array of method return definitions
                        properties:
                          name:
                            description: The name of the parameter. Note that parameters
                              must be ordered correctly on the FFI, according to the
                              order in the blockchain smart contract
                            type: string
                          schema:
                            description: FireFly uses an extended subset of JSON Schema
                              to describe parameters, similar to OpenAPI/Swagger.
                              Converters are available for native blockchain interface
                              definitions / type systems - such as an Ethereum ABI.
                              See the documentation for more detail
                        type: object
                      type: array
                  type: object
                methodPath:
                  description: The pathname of the method on the specified FFI
                  type: string
                options:
                  additionalProperties:
                    description: A map of named inputs that will be passed through
                      to the blockchain connector
                  description: A map of named inputs that will be passed through to
                    the blockchain connector
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created:
                    description: The time the operation was created
                    format: date-time
                    type: string
                  data:
                    additionalProperties:
                      description: Operation.data
                    description: Operation.data
                    type: object
                  error:
                    description: Any error reported back from the plugin for this
                      operation
                    type: string
                  id:
                    description: The UUID of the operation
                    format: uuid
                    type: string
                  input:
                    additionalProperties:
                      description: The input to this operation
                    description: The input to this operation
                    type: object
                  namespace:
                    description: The namespace of the operation
                    type: string
                  output:
                    additionalProperties:
                      description: Any output reported back from the plugin for this
                        operation
                    description: Any output reported back from the plugin for this
                      operation
                    type: object
                  plugin:
                    description: The plugin responsible for performing the operation
                    type: string
                  retry:
                    description: If this operation was initiated as a retry to a previous
                      operation, this field points to the UUID of the operation being
                      retried
                    format: uuid
                    type: string
                  status:
                    description: The current status of the operation
                    type: string
                  tx:
                    description: The UUID of the FireFly transaction the operation
                      is part of
                    format: uuid
                    type: string
                  type:
                    description: The type of the operation
                    enum:
                    - blockchain_invoke
                    - user_operation_send
                    type: string
                  updated:
                    description: The last update time of the operation
                    format: date-time
                    type: string
                type: object
          description: Success
        "202":
          content:
            application/json:
              schema:
                properties:
                  created:
                    description: The time the operation was created
                    format: date-time
                    type: string
                  data:
                    additionalProperties:
                      description: Operation.data
                    description: Operation.data
                    type: object
                  error:
                    description: Any error reported back from the plugin for this
                      operation
                    type: string
                  id:
                    description: The UUID of the operation
                    format: uuid
                    type: string
                  input:
                    additionalProperties:
                      description: The input to this operation
                    description: The input to this operation
                    type: object
                  namespace:
                    description: The namespace of the operation
                    type: string
                  output:
                    additionalProperties:
                      description: Any output reported back from the plugin for this
                        operation
                    description: Any output reported back from the plugin for this
                      operation
                    type: object
                  plugin:
                    description: The plugin responsible for performing the operation
                    type: string
                  retry:
                    description: If this operation was initiated as a retry to a previous
                      operation, this field points to the UUID of the operation being
                      retried
                    format: uuid
                    type: string
                  status:
                    description: The current status of the operation
                    type: string
                  tx:
                    description: The UUID of the FireFly transaction the operation
                      is part of
                    format: uuid
                    type: string
                  type:
                    description: The type of the operation
                    enum:
                    - blockchain_invoke
                    - user_operation_send
                    type: string
                  updated:
                    description: The last update time of the operation
                    format: date-time
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Contracts
  /contracts/listeners:
    get:
      description: Gets a list of contract listeners
      operationId: getContractListeners
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: backendid
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: filters
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: interface
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: location
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: name
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: signature
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: state
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: topic
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: updated
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      - description: Return a total count as well as items (adds extra database processing)
        in: query
        name: count
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    backendId:
                      description: An ID assigned by the blockchain connector to this
                        listener
                      type: string
                    created:
                      description: The creation time of the listener
                      format: date-time
                      type: string
                    event:
                      description: 'Deprecated: Please use ''event'' in the array
                        of ''filters'' instead'
                      properties:
                        description:
                          description: A description of the smart contract event
                          type: string
                        details:
                          additionalProperties:
                            description: Additional blockchain specific fields about
                              this event from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                          description: Additional blockchain specific fields about
                            this event from the original smart contract. Used by the
                            blockchain plugin and for documentation generation.
                          type: object
                        name:
                          description: The name of the event
                          type: string
                        params:
                          description: An array of event parameter/argument definitions
                          items:
                            description: An array of event parameter/argument definitions
                            properties:
                              name:
                                description: The name of the parameter. Note that
                                  parameters must be ordered correctly on the FFI,
                                  according to the order in the blockchain smart contract
                                type: string
                              schema:
                                description: FireFly uses an extended subset of JSON
                                  Schema to describe parameters, similar to OpenAPI/Swagger.
                                  Converters are available for native blockchain interface
                                  definitions / type systems - such as an Ethereum
                                  ABI. See the documentation for more detail
                            type: object
                          type: array
                      type: object
                    filters:
                      description: A list of filters for the contract listener. Each
                        filter is made up of an Event and an optional Location. Events
                        matching these filters will always be emitted in the order
                        determined by the blockchain.
                      items:
                        description: A list of filters for the contract listener.
                          Each filter is made up of an Event and an optional Location.
                          Events matching these filters will always be emitted in
                          the order determined by the blockchain.
                        properties:
                          event:
                            description: The definition of the event, either provided
                              in-line when creating the listener, or extracted from
                              the referenced FFI
                            properties:
                              description:
                                description: A description of the smart contract event
                                type: string
                              details:
                                additionalProperties:
                                  description: Additional blockchain specific fields
                                    about this event from the original smart contract.
                                    Used by the blockchain plugin and for documentation
                                    generation.
                                description: Additional blockchain specific fields
                                  about this event from the original smart contract.
                                  Used by the blockchain plugin and for documentation
                                  generation.
                                type: object
                              name:
                                description: The name of the event
                                type: string
                              params:
                                description: An array of event parameter/argument
                                  definitions
                                items:
                                  description: An array of event parameter/argument
                                    definitions
                                  properties:
                                    name:
                                      description: The name of the parameter. Note
                                        that parameters must be ordered correctly
                                        on the FFI, according to the order in the
                                        blockchain smart contract
                                      type: string
                                    schema:
                                      description: FireFly uses an extended subset
                                        of JSON Schema to describe parameters, similar
                                        to OpenAPI/Swagger. Converters are available
                                        for native blockchain interface definitions
                                        / type systems - such as an Ethereum ABI.
                                        See the documentation for more detail
                                  type: object
                                type: array
                            type: object
                          interface:
                            description: A reference to an existing FFI, containing
                              pre-registered type information for the event
                            properties:
                              id:
                                description: The UUID of the FireFly interface
                                format: uuid
                                type: string
                              name:
                                description: The name of the FireFly interface
                                type: string
                              version:
                                description: The version of the FireFly interface
                                type: string
                            type: object
                          location:
                            description: A blockchain specific contract identifier.
                              For example an Ethereum contract address, or a Fabric
                              chaincode name and channel
                          signature:
                            description: The stringified signature of the event and
                              location, as computed by the blockchain plugin
                            type: string
                        type: object
                      type: array
                    id:
                      description: The UUID of the smart contract listener
                      format: uuid
                      type: string
                    interface:
                      description: 'Deprecated: Please use ''interface'' in the array
                        of ''filters'' instead'
                      properties:
                        id:
                          description: The UUID of the FireFly interface
                          format: uuid
                          type: string
                        name:
                          description: The name of the FireFly interface
                          type: string
                        version:
                          description: The version of the FireFly interface
                          type: string
                      type: object
                    location:
                      description: 'Deprecated: Please use ''location'' in the array
                        of ''filters'' instead'
                    name:
                      description: A descriptive name for the listener
                      type: string
                    namespace:
                      description: The namespace of the listener, which defines the
                        namespace of all blockchain events detected by this listener
                      type: string
                    options:
                      description: Options that control how the listener subscribes
                        to events from the underlying blockchain
                      properties:
                        firstEvent:
                          description: A blockchain specific string, such as a block
                            number, to start listening from. The special strings 'oldest'
                            and 'newest' are supported by all blockchain connectors.
                            Default is 'newest'
                          type: string
                      type: object
                    signature:
                      description: A concatenation of all the stringified signature
                        of the event and location, as computed by the blockchain plugin
                      type: string
                    topic:
                      description: A topic to set on the FireFly event that is emitted
                        each time a blockchain event is detected from the blockchain.
                        Setting this topic on a number of listeners allows applications
                        to easily subscribe to all events they need
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Contracts
    post:
      description: Creates a new blockchain listener for events emitted by custom
        smart contracts
      operationId: postNewContractListener
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                event:
                  description: 'Deprecated: Please use ''event'' in the array of ''filters''
                    instead'
                  properties:
                    description:
                      description: A description of the smart contract event
                      type: string
                    details:
                      additionalProperties:
                        description: Additional blockchain specific fields about this
                          event from the original smart contract. Used by the blockchain
                          plugin and for documentation generation.
                      description: Additional blockchain specific fields about this
                        event from the original smart contract. Used by the blockchain
                        plugin and for documentation generation.
                      type: object
                    name:
                      description: The name of the event
                      type: string
                    params:
                      description: An array of event parameter/argument definitions
                      items:
                        description: An array of event parameter/argument definitions
                        properties:
                          name:
                            description: The name of the parameter. Note that parameters
                              must be ordered correctly on the FFI, according to the
                              order in the blockchain smart contract
                            type: string
                          schema:
                            description: FireFly uses an extended subset of JSON Schema
                              to describe parameters, similar to OpenAPI/Swagger.
                              Converters are available for native blockchain interface
                              definitions / type systems - such as an Ethereum ABI.
                              See the documentation for more detail
                        type: object
                      type: array
                  type: object
                eventPath:
                  description: 'Deprecated: Please use ''eventPath'' in the array
                    of ''filters'' instead'
                  type: string
                filters:
                  description: A list of filters for the contract listener. Each filter
                    is made up of an Event and an optional Location. Events matching
                    these filters will always be emitted in the order determined by
                    the blockchain.
                  items:
                    description: A list of filters for the contract listener. Each
                      filter is made up of an Event and an optional Location. Events
                      matching these filters will always be emitted in the order determined
                      by the blockchain.
                    properties:
                      event:
                        description: The definition of the event, either provided
                          in-line when creating the listener, or extracted from the
                          referenced FFI
                        properties:
                          description:
                            description: A description of the smart contract event
                            type: string
                          details:
                            additionalProperties:
                              description: Additional blockchain specific fields about
                                this event from the original smart contract. Used
                                by the blockchain plugin and for documentation generation.
                            description: Additional blockchain specific fields about
                              this event from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                            type: object
                          name:
                            description: The name of the event
                            type: string
                          params:
                            description: An array of event parameter/argument definitions
                            items:
                              description: An array of event parameter/argument definitions
                              properties:
                                name:
                                  description: The name of the parameter. Note that
                                    parameters must be ordered correctly on the FFI,
                                    according to the order in the blockchain smart
                                    contract
                                  type: string
                                schema:
                                  description: FireFly uses an extended subset of
                                    JSON Schema to describe parameters, similar to
                                    OpenAPI/Swagger. Converters are available for
                                    native blockchain interface definitions / type
                                    systems - such as an Ethereum ABI. See the documentation
                                    for more detail
                              type: object
                            type: array
                        type: object
                      eventPath:
                        description: When creating a listener from an existing FFI,
                          this is the pathname of the event on that FFI to be detected
                          by this listener
                        type: string
                      interface:
                        description: A reference to an existing FFI, containing pre-registered
                          type information for the event
                        properties:
                          id:
                            description: The UUID of the FireFly interface
                            format: uuid
                            type: string
                          name:
                            description: The name of the FireFly interface
                            type: string
                          version:
                            description: The version of the FireFly interface
                            type: string
                        type: object
                      location:
                        description: A blockchain specific contract identifier. For
                          example an Ethereum contract address, or a Fabric chaincode
                          name and channel
                    type: object
                  type: array
                interface:
                  description: 'Deprecated: Please use ''interface'' in the array
                    of ''filters'' instead'
                  properties:
                    id:
                      description: The UUID of the FireFly interface
                      format: uuid
                      type: string
                    name:
                      description: The name of the FireFly interface
                      type: string
                    version:
                      description: The version of the FireFly interface
                      type: string
                  type: object
                location:
                  description: 'Deprecated: Please use ''location'' in the array of
                    ''filters'' instead'
                name:
                  description: A descriptive name for the listener
                  type: string
                options:
                  description: Options that control how the listener subscribes to
                    events from the underlying blockchain
                  properties:
                    firstEvent:
                      description: A blockchain specific string, such as a block number,
                        to start listening from. The special strings 'oldest' and
                        'newest' are supported by all blockchain connectors. Default
                        is 'newest'
                      type: string
                  type: object
                topic:
                  description: A topic to set on the FireFly event that is emitted
                    each time a blockchain event is detected from the blockchain.
                    Setting this topic on a number of listeners allows applications
                    to easily subscribe to all events they need
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  backendId:
                    description: An ID assigned by the blockchain connector to this
                      listener
                    type: string
                  created:
                    description: The creation time of the listener
                    format: date-time
                    type: string
                  event:
                    description: 'Deprecated: Please use ''event'' in the array of
                      ''filters'' instead'
                    properties:
                      description:
                        description: A description of the smart contract event
                        type: string
                      details:
                        additionalProperties:
                          description: Additional blockchain specific fields about
                            this event from the original smart contract. Used by the
                            blockchain plugin and for documentation generation.
                        description: Additional blockchain specific fields about this
                          event from the original smart contract. Used by the blockchain
                          plugin and for documentation generation.
                        type: object
                      name:
                        description: The name of the event
                        type: string
                      params:
                        description: An array of event parameter/argument definitions
                        items:
                          description: An array of event parameter/argument definitions
                          properties:
                            name:
                              description: The name of the parameter. Note that parameters
                                must be ordered correctly on the FFI, according to
                                the order in the blockchain smart contract
                              type: string
                            schema:
                              description: FireFly uses an extended subset of JSON
                                Schema to describe parameters, similar to OpenAPI/Swagger.
                                Converters are available for native blockchain interface
                                definitions / type systems - such as an Ethereum ABI.
                                See the documentation for more detail
                          type: object
                        type: array
                    type: object
                  filters:
                    description: A list of filters for the contract listener. Each
                      filter is made up of an Event and an optional Location. Events
                      matching these filters will always be emitted in the order determined
                      by the blockchain.
                    items:
                      description: A list of filters for the contract listener. Each
                        filter is made up of an Event and an optional Location. Events
                        matching these filters will always be emitted in the order
                        determined by the blockchain.
                      properties:
                        event:
                          description: The definition of the event, either provided
                            in-line when creating the listener, or extracted from
                            the referenced FFI
                          properties:
                            description:
                              description: A description of the smart contract event
                              type: string
                            details:
                              additionalProperties:
                                description: Additional blockchain specific fields
                                  about this event from the original smart contract.
                                  Used by the blockchain plugin and for documentation
                                  generation.
                              description: Additional blockchain specific fields about
                                this event from the original smart contract. Used
                                by the blockchain plugin and for documentation generation.
                              type: object
                            name:
                              description: The name of the event
                              type: string
                            params:
                              description: An array of event parameter/argument definitions
                              items:
                                description: An array of event parameter/argument
                                  definitions
                                properties:
                                  name:
                                    description: The name of the parameter. Note that
                                      parameters must be ordered correctly on the
                                      FFI, according to the order in the blockchain
                                      smart contract
                                    type: string
                                  schema:
                                    description: FireFly uses an extended subset of
                                      JSON Schema to describe parameters, similar
                                      to OpenAPI/Swagger. Converters are available
                                      for native blockchain interface definitions
                                      / type systems - such as an Ethereum ABI. See
                                      the documentation for more detail
                                type: object
                              type: array
                          type: object
                        interface:
                          description: A reference to an existing FFI, containing
                            pre-registered type information for the event
                          properties:
                            id:
                              description: The UUID of the FireFly interface
                              format: uuid
                              type: string
                            name:
                              description: The name of the FireFly interface
                              type: string
                            version:
                              description: The version of the FireFly interface
                              type: string
                          type: object
                        location:
                          description: A blockchain specific contract identifier.
                            For example an Ethereum contract address, or a Fabric
                            chaincode name and channel
                        signature:
                          description: The stringified signature of the event and
                            location, as computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  id:
                    description: The UUID of the smart contract listener
                    format: uuid
                    type: string
                  interface:
                    description: 'Deprecated: Please use ''interface'' in the array
                      of ''filters'' instead'
                    properties:
                      id:
                        description: The UUID of the FireFly interface
                        format: uuid
                        type: string
                      name:
                        description: The name of the FireFly interface
                        type: string
                      version:
                        description: The version of the FireFly interface
                        type: string
                    type: object
                  location:
                    description: 'Deprecated: Please use ''location'' in the array
                      of ''filters'' instead'
                  name:
                    description: A descriptive name for the listener
                    type: string
                  namespace:
                    description: The namespace of the listener, which defines the
                      namespace of all blockchain events detected by this listener
                    type: string
                  options:
                    description: Options that control how the listener subscribes
                      to events from the underlying blockchain
                    properties:
                      firstEvent:
                        description: A blockchain specific string, such as a block
                          number, to start listening from. The special strings 'oldest'
                          and 'newest' are supported by all blockchain connectors.
                          Default is 'newest'
                        type: string
                    type: object
                  signature:
                    description: A concatenation of all the stringified signature
                      of the event and location, as computed by the blockchain plugin
                    type: string
                  topic:
                    description: A topic to set on the FireFly event that is emitted
                      each time a blockchain event is detected from the blockchain.
                      Setting this topic on a number of listeners allows applications
                      to easily subscribe to all events they need
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Contracts
  /contracts/listeners/{nameOrId}:
    delete:
      description: Deletes a contract listener referenced by its name or its ID
      operationId: deleteContractListener
      parameters:
      - description: The contract listener name or ID
        in: path
        name: nameOrId
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "204":
          content:
            application/json: {}
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Contracts
    get:
      description: Gets a contract listener by its name or ID
      operationId: getContractListenerByNameOrID
      parameters:
      - description: The contract listener name or ID
        in: path
        name: nameOrId
        required: true
        schema:
          type: string
      - description: When set, the API will return additional status information if
          available
        in: query
        name: fetchstatus
        schema:
          example: "true"
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  backendId:
                    description: An ID assigned by the blockchain connector to this
                      listener
                    type: string
                  created:
                    description: The creation time of the listener
                    format: date-time
                    type: string
                  event:
                    description: 'Deprecated: Please use ''event'' in the array of
                      ''filters'' instead'
                    properties:
                      description:
                        description: A description of the smart contract event
                        type: string
                      details:
                        additionalProperties:
                          description: Additional blockchain specific fields about
                            this event from the original smart contract. Used by the
                            blockchain plugin and for documentation generation.
                        description: Additional blockchain specific fields about this
                          event from the original smart contract. Used by the blockchain
                          plugin and for documentation generation.
                        type: object
                      name:
                        description: The name of the event
                        type: string
                      params:
                        description: An array of event parameter/argument definitions
                        items:
                          description: An array of event parameter/argument definitions
                          properties:
                            name:
                              description: The name of the parameter. Note that parameters
                                must be ordered correctly on the FFI, according to
                                the order in the blockchain smart contract
                              type: string
                            schema:
                              description: FireFly uses an extended subset of JSON
                                Schema to describe parameters, similar to OpenAPI/Swagger.
                                Converters are available for native blockchain interface
                                definitions / type systems - such as an Ethereum ABI.
                                See the documentation for more detail
                          type: object
                        type: array
                    type: object
                  filters:
                    description: A list of filters for the contract listener. Each
                      filter is made up of an Event and an optional Location. Events
                      matching these filters will always be emitted in the order determined
                      by the blockchain.
                    items:
                      description: A list of filters for the contract listener. Each
                        filter is made up of an Event and an optional Location. Events
                        matching these filters will always be emitted in the order
                        determined by the blockchain.
                      properties:
                        event:
                          description: The definition of the event, either provided
                            in-line when creating the listener, or extracted from
                            the referenced FFI
                          properties:
                            description:
                              description: A description of the smart contract event
                              type: string
                            details:
                              additionalProperties:
                                description: Additional blockchain specific fields
                                  about this event from the original smart contract.
                                  Used by the blockchain plugin and for documentation
                                  generation.
                              description: Additional blockchain specific fields about
                                this event from the original smart contract. Used
                                by the blockchain plugin and for documentation generation.
                              type: object
                            name:
                              description: The name of the event
                              type: string
                            params:
                              description: An array of event parameter/argument definitions
                              items:
                                description: An array of event parameter/argument
                                  definitions
                                properties:
                                  name:
                                    description: The name of the parameter. Note that
                                      parameters must be ordered correctly on the
                                      FFI, according to the order in the blockchain
                                      smart contract
                                    type: string
                                  schema:
                                    description: FireFly uses an extended subset of
                                      JSON Schema to describe parameters, similar
                                      to OpenAPI/Swagger. Converters are available
                                      for native blockchain interface definitions
                                      / type systems - such as an Ethereum ABI. See
                                      the documentation for more detail
                                type: object
                              type: array
                          type: object
                        interface:
                          description: A reference to an existing FFI, containing
                            pre-registered type information for the event
                          properties:
                            id:
                              description: The UUID of the FireFly interface
                              format: uuid
                              type: string
                            name:
                              description: The name of the FireFly interface
                              type: string
                            version:
                              description: The version of the FireFly interface
                              type: string
                          type: object
                        location:
                          description: A blockchain specific contract identifier.
                            For example an Ethereum contract address, or a Fabric
                            chaincode name and channel
                        signature:
                          description: The stringified signature of the event and
                            location, as computed by the blockchain plugin
                          type: string
                      type: object
                    type: array
                  id:
                    description: The UUID of the smart contract listener
                    format: uuid
                    type: string
                  interface:
                    description: 'Deprecated: Please use ''interface'' in the array
                      of ''filters'' instead'
                    properties:
                      id:
                        description: The UUID of the FireFly interface
                        format: uuid
                        type: string
                      name:
                        description: The name of the FireFly interface
                        type: string
                      version:
                        description: The version of the FireFly interface
                        type: string
                    type: object
                  location:
                    description: 'Deprecated: Please use ''location'' in the array
                      of ''filters'' instead'
                  name:
                    description: A descriptive name for the listener
                    type: string
                  namespace:
                    description: The namespace of the listener, which defines the
                      namespace of all blockchain events detected by this listener
                    type: string
                  options:
                    description: Options that control how the listener subscribes
                      to events from the underlying blockchain
                    properties:
                      firstEvent:
                        description: A blockchain specific string, such as a block
                          number, to start listening from. The special strings 'oldest'
                          and 'newest' are supported by all blockchain connectors.
                          Default is 'newest'
                        type: string
                    type: object
                  signature:
                    description: A concatenation of all the stringified signature
                      of the event and location, as computed by the blockchain plugin
                    type: string
                  topic:
                    description: A topic to set on the FireFly event that is emitted
                      each time a blockchain event is detected from the blockchain.
                      Setting this topic on a number of listeners allows applications
                      to easily subscribe to all events they need
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Contracts
  /contracts/listeners/signature:
    post:
      description: Calculates the hash of a blockchain listener filters and events
      operationId: postContractListenerSignature
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                event:
                  description: 'Deprecated: Please use ''event'' in the array of ''filters''
                    instead'
                  properties:
                    description:
                      description: A description of the smart contract event
                      type: string
                    details:
                      additionalProperties:
                        description: Additional blockchain specific fields about this
                          event from the original smart contract. Used by the blockchain
                          plugin and for documentation generation.
                      description: Additional blockchain specific fields about this
                        event from the original smart contract. Used by the blockchain
                        plugin and for documentation generation.
                      type: object
                    name:
                      description: The name of the event
                      type: string
                    params:
                      description: An array of event parameter/argument definitions
                      items:
                        description: An array of event parameter/argument definitions
                        properties:
                          name:
                            description: The name of the parameter. Note that parameters
                              must be ordered correctly on the FFI, according to the
                              order in the blockchain smart contract
                            type: string
                          schema:
                            description: FireFly uses an extended subset of JSON Schema
                              to describe parameters, similar to OpenAPI/Swagger.
                              Converters are available for native blockchain interface
                              definitions / type systems - such as an Ethereum ABI.
                              See the documentation for more detail
                        type: object
                      type: array
                  type: object
                eventPath:
                  description: 'Deprecated: Please use ''eventPath'' in the array
                    of ''filters'' instead'
                  type: string
                filters:
                  description: A list of filters for the contract listener. Each filter
                    is made up of an Event and an optional Location. Events matching
                    these filters will always be emitted in the order determined by
                    the blockchain.
                  items:
                    description: A list of filters for the contract listener. Each
                      filter is made up of an Event and an optional Location. Events
                      matching these filters will always be emitted in the order determined
                      by the blockchain.
                    properties:
                      event:
                        description: The definition of the event, either provided
                          in-line when creating the listener, or extracted from the
                          referenced FFI
                        properties:
                          description:
                            description: A description of the smart contract event
                            type: string
                          details:
                            additionalProperties:
                              description: Additional blockchain specific fields about
                                this event from the original smart contract. Used
                                by the blockchain plugin and for documentation generation.
                            description: Additional blockchain specific fields about
                              this event from the original smart contract. Used by
                              the blockchain plugin and for documentation generation.
                            type: object
                          name:
                            description: The name of the event
                            type: string
                          params:
                            description: An array of event parameter/argument definitions
                            items:
                              description: An array of event parameter/argument definitions
                              properties:
                                name:
                                  description: The name of the parameter. Note that
                                    parameters must be ordered correctly on the FFI,
                                    according to the order in the blockchain smart
                                    contract
                                  type: string
                                schema:
                                  description: FireFly uses an extended subset of
                                    JSON Schema to describe parameters, similar to
                                    OpenAPI/Swagger. Converters are available for
                                    native blockchain interface definitions / type
                                    systems - such as an Ethereum ABI. See the documentation
                                    for more detail
                              type: object
                            type: array
                        type: object
                      eventPath:
                        description: When creating a listener from an existing FFI,
                          this is the pathname of the event on that FFI to be detected
                          by this listener
                        type: string
                      interface:
                        description: A reference to an existing FFI, containing pre-registered
                          type information for the event
                        properties:
                          id:
                            description: The UUID of the FireFly interface
                            format: uuid
                            type: string
                          name:
                            description: The name of the FireFly interface
                            type: string
                          version:
                            description: The version of the FireFly interface
                            type: string
                        type: object
                      location:
                        description: A blockchain specific contract identifier. For
                          example an Ethereum contract address, or a Fabric chaincode
                          name and channel
                    type: object
                  type: array
                interface:
                  description: 'Deprecated: Please use ''interface'' in the array
                    of ''filters'' instead'
                  properties:
                    id:
                      description: The UUID of the FireFly interface
                      format: uuid
                      type: string
                    name:
                      description: The name of the FireFly interface
                      type: string
                    version:
                      description: The version of the FireFly interface
                      type: string
                  type: object
                location:
                  description: 'Deprecated: Please use ''location'' in the array of
                    ''filters'' instead'
                name:
                  description: A descriptive name for the listener
                  type: string
                options:
                  description: Options that control how the listener subscribes to
                    events from the underlying blockchain
                  properties:
                    firstEvent:
                      description: A blockchain specific string, such as a block number,
                        to start listening from. The special strings 'oldest' and
                        'newest' are supported by all blockchain connectors. Default
                        is 'newest'
                      type: string
                  type: object
                topic:
                  description: A topic to set on the FireFly event that is emitted
                    each time a blockchain event is detected from the blockchain.
                    Setting this topic on a number of listeners allows applications
                    to easily subscribe to all events they need
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  signature:
                    description: A concatenation of all the stringified signature
                      of the event and location, as computed by the blockchain plugin
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Contracts
  /contracts/query:
    post:
      description: Queries a method on a smart contract. Performs a read-only query.
      operationId: postContractQuery
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  additionalProperties:
                    description: ContractCallRequest.data
                  description: ContractCallRequest.data
                  type: object
                errors:
                  description: An in-line FFI errors definition for the method to
                    invoke. Alternative to specifying FFI
                  items:
                    description: An in-line FFI errors definition for the method to
                      invoke. Alternative to specifying FFI
                    properties:
                      description:
                        description: A description of the smart contract error
                        type: string
                      name:
                        description: The name of the error
                        type: string
                      params:
                        description: An array of error parameter/argument definitions
                        items:
                          description: An array of error parameter/argument definitions
                          properties:
                            name:
                              description: The name of the parameter. Note that parameters
                                must be ordered correctly on the FFI, according to
                                the order in the blockchain smart contract
                              type: string
                            schema:
                              description: FireFly uses an extended subset of JSON
                                Schema to describe parameters, similar to OpenAPI/Swagger.
                                Converters are available for native blockchain interface
                                definitions / type systems - such as an Ethereum ABI.
                                See the documentation for more detail
                          type: object
                        type: array
                    type: object
                  type: array
                idempotencyKey:
                  description: An optional identifier to allow idempotent submission
                    of requests. Stored on the transaction uniquely within a namespace
                  type: string
                input:
                  additionalProperties:
                    description: A map of named inputs. The name and type of each
                      input must be compatible with the FFI description of the method,
                      so that FireFly knows how to serialize it to the blockchain
                      via the connector
                  description: A map of named inputs. The name and type of each input
                    must be compatible with the FFI description of the method, so
                    that FireFly knows how to serialize it to the blockchain via the
                    connector
                  type: object
                interface:
                  description: The UUID of a method within a pre-configured FireFly
                    interface (FFI) definition for a smart contract. Required if the
                    'method' is omitted. Also see Contract APIs as a way to configure
                    a dedicated API for your FFI, including all methods and an OpenAPI/Swagger
                    interface
                  format: uuid
                  type: string
                key:
                  description: The blockchain signing key that will sign the invocation.
                    Defaults to the first signing key of the organization that operates
                    the node
                  type: string
                location:
                  description: A blockchain specific contract identifier. For example
                    an Ethereum contract address, or a Fabric chaincode name and channel
                method:
                  description: An in-line FFI method definition for the method to
                    invoke. Required when FFI is not specified
                  properties:
                    description:
                      description: A description of the smart contract method
                      type: string
                    details:
                      additionalProperties:
                        description: Additional blockchain specific fields about this
                          method from the original smart contract. Used by the blockchain
                          plugin and for documentation generation.
                      description: Additional blockchain specific fields about this
                        method from the original smart contract. Used by the blockchain
                        plugin and for documentation generation.
                      type: object
                    name:
                      description: The name of the method
                      type: string
                    params:
                      description: An array of method parameter/argument definitions
                      items:
                        description: An array of method parameter/argument definitions
                        properties:
                          name:
                            description: The name of the parameter. Note that parameters
                              must be ordered correctly on the FFI, according to the
                              order in the blockchain smart contract
                            type: string
                          schema:
                            description: FireFly uses an extended subset of JSON Schema
                              to describe parameters, similar to OpenAPI/Swagger.
                              Converters are available for native blockchain interface
                              definitions / type systems - such as an Ethereum ABI.
                              See the documentation for more detail
                        type: object
                      type: array
                    returns:
                      description: An array of method return definitions
                      items:
                        description: An array of method return definitions
                        properties:
                          name:
                            description: The name of the parameter. Note that parameters
                              must be ordered correctly on the FFI, according to the
                              order in the blockchain smart contract
                            type: string
                          schema:
                            description: FireFly uses an extended subset of JSON Schema
                              to describe parameters, similar to OpenAPI/Swagger.
                              Converters are available for native blockchain interface
                              definitions / type systems - such as an Ethereum ABI.
                              See the documentation for more detail
                        type: object
                      type: array
                  type: object
                methodPath:
                  description: The pathname of the method on the specified FFI
                  type: string
                options:
                  additionalProperties:
                    description: A map of named inputs that will be passed through
                      to the blockchain connector
                  description: A map of named inputs that will be passed through to
                    the blockchain connector
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: {}
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Contracts
  /events:
    get:
      description: Gets a list of events
      operationId: getEvents
      parameters:
      - description: When set, the API will return the record that this item references
          in its 'reference' field
        in: query
        name: fetchreferences
        schema:
          example: "true"
          type: string
      - description: When set, the API will return the record that this item references
          in its 'reference' field
        in: query
        name: fetchreference
        schema:
          example: "true"
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: correlator
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: reference
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: sequence
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: topic
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: tx
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: type
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      - description: Return a total count as well as items (adds extra database processing)
        in: query
        name: count
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    correlator:
                      description: For message events, this is the 'header.cid' field
                        from the referenced message. For certain other event types,
                        a secondary object is referenced such as a token pool
                      format: uuid
                      type: string
                    created:
                      description: The time the event was emitted. Not guaranteed
                        to be unique, or to increase between events in the same order
                        as the final sequence events are delivered to your application.
                        As such, the 'sequence' field should be used instead of the
                        'created' field for querying events in the exact order they
                        are delivered to applications
                      format: date-time
                      type: string
                    id:
                      description: The UUID assigned to this event by your local FireFly
                        node
                      format: uuid
                      type: string
                    namespace:
                      description: The namespace of the event. Your application must
                        subscribe to events within a namespace
                      type: string
                    reference:
                      description: The UUID of an resource that is the subject of
                        this event. The event type determines what type of resource
                        is referenced, and whether this field might be unset
                      format: uuid
                      type: string
                    sequence:
                      description: A sequence indicating the order in which events
                        are delivered to your application. Assure to be unique per
                        event in your local FireFly database (unlike the created timestamp)
                      format: int64
                      type: integer
                    topic:
                      description: A stream of information this event relates to.
                        For message confirmation events, a separate event is emitted
                        for each topic in the message. For blockchain events, the
                        listener specifies the topic. Rules exist for how the topic
                        is set for other event types
                      type: string
                    tx:
                      description: The UUID of a transaction that is event is part
                        of. Not all events are part of a transaction
                      format: uuid
                      type: string
                    type:
                      description: All interesting activity in FireFly is emitted
                        as a FireFly event, of a given type. The 'type' combined with
                        the 'reference' can be used to determine how to process the
                        event within your application
                      enum:
                      - transaction_submitted
                      - message_confirmed
                      - message_rejected
                      - datatype_confirmed
                      - identity_confirmed
                      - identity_updated
                      - token_pool_confirmed
                      - token_pool_op_failed
                      - token_transfer_confirmed
                      - token_transfer_op_failed
                      - token_approval_confirmed
                      - token_approval_op_failed
                      - contract_interface_confirmed
                      - contract_api_confirmed
                      - blockchain_event_received
                      - blockchain_invoke_op_succeeded
                      - blockchain_invoke_op_failed
                      - blockchain_contract_deploy_op_succeeded
                      - blockchain_contract_deploy_op_failed
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Events
  /events/{eid}:
    get:
      description: Gets an event by its ID
      operationId: getEventByID
      parameters:
      - description: The event ID
        in: path
        name: eid
        required: true
        schema:
          type: string
      - description: When set, the API will return the record that this item references
          in its 'reference' field
        in: query
        name: fetchreference
        schema:
          example: "true"
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  correlator:
                    description: For message events, this is the 'header.cid' field
                      from the referenced message. For certain other event types,
                      a secondary object is referenced such as a token pool
                    format: uuid
                    type: string
                  created:
                    description: The time the event was emitted. Not guaranteed to
                      be unique, or to increase between events in the same order as
                      the final sequence events are delivered to your application.
                      As such, the 'sequence' field should be used instead of the
                      'created' field for querying events in the exact order they
                      are delivered to applications
                    format: date-time
                    type: string
                  id:
                    description: The UUID assigned to this event by your local FireFly
                      node
                    format: uuid
                    type: string
                  namespace:
                    description: The namespace of the event. Your application must
                      subscribe to events within a namespace
                    type: string
                  reference:
                    description: The UUID of an resource that is the subject of this
                      event. The event type determines what type of resource is referenced,
                      and whether this field might be unset
                    format: uuid
                    type: string
                  sequence:
                    description: A sequence indicating the order in which events are
                      delivered to your application. Assure to be unique per event
                      in your local FireFly database (unlike the created timestamp)
                    format: int64
                    type: integer
                  topic:
                    description: A stream of information this event relates to. For
                      message confirmation events, a separate event is emitted for
                      each topic in the message. For blockchain events, the listener
                      specifies the topic. Rules exist for how the topic is set for
                      other event types
                    type: string
                  tx:
                    description: The UUID of a transaction that is event is part of.
                      Not all events are part of a transaction
                    format: uuid
                    type: string
                  type:
                    description: All interesting activity in FireFly is emitted as
                      a FireFly event, of a given type. The 'type' combined with the
                      'reference' can be used to determine how to process the event
                      within your application
                    enum:
                    - transaction_submitted
                    - message_confirmed
                    - message_rejected
                    - datatype_confirmed
                    - identity_confirmed
                    - identity_updated
                    - token_pool_confirmed
                    - token_pool_op_failed
                    - token_transfer_confirmed
                    - token_transfer_op_failed
                    - token_approval_confirmed
                    - token_approval_op_failed
                    - contract_interface_confirmed
                    - contract_api_confirmed
                    - blockchain_event_received
                    - blockchain_invoke_op_succeeded
                    - blockchain_invoke_op_failed
                    - blockchain_contract_deploy_op_succeeded
                    - blockchain_contract_deploy_op_failed
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Events
  /namespaces:
    get:
      description: Gets a list of namespaces
      operationId: getNamespaces
      parameters:
      - description: When set, the API will return namespaces even if they are not
          yet initialized, including in error cases where an initializationError is
          included
        in: query
        name: includeinitializing
        schema:
          example: "true"
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    created:
                      description: The time the namespace was created
                      format: date-time
                      type: string
                    description:
                      description: A description of the namespace
                      type: string
                    initializationError:
                      description: Set to a non-empty string in the case that the
                        namespace is currently failing to initialize
                      type: string
                    initializing:
                      description: Set to true if the namespace is still initializing
                      type: boolean
                    name:
                      description: The local namespace name
                      type: string
                    networkName:
                      description: The shared namespace name within the multiparty
                        network
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Namespaces
  /namespaces/{ns}:
    get:
      description: Gets a namespace
      operationId: getNamespace
      parameters:
      - description: The namespace which scopes this request
        in: path
        name: ns
        required: true
        schema:
          example: payment
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created:
                    description: The time the namespace was created
                    format: date-time
                    type: string
                  description:
                    description: A description of the namespace
                    type: string
                  name:
                    description: The local namespace name
                    type: string
                  networkName:
                    description: The shared namespace name within the multiparty network
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Namespaces
  /operations:
    get:
      description: Gets a a list of operations
      operationId: getOps
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: error
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: input
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: output
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: plugin
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: retry
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: status
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: tx
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: type
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: updated
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      - description: Return a total count as well as items (adds extra database processing)
        in: query
        name: count
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    created:
                      description: The time the operation was created
                      format: date-time
                      type: string
                    data:
                      additionalProperties:
                        description: Operation.data
                      description: Operation.data
                      type: object
                    error:
                      description: Any error reported back from the plugin for this
                        operation
                      type: string
                    id:
                      description: The UUID of the operation
                      format: uuid
                      type: string
                    input:
                      additionalProperties:
                        description: The input to this operation
                      description: The input to this operation
                      type: object
                    namespace:
                      description: The namespace of the operation
                      type: string
                    output:
                      additionalProperties:
                        description: Any output reported back from the plugin for
                          this operation
                      description: Any output reported back from the plugin for this
                        operation
                      type: object
                    plugin:
                      description: The plugin responsible for performing the operation
                      type: string
                    retry:
                      description: If this operation was initiated as a retry to a
                        previous operation, this field points to the UUID of the operation
                        being retried
                      format: uuid
                      type: string
                    status:
                      description: The current status of the operation
                      type: string
                    tx:
                      description: The UUID of the FireFly transaction the operation
                        is part of
                      format: uuid
                      type: string
                    type:
                      description: The type of the operation
                      enum:
                      - blockchain_invoke
                      - user_operation_send
                      type: string
                    updated:
                      description: The last update time of the operation
                      format: date-time
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Operations
  /operations-onchain/{opid}:
    get:
      description: Gets an operation by ID
      operationId: getOpByID
      parameters:
      - description: The operation ID key to get
        in: path
        name: opid
        required: true
        schema:
          type: string
      - description: When set, the API will return additional status information if
          available
        in: query
        name: fetchstatus
        schema:
          example: "true"
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created:
                    description: The time the operation was created
                    format: date-time
                    type: string
                  data:
                    additionalProperties:
                      description: Operation.data
                    description: Operation.data
                    type: object
                  detail:
                    description: Additional detailed information about an operation
                      provided by the connector
                  error:
                    description: Any error reported back from the plugin for this
                      operation
                    type: string
                  id:
                    description: The UUID of the operation
                    format: uuid
                    type: string
                  input:
                    additionalProperties:
                      description: The input to this operation
                    description: The input to this operation
                    type: object
                  namespace:
                    description: The namespace of the operation
                    type: string
                  output:
                    additionalProperties:
                      description: Any output reported back from the plugin for this
                        operation
                    description: Any output reported back from the plugin for this
                      operation
                    type: object
                  plugin:
                    description: The plugin responsible for performing the operation
                    type: string
                  retry:
                    description: If this operation was initiated as a retry to a previous
                      operation, this field points to the UUID of the operation being
                      retried
                    format: uuid
                    type: string
                  status:
                    description: The current status of the operation
                    type: string
                  tx:
                    description: The UUID of the FireFly transaction the operation
                      is part of
                    format: uuid
                    type: string
                  type:
                    description: The type of the operation
                    enum:
                    - blockchain_invoke
                    - user_operation_send
                    type: string
                  updated:
                    description: The last update time of the operation
                    format: date-time
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Operations
  /operations/{nsopid}:
    patch:
      description: Updates an operation by ID
      operationId: spiPatchOpByID
      parameters:
      - description: The operation ID as passed to the connector when the operation
          was performed, including the 'namespace:' prefix
        in: path
        name: nsopid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                error:
                  description: Any error reported back from the plugin for this operation
                  type: string
                output:
                  additionalProperties:
                    description: Any output reported back from the plugin for this
                      operation
                  description: Any output reported back from the plugin for this operation
                  type: object
                status:
                  description: The current status of the operation
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: {}
                type: object
          description: Success
        default:
          description: ""
      tags:
      - Namespaces
  /operations/{opid}/retry:
    post:
      description: Retries a failed operation
      operationId: postOpRetry
      parameters:
      - description: The UUID of the operation
        in: path
        name: opid
        required: true
        schema:
          type: string
      - description: transaction hash
        in: query
        name: txHash
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: {}
              type: object
      responses:
        "202":
          content:
            application/json:
              schema:
                properties:
                  created:
                    description: The time the operation was created
                    format: date-time
                    type: string
                  data:
                    additionalProperties:
                      description: Operation.data
                    description: Operation.data
                    type: object
                  error:
                    description: Any error reported back from the plugin for this
                      operation
                    type: string
                  id:
                    description: The UUID of the operation
                    format: uuid
                    type: string
                  input:
                    additionalProperties:
                      description: The input to this operation
                    description: The input to this operation
                    type: object
                  namespace:
                    description: The namespace of the operation
                    type: string
                  output:
                    additionalProperties:
                      description: Any output reported back from the plugin for this
                        operation
                    description: Any output reported back from the plugin for this
                      operation
                    type: object
                  plugin:
                    description: The plugin responsible for performing the operation
                    type: string
                  retry:
                    description: If this operation was initiated as a retry to a previous
                      operation, this field points to the UUID of the operation being
                      retried
                    format: uuid
                    type: string
                  status:
                    description: The current status of the operation
                    type: string
                  tx:
                    description: The UUID of the FireFly transaction the operation
                      is part of
                    format: uuid
                    type: string
                  type:
                    description: The type of the operation
                    enum:
                    - blockchain_invoke
                    - user_operation_send
                    type: string
                  updated:
                    description: The last update time of the operation
                    format: date-time
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Operations
  /operations/{opid}/status:
    post:
      description: Set operation pending status
      operationId: postOpStatus
      parameters:
      - description: The UUID of the operation
        in: path
        name: opid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: {}
              type: object
      responses:
        "202":
          content:
            application/json:
              schema:
                properties:
                  created:
                    description: The time the operation was created
                    format: date-time
                    type: string
                  data:
                    additionalProperties:
                      description: Operation.data
                    description: Operation.data
                    type: object
                  error:
                    description: Any error reported back from the plugin for this
                      operation
                    type: string
                  id:
                    description: The UUID of the operation
                    format: uuid
                    type: string
                  input:
                    additionalProperties:
                      description: The input to this operation
                    description: The input to this operation
                    type: object
                  namespace:
                    description: The namespace of the operation
                    type: string
                  output:
                    additionalProperties:
                      description: Any output reported back from the plugin for this
                        operation
                    description: Any output reported back from the plugin for this
                      operation
                    type: object
                  plugin:
                    description: The plugin responsible for performing the operation
                    type: string
                  retry:
                    description: If this operation was initiated as a retry to a previous
                      operation, this field points to the UUID of the operation being
                      retried
                    format: uuid
                    type: string
                  status:
                    description: The current status of the operation
                    type: string
                  tx:
                    description: The UUID of the FireFly transaction the operation
                      is part of
                    format: uuid
                    type: string
                  type:
                    description: The type of the operation
                    enum:
                    - blockchain_invoke
                    - user_operation_send
                    type: string
                  updated:
                    description: The last update time of the operation
                    format: date-time
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Operations
  /reset:
    post:
      description: Restarts FireFly Core HTTP servers and apply all configuration
        updates
      operationId: spiPostReset
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json: {}
      responses:
        "204":
          content:
            application/json: {}
          description: Success
        default:
          description: ""
      tags:
      - Namespaces
  /signers:
    get:
      description: Get signers
      operationId: spiGetSigners
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: KeyIdentifier
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      - description: Return a total count as well as items (adds extra database processing)
        in: query
        name: count
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    created:
                      description: Signer.created
                      format: date-time
                      type: string
                    description:
                      description: Signer.description
                      type: string
                    id:
                      description: Signer.id
                      format: uuid
                      type: string
                    isActive:
                      description: Signer.isActive
                      type: boolean
                    keyIdentifier:
                      description: Signer.keyIdentifier
                      type: string
                    name:
                      description: Signer.name
                      type: string
                    namespace:
                      description: Signer.namespace
                      type: string
                    provider:
                      description: Signer.provider
                      type: string
                    providerResource:
                      description: Signer.providerResource
                      type: string
                    providerService:
                      description: Signer.providerService
                      type: string
                    updated:
                      description: Signer.updated
                      format: date-time
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Signers
    post:
      description: Create new signer
      operationId: spiPostNewSigner
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                created:
                  description: Signer.created
                  format: date-time
                  type: string
                description:
                  description: Signer.description
                  type: string
                id:
                  description: Signer.id
                  format: uuid
                  type: string
                isActive:
                  description: Signer.isActive
                  type: boolean
                keyIdentifier:
                  description: Signer.keyIdentifier
                  type: string
                name:
                  description: Signer.name
                  type: string
                namespace:
                  description: Signer.namespace
                  type: string
                provider:
                  description: Signer.provider
                  type: string
                providerResource:
                  description: Signer.providerResource
                  type: string
                providerService:
                  description: Signer.providerService
                  type: string
                updated:
                  description: Signer.updated
                  format: date-time
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created:
                    description: Signer.created
                    format: date-time
                    type: string
                  description:
                    description: Signer.description
                    type: string
                  id:
                    description: Signer.id
                    format: uuid
                    type: string
                  isActive:
                    description: Signer.isActive
                    type: boolean
                  keyIdentifier:
                    description: Signer.keyIdentifier
                    type: string
                  name:
                    description: Signer.name
                    type: string
                  namespace:
                    description: Signer.namespace
                    type: string
                  provider:
                    description: Signer.provider
                    type: string
                  providerResource:
                    description: Signer.providerResource
                    type: string
                  providerService:
                    description: Signer.providerService
                    type: string
                  updated:
                    description: Signer.updated
                    format: date-time
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Signers
  /signers/{id}:
    get:
      description: Get signer by id
      operationId: spiGetSignerByID
      parameters:
      - description: Signer ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created:
                    description: Signer.created
                    format: date-time
                    type: string
                  description:
                    description: Signer.description
                    type: string
                  id:
                    description: Signer.id
                    format: uuid
                    type: string
                  isActive:
                    description: Signer.isActive
                    type: boolean
                  keyIdentifier:
                    description: Signer.keyIdentifier
                    type: string
                  name:
                    description: Signer.name
                    type: string
                  namespace:
                    description: Signer.namespace
                    type: string
                  provider:
                    description: Signer.provider
                    type: string
                  providerResource:
                    description: Signer.providerResource
                    type: string
                  providerService:
                    description: Signer.providerService
                    type: string
                  updated:
                    description: Signer.updated
                    format: date-time
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Signers
  /status:
    get:
      description: Gets the status of this namespace
      operationId: getStatus
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  namespace:
                    description: The namespace that this status applies to
                    properties:
                      created:
                        description: The time the namespace was created
                        format: date-time
                        type: string
                      description:
                        description: A description of the namespace
                        type: string
                      name:
                        description: The local namespace name
                        type: string
                      networkName:
                        description: The shared namespace name within the multiparty
                          network
                        type: string
                    type: object
                  node:
                    description: Details of the local node
                    properties:
                      id:
                        description: The UUID of the node, if registered
                        format: uuid
                        type: string
                      name:
                        description: The name of this node, as specified in the local
                          configuration
                        type: string
                      registered:
                        description: Whether the node has been successfully registered
                        type: boolean
                    type: object
                  org:
                    description: Details of the root organization identity registered
                      for this namespace on the local node
                    properties:
                      did:
                        description: The DID of the organization identity, if registered
                        type: string
                      id:
                        description: The UUID of the organization, if registered
                        format: uuid
                        type: string
                      name:
                        description: The name of the node operator organization, as
                          specified in the local configuration
                        type: string
                      registered:
                        description: Whether the organization has been successfully
                          registered
                        type: boolean
                      verifiers:
                        description: Array of verifiers (blockchain keys) owned by
                          this identity
                        items:
                          description: Array of verifiers (blockchain keys) owned
                            by this identity
                          properties:
                            type:
                              description: The type of the verifier
                              enum:
                              - ethereum_address
                              type: string
                            value:
                              description: The verifier string, such as an Ethereum
                                address, or Fabric MSP identifier
                              type: string
                          type: object
                        type: array
                    type: object
                  plugins:
                    description: Information about plugins configured on this namespace
                    properties:
                      blockchain:
                        description: The blockchain plugins on this namespace
                        items:
                          description: The blockchain plugins on this namespace
                          properties:
                            name:
                              description: The name of the plugin
                              type: string
                            pluginType:
                              description: The type of the plugin
                              type: string
                          type: object
                        type: array
                      database:
                        description: The database plugins on this namespace
                        items:
                          description: The database plugins on this namespace
                          properties:
                            name:
                              description: The name of the plugin
                              type: string
                            pluginType:
                              description: The type of the plugin
                              type: string
                          type: object
                        type: array
                      events:
                        description: The event plugins on this namespace
                        items:
                          description: The event plugins on this namespace
                          properties:
                            name:
                              description: The name of the plugin
                              type: string
                            pluginType:
                              description: The type of the plugin
                              type: string
                          type: object
                        type: array
                      messageBroker:
                        description: NamespaceStatusPlugins.messageBroker
                        items:
                          description: NamespaceStatusPlugins.messageBroker
                          properties:
                            name:
                              description: The name of the plugin
                              type: string
                            pluginType:
                              description: The type of the plugin
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Status
  /subscriptions:
    get:
      description: Gets a list of subscriptions
      operationId: getSubscriptions
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: events
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: filters
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: name
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: options
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: transport
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      - description: Return a total count as well as items (adds extra database processing)
        in: query
        name: count
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    created:
                      description: Creation time of the subscription
                      format: date-time
                      type: string
                    ephemeral:
                      description: Ephemeral subscriptions only exist as long as the
                        application is connected, and as such will miss events that
                        occur while the application is disconnected, and cannot be
                        created administratively. You can create one over over a connected
                        WebSocket connection
                      type: boolean
                    filter:
                      description: Server-side filter to apply to events
                      properties:
                        author:
                          description: 'Deprecated: Please use ''message.author''
                            instead'
                          type: string
                        blockchainevent:
                          description: Filters specific to blockchain events. If an
                            event is not a blockchain event, these filters are ignored
                          properties:
                            listener:
                              description: Regular expression to apply to the blockchain
                                event 'listener' field, which is the UUID of the event
                                listener. So you can restrict your subscription to
                                certain blockchain listeners. Alternatively to avoid
                                your application need to know listener UUIDs you can
                                set the 'topic' field of blockchain event listeners,
                                and use a topic filter on your subscriptions
                              type: string
                            name:
                              description: Regular expression to apply to the blockchain
                                event 'name' field, which is the name of the event
                                in the underlying blockchain smart contract
                              type: string
                          type: object
                        events:
                          description: Regular expression to apply to the event type,
                            to subscribe to a subset of event types
                          type: string
                        group:
                          description: 'Deprecated: Please use ''message.group'' instead'
                          type: string
                        message:
                          description: Filters specific to message events. If an event
                            is not a message event, these filters are ignored
                          properties:
                            author:
                              description: Regular expression to apply to the message
                                'header.author' field
                              type: string
                            group:
                              description: Regular expression to apply to the message
                                'header.group' field
                              type: string
                            tag:
                              description: Regular expression to apply to the message
                                'header.tag' field
                              type: string
                          type: object
                        tag:
                          description: 'Deprecated: Please use ''message.tag'' instead'
                          type: string
                        topic:
                          description: Regular expression to apply to the topic of
                            the event, to subscribe to a subset of topics. Note for
                            messages sent with multiple topics, a separate event is
                            emitted for each topic
                          type: string
                        topics:
                          description: 'Deprecated: Please use ''topic'' instead'
                          type: string
                        transaction:
                          description: Filters specific to events with a transaction.
                            If an event is not associated with a transaction, this
                            filter is ignored
                          properties:
                            type:
                              description: Regular expression to apply to the transaction
                                'type' field
                              type: string
                          type: object
                      type: object
                    id:
                      description: The UUID of the subscription
                      format: uuid
                      type: string
                    name:
                      description: The name of the subscription. The application specifies
                        this name when it connects, in order to attach to the subscription
                        and receive events that arrived while it was disconnected.
                        If multiple apps connect to the same subscription, events
                        are workload balanced across the connected application instances
                      type: string
                    namespace:
                      description: The namespace of the subscription. A subscription
                        will only receive events generated in the namespace of the
                        subscription
                      type: string
                    options:
                      description: Subscription options
                      properties:
                        batch:
                          description: Events are delivered in batches in an ordered
                            array. The batch size is capped to the readAhead limit.
                            The event payload is always an array even if there is
                            a single event in the batch, allowing client-side optimizations
                            when processing the events in a group. Available for both
                            Webhooks and WebSockets.
                          type: boolean
                        batchTimeout:
                          description: When batching is enabled, the optional timeout
                            to send events even when the batch hasn't filled.
                          type: string
                        fastack:
                          description: 'Webhooks only: When true the event will be
                            acknowledged before the webhook is invoked, allowing parallel
                            invocations'
                          type: boolean
                        firstEvent:
                          description: Whether your application would like to receive
                            events from the 'oldest' event emitted by your FireFly
                            node (from the beginning of time), or the 'newest' event
                            (from now), or a specific event sequence. Default is 'newest'
                          type: string
                        headers:
                          additionalProperties:
                            description: 'Webhooks only: Static headers to set on
                              the webhook request'
                            type: string
                          description: 'Webhooks only: Static headers to set on the
                            webhook request'
                          type: object
                        httpOptions:
                          description: 'Webhooks only: a set of options for HTTP'
                          properties:
                            connectionTimeout:
                              description: The maximum amount of time that a connection
                                is allowed to remain with no data transmitted.
                              type: string
                            expectContinueTimeout:
                              description: See [ExpectContinueTimeout in the Go docs](https://pkg.go.dev/net/http#Transport)
                              type: string
                            idleTimeout:
                              description: The max duration to hold a HTTP keepalive
                                connection between calls
                              type: string
                            maxIdleConns:
                              description: The max number of idle connections to hold
                                pooled
                              type: integer
                            proxyURL:
                              description: HTTP proxy URL to use for outbound requests
                                to the webhook
                              type: string
                            requestTimeout:
                              description: The max duration to hold a TLS handshake
                                alive
                              type: string
                            tlsHandshakeTimeout:
                              description: The max duration to hold a TLS handshake
                                alive
                              type: string
                          type: object
                        input:
                          description: 'Webhooks only: A set of options to extract
                            data from the first JSON input data in the incoming message.
                            Only applies if withData=true'
                          properties:
                            body:
                              description: A top-level property of the first data
                                input, to use for the request body. Default is the
                                whole first body
                              type: string
                            headers:
                              description: A top-level property of the first data
                                input, to use for headers
                              type: string
                            path:
                              description: A top-level property of the first data
                                input, to use for a path to append with escaping to
                                the webhook path
                              type: string
                            query:
                              description: A top-level property of the first data
                                input, to use for query parameters
                              type: string
                            replytx:
                              description: A top-level property of the first data
                                input, to use to dynamically set whether to pin the
                                response (so the requester can choose)
                              type: string
                          type: object
                        json:
                          description: 'Webhooks only: Whether to assume the response
                            body is JSON, regardless of the returned Content-Type'
                          type: boolean
                        method:
                          description: 'Webhooks only: HTTP method to invoke. Default=POST'
                          type: string
                        query:
                          additionalProperties:
                            description: 'Webhooks only: Static query params to set
                              on the webhook request'
                            type: string
                          description: 'Webhooks only: Static query params to set
                            on the webhook request'
                          type: object
                        readAhead:
                          description: The number of events to stream ahead to your
                            application, while waiting for confirmation of consumption
                            of those events. At least once delivery semantics are
                            used in FireFly, so if your application crashes/reconnects
                            this is the maximum number of events you would expect
                            to be redelivered after it restarts
                          minimum: 0
                          type: integer
                        reply:
                          description: 'Webhooks only: Whether to automatically send
                            a reply event, using the body returned by the webhook'
                          type: boolean
                        replytag:
                          description: 'Webhooks only: The tag to set on the reply
                            message'
                          type: string
                        replytx:
                          description: 'Webhooks only: The transaction type to set
                            on the reply message'
                          type: string
                        retry:
                          description: 'Webhooks only: a set of options for retrying
                            the webhook call'
                          properties:
                            count:
                              description: Number of times to retry the webhook call
                                in case of failure
                              type: integer
                            enabled:
                              description: Enables retry on HTTP calls, defaults to
                                false
                              type: boolean
                            initialDelay:
                              description: Initial delay between retries when we retry
                                the webhook call
                              type: string
                            maxDelay:
                              description: Max delay between retries when we retry
                                the webhookcall
                              type: string
                          type: object
                        tlsConfigName:
                          description: The name of an existing TLS configuration associated
                            to the namespace to use
                          type: string
                        url:
                          description: 'Webhooks only: HTTP url to invoke. Can be
                            relative if a base URL is set in the webhook plugin config'
                          type: string
                        withData:
                          description: Whether message events delivered over the subscription,
                            should be packaged with the full data of those messages
                            in-line as part of the event JSON payload. Or if the application
                            should make separate REST calls to download that data.
                            May not be supported on some transports.
                          type: boolean
                      type: object
                    transport:
                      description: The transport plugin responsible for event delivery
                        (WebSockets, Webhooks, JMS, NATS etc.)
                      type: string
                    updated:
                      description: Last time the subscription was updated
                      format: date-time
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Subscriptions
    post:
      description: Creates a new subscription for an application to receive events
        from FireFly
      operationId: postNewSubscription
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                filter:
                  description: Server-side filter to apply to events
                  properties:
                    author:
                      description: 'Deprecated: Please use ''message.author'' instead'
                      type: string
                    blockchainevent:
                      description: Filters specific to blockchain events. If an event
                        is not a blockchain event, these filters are ignored
                      properties:
                        listener:
                          description: Regular expression to apply to the blockchain
                            event 'listener' field, which is the UUID of the event
                            listener. So you can restrict your subscription to certain
                            blockchain listeners. Alternatively to avoid your application
                            need to know listener UUIDs you can set the 'topic' field
                            of blockchain event listeners, and use a topic filter
                            on your subscriptions
                          type: string
                        name:
                          description: Regular expression to apply to the blockchain
                            event 'name' field, which is the name of the event in
                            the underlying blockchain smart contract
                          type: string
                      type: object
                    events:
                      description: Regular expression to apply to the event type,
                        to subscribe to a subset of event types
                      type: string
                    group:
                      description: 'Deprecated: Please use ''message.group'' instead'
                      type: string
                    message:
                      description: Filters specific to message events. If an event
                        is not a message event, these filters are ignored
                      properties:
                        author:
                          description: Regular expression to apply to the message
                            'header.author' field
                          type: string
                        group:
                          description: Regular expression to apply to the message
                            'header.group' field
                          type: string
                        tag:
                          description: Regular expression to apply to the message
                            'header.tag' field
                          type: string
                      type: object
                    tag:
                      description: 'Deprecated: Please use ''message.tag'' instead'
                      type: string
                    topic:
                      description: Regular expression to apply to the topic of the
                        event, to subscribe to a subset of topics. Note for messages
                        sent with multiple topics, a separate event is emitted for
                        each topic
                      type: string
                    topics:
                      description: 'Deprecated: Please use ''topic'' instead'
                      type: string
                    transaction:
                      description: Filters specific to events with a transaction.
                        If an event is not associated with a transaction, this filter
                        is ignored
                      properties:
                        type:
                          description: Regular expression to apply to the transaction
                            'type' field
                          type: string
                      type: object
                  type: object
                name:
                  description: The name of the subscription. The application specifies
                    this name when it connects, in order to attach to the subscription
                    and receive events that arrived while it was disconnected. If
                    multiple apps connect to the same subscription, events are workload
                    balanced across the connected application instances
                  type: string
                namespace:
                  description: The namespace of the subscription. A subscription will
                    only receive events generated in the namespace of the subscription
                  type: string
                options:
                  description: Subscription options
                  properties:
                    batch:
                      description: Events are delivered in batches in an ordered array.
                        The batch size is capped to the readAhead limit. The event
                        payload is always an array even if there is a single event
                        in the batch, allowing client-side optimizations when processing
                        the events in a group. Available for both Webhooks and WebSockets.
                      type: boolean
                    batchTimeout:
                      description: When batching is enabled, the optional timeout
                        to send events even when the batch hasn't filled.
                      type: string
                    fastack:
                      description: 'Webhooks only: When true the event will be acknowledged
                        before the webhook is invoked, allowing parallel invocations'
                      type: boolean
                    firstEvent:
                      description: Whether your application would like to receive
                        events from the 'oldest' event emitted by your FireFly node
                        (from the beginning of time), or the 'newest' event (from
                        now), or a specific event sequence. Default is 'newest'
                      type: string
                    headers:
                      additionalProperties:
                        description: 'Webhooks only: Static headers to set on the
                          webhook request'
                        type: string
                      description: 'Webhooks only: Static headers to set on the webhook
                        request'
                      type: object
                    httpOptions:
                      description: 'Webhooks only: a set of options for HTTP'
                      properties:
                        connectionTimeout:
                          description: The maximum amount of time that a connection
                            is allowed to remain with no data transmitted.
                          type: string
                        expectContinueTimeout:
                          description: See [ExpectContinueTimeout in the Go docs](https://pkg.go.dev/net/http#Transport)
                          type: string
                        idleTimeout:
                          description: The max duration to hold a HTTP keepalive connection
                            between calls
                          type: string
                        maxIdleConns:
                          description: The max number of idle connections to hold
                            pooled
                          type: integer
                        proxyURL:
                          description: HTTP proxy URL to use for outbound requests
                            to the webhook
                          type: string
                        requestTimeout:
                          description: The max duration to hold a TLS handshake alive
                          type: string
                        tlsHandshakeTimeout:
                          description: The max duration to hold a TLS handshake alive
                          type: string
                      type: object
                    input:
                      description: 'Webhooks only: A set of options to extract data
                        from the first JSON input data in the incoming message. Only
                        applies if withData=true'
                      properties:
                        body:
                          description: A top-level property of the first data input,
                            to use for the request body. Default is the whole first
                            body
                          type: string
                        headers:
                          description: A top-level property of the first data input,
                            to use for headers
                          type: string
                        path:
                          description: A top-level property of the first data input,
                            to use for a path to append with escaping to the webhook
                            path
                          type: string
                        query:
                          description: A top-level property of the first data input,
                            to use for query parameters
                          type: string
                        replytx:
                          description: A top-level property of the first data input,
                            to use to dynamically set whether to pin the response
                            (so the requester can choose)
                          type: string
                      type: object
                    json:
                      description: 'Webhooks only: Whether to assume the response
                        body is JSON, regardless of the returned Content-Type'
                      type: boolean
                    method:
                      description: 'Webhooks only: HTTP method to invoke. Default=POST'
                      type: string
                    query:
                      additionalProperties:
                        description: 'Webhooks only: Static query params to set on
                          the webhook request'
                        type: string
                      description: 'Webhooks only: Static query params to set on the
                        webhook request'
                      type: object
                    readAhead:
                      description: The number of events to stream ahead to your application,
                        while waiting for confirmation of consumption of those events.
                        At least once delivery semantics are used in FireFly, so if
                        your application crashes/reconnects this is the maximum number
                        of events you would expect to be redelivered after it restarts
                      minimum: 0
                      type: integer
                    reply:
                      description: 'Webhooks only: Whether to automatically send a
                        reply event, using the body returned by the webhook'
                      type: boolean
                    replytag:
                      description: 'Webhooks only: The tag to set on the reply message'
                      type: string
                    replytx:
                      description: 'Webhooks only: The transaction type to set on
                        the reply message'
                      type: string
                    retry:
                      description: 'Webhooks only: a set of options for retrying the
                        webhook call'
                      properties:
                        count:
                          description: Number of times to retry the webhook call in
                            case of failure
                          type: integer
                        enabled:
                          description: Enables retry on HTTP calls, defaults to false
                          type: boolean
                        initialDelay:
                          description: Initial delay between retries when we retry
                            the webhook call
                          type: string
                        maxDelay:
                          description: Max delay between retries when we retry the
                            webhookcall
                          type: string
                      type: object
                    tlsConfigName:
                      description: The name of an existing TLS configuration associated
                        to the namespace to use
                      type: string
                    url:
                      description: 'Webhooks only: HTTP url to invoke. Can be relative
                        if a base URL is set in the webhook plugin config'
                      type: string
                    withData:
                      description: Whether message events delivered over the subscription,
                        should be packaged with the full data of those messages in-line
                        as part of the event JSON payload. Or if the application should
                        make separate REST calls to download that data. May not be
                        supported on some transports.
                      type: boolean
                  type: object
                transport:
                  description: The transport plugin responsible for event delivery
                    (WebSockets, Webhooks, JMS, NATS etc.)
                  type: string
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  created:
                    description: Creation time of the subscription
                    format: date-time
                    type: string
                  ephemeral:
                    description: Ephemeral subscriptions only exist as long as the
                      application is connected, and as such will miss events that
                      occur while the application is disconnected, and cannot be created
                      administratively. You can create one over over a connected WebSocket
                      connection
                    type: boolean
                  filter:
                    description: Server-side filter to apply to events
                    properties:
                      author:
                        description: 'Deprecated: Please use ''message.author'' instead'
                        type: string
                      blockchainevent:
                        description: Filters specific to blockchain events. If an
                          event is not a blockchain event, these filters are ignored
                        properties:
                          listener:
                            description: Regular expression to apply to the blockchain
                              event 'listener' field, which is the UUID of the event
                              listener. So you can restrict your subscription to certain
                              blockchain listeners. Alternatively to avoid your application
                              need to know listener UUIDs you can set the 'topic'
                              field of blockchain event listeners, and use a topic
                              filter on your subscriptions
                            type: string
                          name:
                            description: Regular expression to apply to the blockchain
                              event 'name' field, which is the name of the event in
                              the underlying blockchain smart contract
                            type: string
                        type: object
                      events:
                        description: Regular expression to apply to the event type,
                          to subscribe to a subset of event types
                        type: string
                      group:
                        description: 'Deprecated: Please use ''message.group'' instead'
                        type: string
                      message:
                        description: Filters specific to message events. If an event
                          is not a message event, these filters are ignored
                        properties:
                          author:
                            description: Regular expression to apply to the message
                              'header.author' field
                            type: string
                          group:
                            description: Regular expression to apply to the message
                              'header.group' field
                            type: string
                          tag:
                            description: Regular expression to apply to the message
                              'header.tag' field
                            type: string
                        type: object
                      tag:
                        description: 'Deprecated: Please use ''message.tag'' instead'
                        type: string
                      topic:
                        description: Regular expression to apply to the topic of the
                          event, to subscribe to a subset of topics. Note for messages
                          sent with multiple topics, a separate event is emitted for
                          each topic
                        type: string
                      topics:
                        description: 'Deprecated: Please use ''topic'' instead'
                        type: string
                      transaction:
                        description: Filters specific to events with a transaction.
                          If an event is not associated with a transaction, this filter
                          is ignored
                        properties:
                          type:
                            description: Regular expression to apply to the transaction
                              'type' field
                            type: string
                        type: object
                    type: object
                  id:
                    description: The UUID of the subscription
                    format: uuid
                    type: string
                  name:
                    description: The name of the subscription. The application specifies
                      this name when it connects, in order to attach to the subscription
                      and receive events that arrived while it was disconnected. If
                      multiple apps connect to the same subscription, events are workload
                      balanced across the connected application instances
                    type: string
                  namespace:
                    description: The namespace of the subscription. A subscription
                      will only receive events generated in the namespace of the subscription
                    type: string
                  options:
                    description: Subscription options
                    properties:
                      batch:
                        description: Events are delivered in batches in an ordered
                          array. The batch size is capped to the readAhead limit.
                          The event payload is always an array even if there is a
                          single event in the batch, allowing client-side optimizations
                          when processing the events in a group. Available for both
                          Webhooks and WebSockets.
                        type: boolean
                      batchTimeout:
                        description: When batching is enabled, the optional timeout
                          to send events even when the batch hasn't filled.
                        type: string
                      fastack:
                        description: 'Webhooks only: When true the event will be acknowledged
                          before the webhook is invoked, allowing parallel invocations'
                        type: boolean
                      firstEvent:
                        description: Whether your application would like to receive
                          events from the 'oldest' event emitted by your FireFly node
                          (from the beginning of time), or the 'newest' event (from
                          now), or a specific event sequence. Default is 'newest'
                        type: string
                      headers:
                        additionalProperties:
                          description: 'Webhooks only: Static headers to set on the
                            webhook request'
                          type: string
                        description: 'Webhooks only: Static headers to set on the
                          webhook request'
                        type: object
                      httpOptions:
                        description: 'Webhooks only: a set of options for HTTP'
                        properties:
                          connectionTimeout:
                            description: The maximum amount of time that a connection
                              is allowed to remain with no data transmitted.
                            type: string
                          expectContinueTimeout:
                            description: See [ExpectContinueTimeout in the Go docs](https://pkg.go.dev/net/http#Transport)
                            type: string
                          idleTimeout:
                            description: The max duration to hold a HTTP keepalive
                              connection between calls
                            type: string
                          maxIdleConns:
                            description: The max number of idle connections to hold
                              pooled
                            type: integer
                          proxyURL:
                            description: HTTP proxy URL to use for outbound requests
                              to the webhook
                            type: string
                          requestTimeout:
                            description: The max duration to hold a TLS handshake
                              alive
                            type: string
                          tlsHandshakeTimeout:
                            description: The max duration to hold a TLS handshake
                              alive
                            type: string
                        type: object
                      input:
                        description: 'Webhooks only: A set of options to extract data
                          from the first JSON input data in the incoming message.
                          Only applies if withData=true'
                        properties:
                          body:
                            description: A top-level property of the first data input,
                              to use for the request body. Default is the whole first
                              body
                            type: string
                          headers:
                            description: A top-level property of the first data input,
                              to use for headers
                            type: string
                          path:
                            description: A top-level property of the first data input,
                              to use for a path to append with escaping to the webhook
                              path
                            type: string
                          query:
                            description: A top-level property of the first data input,
                              to use for query parameters
                            type: string
                          replytx:
                            description: A top-level property of the first data input,
                              to use to dynamically set whether to pin the response
                              (so the requester can choose)
                            type: string
                        type: object
                      json:
                        description: 'Webhooks only: Whether to assume the response
                          body is JSON, regardless of the returned Content-Type'
                        type: boolean
                      method:
                        description: 'Webhooks only: HTTP method to invoke. Default=POST'
                        type: string
                      query:
                        additionalProperties:
                          description: 'Webhooks only: Static query params to set
                            on the webhook request'
                          type: string
                        description: 'Webhooks only: Static query params to set on
                          the webhook request'
                        type: object
                      readAhead:
                        description: The number of events to stream ahead to your
                          application, while waiting for confirmation of consumption
                          of those events. At least once delivery semantics are used
                          in FireFly, so if your application crashes/reconnects this
                          is the maximum number of events you would expect to be redelivered
                          after it restarts
                        minimum: 0
                        type: integer
                      reply:
                        description: 'Webhooks only: Whether to automatically send
                          a reply event, using the body returned by the webhook'
                        type: boolean
                      replytag:
                        description: 'Webhooks only: The tag to set on the reply message'
                        type: string
                      replytx:
                        description: 'Webhooks only: The transaction type to set on
                          the reply message'
                        type: string
                      retry:
                        description: 'Webhooks only: a set of options for retrying
                          the webhook call'
                        properties:
                          count:
                            description: Number of times to retry the webhook call
                              in case of failure
                            type: integer
                          enabled:
                            description: Enables retry on HTTP calls, defaults to
                              false
                            type: boolean
                          initialDelay:
                            description: Initial delay between retries when we retry
                              the webhook call
                            type: string
                          maxDelay:
                            description: Max delay between retries when we retry the
                              webhookcall
                            type: string
                        type: object
                      tlsConfigName:
                        description: The name of an existing TLS configuration associated
                          to the namespace to use
                        type: string
                      url:
                        description: 'Webhooks only: HTTP url to invoke. Can be relative
                          if a base URL is set in the webhook plugin config'
                        type: string
                      withData:
                        description: Whether message events delivered over the subscription,
                          should be packaged with the full data of those messages
                          in-line as part of the event JSON payload. Or if the application
                          should make separate REST calls to download that data. May
                          not be supported on some transports.
                        type: boolean
                    type: object
                  transport:
                    description: The transport plugin responsible for event delivery
                      (WebSockets, Webhooks, JMS, NATS etc.)
                    type: string
                  updated:
                    description: Last time the subscription was updated
                    format: date-time
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Subscriptions
    put:
      description: Update an existing subscription
      operationId: putSubscription
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                filter:
                  description: Server-side filter to apply to events
                  properties:
                    author:
                      description: 'Deprecated: Please use ''message.author'' instead'
                      type: string
                    blockchainevent:
                      description: Filters specific to blockchain events. If an event
                        is not a blockchain event, these filters are ignored
                      properties:
                        listener:
                          description: Regular expression to apply to the blockchain
                            event 'listener' field, which is the UUID of the event
                            listener. So you can restrict your subscription to certain
                            blockchain listeners. Alternatively to avoid your application
                            need to know listener UUIDs you can set the 'topic' field
                            of blockchain event listeners, and use a topic filter
                            on your subscriptions
                          type: string
                        name:
                          description: Regular expression to apply to the blockchain
                            event 'name' field, which is the name of the event in
                            the underlying blockchain smart contract
                          type: string
                      type: object
                    events:
                      description: Regular expression to apply to the event type,
                        to subscribe to a subset of event types
                      type: string
                    group:
                      description: 'Deprecated: Please use ''message.group'' instead'
                      type: string
                    message:
                      description: Filters specific to message events. If an event
                        is not a message event, these filters are ignored
                      properties:
                        author:
                          description: Regular expression to apply to the message
                            'header.author' field
                          type: string
                        group:
                          description: Regular expression to apply to the message
                            'header.group' field
                          type: string
                        tag:
                          description: Regular expression to apply to the message
                            'header.tag' field
                          type: string
                      type: object
                    tag:
                      description: 'Deprecated: Please use ''message.tag'' instead'
                      type: string
                    topic:
                      description: Regular expression to apply to the topic of the
                        event, to subscribe to a subset of topics. Note for messages
                        sent with multiple topics, a separate event is emitted for
                        each topic
                      type: string
                    topics:
                      description: 'Deprecated: Please use ''topic'' instead'
                      type: string
                    transaction:
                      description: Filters specific to events with a transaction.
                        If an event is not associated with a transaction, this filter
                        is ignored
                      properties:
                        type:
                          description: Regular expression to apply to the transaction
                            'type' field
                          type: string
                      type: object
                  type: object
                name:
                  description: The name of the subscription. The application specifies
                    this name when it connects, in order to attach to the subscription
                    and receive events that arrived while it was disconnected. If
                    multiple apps connect to the same subscription, events are workload
                    balanced across the connected application instances
                  type: string
                namespace:
                  description: The namespace of the subscription. A subscription will
                    only receive events generated in the namespace of the subscription
                  type: string
                options:
                  description: Subscription options
                  properties:
                    batch:
                      description: Events are delivered in batches in an ordered array.
                        The batch size is capped to the readAhead limit. The event
                        payload is always an array even if there is a single event
                        in the batch, allowing client-side optimizations when processing
                        the events in a group. Available for both Webhooks and WebSockets.
                      type: boolean
                    batchTimeout:
                      description: When batching is enabled, the optional timeout
                        to send events even when the batch hasn't filled.
                      type: string
                    fastack:
                      description: 'Webhooks only: When true the event will be acknowledged
                        before the webhook is invoked, allowing parallel invocations'
                      type: boolean
                    firstEvent:
                      description: Whether your application would like to receive
                        events from the 'oldest' event emitted by your FireFly node
                        (from the beginning of time), or the 'newest' event (from
                        now), or a specific event sequence. Default is 'newest'
                      type: string
                    headers:
                      additionalProperties:
                        description: 'Webhooks only: Static headers to set on the
                          webhook request'
                        type: string
                      description: 'Webhooks only: Static headers to set on the webhook
                        request'
                      type: object
                    httpOptions:
                      description: 'Webhooks only: a set of options for HTTP'
                      properties:
                        connectionTimeout:
                          description: The maximum amount of time that a connection
                            is allowed to remain with no data transmitted.
                          type: string
                        expectContinueTimeout:
                          description: See [ExpectContinueTimeout in the Go docs](https://pkg.go.dev/net/http#Transport)
                          type: string
                        idleTimeout:
                          description: The max duration to hold a HTTP keepalive connection
                            between calls
                          type: string
                        maxIdleConns:
                          description: The max number of idle connections to hold
                            pooled
                          type: integer
                        proxyURL:
                          description: HTTP proxy URL to use for outbound requests
                            to the webhook
                          type: string
                        requestTimeout:
                          description: The max duration to hold a TLS handshake alive
                          type: string
                        tlsHandshakeTimeout:
                          description: The max duration to hold a TLS handshake alive
                          type: string
                      type: object
                    input:
                      description: 'Webhooks only: A set of options to extract data
                        from the first JSON input data in the incoming message. Only
                        applies if withData=true'
                      properties:
                        body:
                          description: A top-level property of the first data input,
                            to use for the request body. Default is the whole first
                            body
                          type: string
                        headers:
                          description: A top-level property of the first data input,
                            to use for headers
                          type: string
                        path:
                          description: A top-level property of the first data input,
                            to use for a path to append with escaping to the webhook
                            path
                          type: string
                        query:
                          description: A top-level property of the first data input,
                            to use for query parameters
                          type: string
                        replytx:
                          description: A top-level property of the first data input,
                            to use to dynamically set whether to pin the response
                            (so the requester can choose)
                          type: string
                      type: object
                    json:
                      description: 'Webhooks only: Whether to assume the response
                        body is JSON, regardless of the returned Content-Type'
                      type: boolean
                    method:
                      description: 'Webhooks only: HTTP method to invoke. Default=POST'
                      type: string
                    query:
                      additionalProperties:
                        description: 'Webhooks only: Static query params to set on
                          the webhook request'
                        type: string
                      description: 'Webhooks only: Static query params to set on the
                        webhook request'
                      type: object
                    readAhead:
                      description: The number of events to stream ahead to your application,
                        while waiting for confirmation of consumption of those events.
                        At least once delivery semantics are used in FireFly, so if
                        your application crashes/reconnects this is the maximum number
                        of events you would expect to be redelivered after it restarts
                      minimum: 0
                      type: integer
                    reply:
                      description: 'Webhooks only: Whether to automatically send a
                        reply event, using the body returned by the webhook'
                      type: boolean
                    replytag:
                      description: 'Webhooks only: The tag to set on the reply message'
                      type: string
                    replytx:
                      description: 'Webhooks only: The transaction type to set on
                        the reply message'
                      type: string
                    retry:
                      description: 'Webhooks only: a set of options for retrying the
                        webhook call'
                      properties:
                        count:
                          description: Number of times to retry the webhook call in
                            case of failure
                          type: integer
                        enabled:
                          description: Enables retry on HTTP calls, defaults to false
                          type: boolean
                        initialDelay:
                          description: Initial delay between retries when we retry
                            the webhook call
                          type: string
                        maxDelay:
                          description: Max delay between retries when we retry the
                            webhookcall
                          type: string
                      type: object
                    tlsConfigName:
                      description: The name of an existing TLS configuration associated
                        to the namespace to use
                      type: string
                    url:
                      description: 'Webhooks only: HTTP url to invoke. Can be relative
                        if a base URL is set in the webhook plugin config'
                      type: string
                    withData:
                      description: Whether message events delivered over the subscription,
                        should be packaged with the full data of those messages in-line
                        as part of the event JSON payload. Or if the application should
                        make separate REST calls to download that data. May not be
                        supported on some transports.
                      type: boolean
                  type: object
                transport:
                  description: The transport plugin responsible for event delivery
                    (WebSockets, Webhooks, JMS, NATS etc.)
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created:
                    description: Creation time of the subscription
                    format: date-time
                    type: string
                  ephemeral:
                    description: Ephemeral subscriptions only exist as long as the
                      application is connected, and as such will miss events that
                      occur while the application is disconnected, and cannot be created
                      administratively. You can create one over over a connected WebSocket
                      connection
                    type: boolean
                  filter:
                    description: Server-side filter to apply to events
                    properties:
                      author:
                        description: 'Deprecated: Please use ''message.author'' instead'
                        type: string
                      blockchainevent:
                        description: Filters specific to blockchain events. If an
                          event is not a blockchain event, these filters are ignored
                        properties:
                          listener:
                            description: Regular expression to apply to the blockchain
                              event 'listener' field, which is the UUID of the event
                              listener. So you can restrict your subscription to certain
                              blockchain listeners. Alternatively to avoid your application
                              need to know listener UUIDs you can set the 'topic'
                              field of blockchain event listeners, and use a topic
                              filter on your subscriptions
                            type: string
                          name:
                            description: Regular expression to apply to the blockchain
                              event 'name' field, which is the name of the event in
                              the underlying blockchain smart contract
                            type: string
                        type: object
                      events:
                        description: Regular expression to apply to the event type,
                          to subscribe to a subset of event types
                        type: string
                      group:
                        description: 'Deprecated: Please use ''message.group'' instead'
                        type: string
                      message:
                        description: Filters specific to message events. If an event
                          is not a message event, these filters are ignored
                        properties:
                          author:
                            description: Regular expression to apply to the message
                              'header.author' field
                            type: string
                          group:
                            description: Regular expression to apply to the message
                              'header.group' field
                            type: string
                          tag:
                            description: Regular expression to apply to the message
                              'header.tag' field
                            type: string
                        type: object
                      tag:
                        description: 'Deprecated: Please use ''message.tag'' instead'
                        type: string
                      topic:
                        description: Regular expression to apply to the topic of the
                          event, to subscribe to a subset of topics. Note for messages
                          sent with multiple topics, a separate event is emitted for
                          each topic
                        type: string
                      topics:
                        description: 'Deprecated: Please use ''topic'' instead'
                        type: string
                      transaction:
                        description: Filters specific to events with a transaction.
                          If an event is not associated with a transaction, this filter
                          is ignored
                        properties:
                          type:
                            description: Regular expression to apply to the transaction
                              'type' field
                            type: string
                        type: object
                    type: object
                  id:
                    description: The UUID of the subscription
                    format: uuid
                    type: string
                  name:
                    description: The name of the subscription. The application specifies
                      this name when it connects, in order to attach to the subscription
                      and receive events that arrived while it was disconnected. If
                      multiple apps connect to the same subscription, events are workload
                      balanced across the connected application instances
                    type: string
                  namespace:
                    description: The namespace of the subscription. A subscription
                      will only receive events generated in the namespace of the subscription
                    type: string
                  options:
                    description: Subscription options
                    properties:
                      batch:
                        description: Events are delivered in batches in an ordered
                          array. The batch size is capped to the readAhead limit.
                          The event payload is always an array even if there is a
                          single event in the batch, allowing client-side optimizations
                          when processing the events in a group. Available for both
                          Webhooks and WebSockets.
                        type: boolean
                      batchTimeout:
                        description: When batching is enabled, the optional timeout
                          to send events even when the batch hasn't filled.
                        type: string
                      fastack:
                        description: 'Webhooks only: When true the event will be acknowledged
                          before the webhook is invoked, allowing parallel invocations'
                        type: boolean
                      firstEvent:
                        description: Whether your application would like to receive
                          events from the 'oldest' event emitted by your FireFly node
                          (from the beginning of time), or the 'newest' event (from
                          now), or a specific event sequence. Default is 'newest'
                        type: string
                      headers:
                        additionalProperties:
                          description: 'Webhooks only: Static headers to set on the
                            webhook request'
                          type: string
                        description: 'Webhooks only: Static headers to set on the
                          webhook request'
                        type: object
                      httpOptions:
                        description: 'Webhooks only: a set of options for HTTP'
                        properties:
                          connectionTimeout:
                            description: The maximum amount of time that a connection
                              is allowed to remain with no data transmitted.
                            type: string
                          expectContinueTimeout:
                            description: See [ExpectContinueTimeout in the Go docs](https://pkg.go.dev/net/http#Transport)
                            type: string
                          idleTimeout:
                            description: The max duration to hold a HTTP keepalive
                              connection between calls
                            type: string
                          maxIdleConns:
                            description: The max number of idle connections to hold
                              pooled
                            type: integer
                          proxyURL:
                            description: HTTP proxy URL to use for outbound requests
                              to the webhook
                            type: string
                          requestTimeout:
                            description: The max duration to hold a TLS handshake
                              alive
                            type: string
                          tlsHandshakeTimeout:
                            description: The max duration to hold a TLS handshake
                              alive
                            type: string
                        type: object
                      input:
                        description: 'Webhooks only: A set of options to extract data
                          from the first JSON input data in the incoming message.
                          Only applies if withData=true'
                        properties:
                          body:
                            description: A top-level property of the first data input,
                              to use for the request body. Default is the whole first
                              body
                            type: string
                          headers:
                            description: A top-level property of the first data input,
                              to use for headers
                            type: string
                          path:
                            description: A top-level property of the first data input,
                              to use for a path to append with escaping to the webhook
                              path
                            type: string
                          query:
                            description: A top-level property of the first data input,
                              to use for query parameters
                            type: string
                          replytx:
                            description: A top-level property of the first data input,
                              to use to dynamically set whether to pin the response
                              (so the requester can choose)
                            type: string
                        type: object
                      json:
                        description: 'Webhooks only: Whether to assume the response
                          body is JSON, regardless of the returned Content-Type'
                        type: boolean
                      method:
                        description: 'Webhooks only: HTTP method to invoke. Default=POST'
                        type: string
                      query:
                        additionalProperties:
                          description: 'Webhooks only: Static query params to set
                            on the webhook request'
                          type: string
                        description: 'Webhooks only: Static query params to set on
                          the webhook request'
                        type: object
                      readAhead:
                        description: The number of events to stream ahead to your
                          application, while waiting for confirmation of consumption
                          of those events. At least once delivery semantics are used
                          in FireFly, so if your application crashes/reconnects this
                          is the maximum number of events you would expect to be redelivered
                          after it restarts
                        minimum: 0
                        type: integer
                      reply:
                        description: 'Webhooks only: Whether to automatically send
                          a reply event, using the body returned by the webhook'
                        type: boolean
                      replytag:
                        description: 'Webhooks only: The tag to set on the reply message'
                        type: string
                      replytx:
                        description: 'Webhooks only: The transaction type to set on
                          the reply message'
                        type: string
                      retry:
                        description: 'Webhooks only: a set of options for retrying
                          the webhook call'
                        properties:
                          count:
                            description: Number of times to retry the webhook call
                              in case of failure
                            type: integer
                          enabled:
                            description: Enables retry on HTTP calls, defaults to
                              false
                            type: boolean
                          initialDelay:
                            description: Initial delay between retries when we retry
                              the webhook call
                            type: string
                          maxDelay:
                            description: Max delay between retries when we retry the
                              webhookcall
                            type: string
                        type: object
                      tlsConfigName:
                        description: The name of an existing TLS configuration associated
                          to the namespace to use
                        type: string
                      url:
                        description: 'Webhooks only: HTTP url to invoke. Can be relative
                          if a base URL is set in the webhook plugin config'
                        type: string
                      withData:
                        description: Whether message events delivered over the subscription,
                          should be packaged with the full data of those messages
                          in-line as part of the event JSON payload. Or if the application
                          should make separate REST calls to download that data. May
                          not be supported on some transports.
                        type: boolean
                    type: object
                  transport:
                    description: The transport plugin responsible for event delivery
                      (WebSockets, Webhooks, JMS, NATS etc.)
                    type: string
                  updated:
                    description: Last time the subscription was updated
                    format: date-time
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Subscriptions
  /subscriptions/{subid}:
    delete:
      description: Deletes a subscription
      operationId: deleteSubscription
      parameters:
      - description: The subscription ID
        in: path
        name: subid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "204":
          content:
            application/json: {}
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Subscriptions
    get:
      description: Gets a subscription by its ID
      operationId: getSubscriptionByID
      parameters:
      - description: The subscription ID
        in: path
        name: subid
        required: true
        schema:
          type: string
      - description: When set, the API will return additional status information if
          available
        in: query
        name: fetchstatus
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created:
                    description: Creation time of the subscription
                    format: date-time
                    type: string
                  ephemeral:
                    description: Ephemeral subscriptions only exist as long as the
                      application is connected, and as such will miss events that
                      occur while the application is disconnected, and cannot be created
                      administratively. You can create one over over a connected WebSocket
                      connection
                    type: boolean
                  filter:
                    description: Server-side filter to apply to events
                    properties:
                      author:
                        description: 'Deprecated: Please use ''message.author'' instead'
                        type: string
                      blockchainevent:
                        description: Filters specific to blockchain events. If an
                          event is not a blockchain event, these filters are ignored
                        properties:
                          listener:
                            description: Regular expression to apply to the blockchain
                              event 'listener' field, which is the UUID of the event
                              listener. So you can restrict your subscription to certain
                              blockchain listeners. Alternatively to avoid your application
                              need to know listener UUIDs you can set the 'topic'
                              field of blockchain event listeners, and use a topic
                              filter on your subscriptions
                            type: string
                          name:
                            description: Regular expression to apply to the blockchain
                              event 'name' field, which is the name of the event in
                              the underlying blockchain smart contract
                            type: string
                        type: object
                      events:
                        description: Regular expression to apply to the event type,
                          to subscribe to a subset of event types
                        type: string
                      group:
                        description: 'Deprecated: Please use ''message.group'' instead'
                        type: string
                      message:
                        description: Filters specific to message events. If an event
                          is not a message event, these filters are ignored
                        properties:
                          author:
                            description: Regular expression to apply to the message
                              'header.author' field
                            type: string
                          group:
                            description: Regular expression to apply to the message
                              'header.group' field
                            type: string
                          tag:
                            description: Regular expression to apply to the message
                              'header.tag' field
                            type: string
                        type: object
                      tag:
                        description: 'Deprecated: Please use ''message.tag'' instead'
                        type: string
                      topic:
                        description: Regular expression to apply to the topic of the
                          event, to subscribe to a subset of topics. Note for messages
                          sent with multiple topics, a separate event is emitted for
                          each topic
                        type: string
                      topics:
                        description: 'Deprecated: Please use ''topic'' instead'
                        type: string
                      transaction:
                        description: Filters specific to events with a transaction.
                          If an event is not associated with a transaction, this filter
                          is ignored
                        properties:
                          type:
                            description: Regular expression to apply to the transaction
                              'type' field
                            type: string
                        type: object
                    type: object
                  id:
                    description: The UUID of the subscription
                    format: uuid
                    type: string
                  name:
                    description: The name of the subscription. The application specifies
                      this name when it connects, in order to attach to the subscription
                      and receive events that arrived while it was disconnected. If
                      multiple apps connect to the same subscription, events are workload
                      balanced across the connected application instances
                    type: string
                  namespace:
                    description: The namespace of the subscription. A subscription
                      will only receive events generated in the namespace of the subscription
                    type: string
                  options:
                    description: Subscription options
                    properties:
                      batch:
                        description: Events are delivered in batches in an ordered
                          array. The batch size is capped to the readAhead limit.
                          The event payload is always an array even if there is a
                          single event in the batch, allowing client-side optimizations
                          when processing the events in a group. Available for both
                          Webhooks and WebSockets.
                        type: boolean
                      batchTimeout:
                        description: When batching is enabled, the optional timeout
                          to send events even when the batch hasn't filled.
                        type: string
                      fastack:
                        description: 'Webhooks only: When true the event will be acknowledged
                          before the webhook is invoked, allowing parallel invocations'
                        type: boolean
                      firstEvent:
                        description: Whether your application would like to receive
                          events from the 'oldest' event emitted by your FireFly node
                          (from the beginning of time), or the 'newest' event (from
                          now), or a specific event sequence. Default is 'newest'
                        type: string
                      headers:
                        additionalProperties:
                          description: 'Webhooks only: Static headers to set on the
                            webhook request'
                          type: string
                        description: 'Webhooks only: Static headers to set on the
                          webhook request'
                        type: object
                      httpOptions:
                        description: 'Webhooks only: a set of options for HTTP'
                        properties:
                          connectionTimeout:
                            description: The maximum amount of time that a connection
                              is allowed to remain with no data transmitted.
                            type: string
                          expectContinueTimeout:
                            description: See [ExpectContinueTimeout in the Go docs](https://pkg.go.dev/net/http#Transport)
                            type: string
                          idleTimeout:
                            description: The max duration to hold a HTTP keepalive
                              connection between calls
                            type: string
                          maxIdleConns:
                            description: The max number of idle connections to hold
                              pooled
                            type: integer
                          proxyURL:
                            description: HTTP proxy URL to use for outbound requests
                              to the webhook
                            type: string
                          requestTimeout:
                            description: The max duration to hold a TLS handshake
                              alive
                            type: string
                          tlsHandshakeTimeout:
                            description: The max duration to hold a TLS handshake
                              alive
                            type: string
                        type: object
                      input:
                        description: 'Webhooks only: A set of options to extract data
                          from the first JSON input data in the incoming message.
                          Only applies if withData=true'
                        properties:
                          body:
                            description: A top-level property of the first data input,
                              to use for the request body. Default is the whole first
                              body
                            type: string
                          headers:
                            description: A top-level property of the first data input,
                              to use for headers
                            type: string
                          path:
                            description: A top-level property of the first data input,
                              to use for a path to append with escaping to the webhook
                              path
                            type: string
                          query:
                            description: A top-level property of the first data input,
                              to use for query parameters
                            type: string
                          replytx:
                            description: A top-level property of the first data input,
                              to use to dynamically set whether to pin the response
                              (so the requester can choose)
                            type: string
                        type: object
                      json:
                        description: 'Webhooks only: Whether to assume the response
                          body is JSON, regardless of the returned Content-Type'
                        type: boolean
                      method:
                        description: 'Webhooks only: HTTP method to invoke. Default=POST'
                        type: string
                      query:
                        additionalProperties:
                          description: 'Webhooks only: Static query params to set
                            on the webhook request'
                          type: string
                        description: 'Webhooks only: Static query params to set on
                          the webhook request'
                        type: object
                      readAhead:
                        description: The number of events to stream ahead to your
                          application, while waiting for confirmation of consumption
                          of those events. At least once delivery semantics are used
                          in FireFly, so if your application crashes/reconnects this
                          is the maximum number of events you would expect to be redelivered
                          after it restarts
                        minimum: 0
                        type: integer
                      reply:
                        description: 'Webhooks only: Whether to automatically send
                          a reply event, using the body returned by the webhook'
                        type: boolean
                      replytag:
                        description: 'Webhooks only: The tag to set on the reply message'
                        type: string
                      replytx:
                        description: 'Webhooks only: The transaction type to set on
                          the reply message'
                        type: string
                      retry:
                        description: 'Webhooks only: a set of options for retrying
                          the webhook call'
                        properties:
                          count:
                            description: Number of times to retry the webhook call
                              in case of failure
                            type: integer
                          enabled:
                            description: Enables retry on HTTP calls, defaults to
                              false
                            type: boolean
                          initialDelay:
                            description: Initial delay between retries when we retry
                              the webhook call
                            type: string
                          maxDelay:
                            description: Max delay between retries when we retry the
                              webhookcall
                            type: string
                        type: object
                      tlsConfigName:
                        description: The name of an existing TLS configuration associated
                          to the namespace to use
                        type: string
                      url:
                        description: 'Webhooks only: HTTP url to invoke. Can be relative
                          if a base URL is set in the webhook plugin config'
                        type: string
                      withData:
                        description: Whether message events delivered over the subscription,
                          should be packaged with the full data of those messages
                          in-line as part of the event JSON payload. Or if the application
                          should make separate REST calls to download that data. May
                          not be supported on some transports.
                        type: boolean
                    type: object
                  transport:
                    description: The transport plugin responsible for event delivery
                      (WebSockets, Webhooks, JMS, NATS etc.)
                    type: string
                  updated:
                    description: Last time the subscription was updated
                    format: date-time
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Subscriptions
  /subscriptions/{subid}/events:
    get:
      description: Gets a collection of events filtered by the subscription for further
        filtering
      operationId: getSubscriptionEventsFiltered
      parameters:
      - description: The subscription ID
        in: path
        name: subid
        required: true
        schema:
          type: string
      - description: The sequence ID in the raw event stream to start indexing through
          events from. Leave blank to start indexing from the most recent events
        in: query
        name: startsequence
        schema:
          type: string
      - description: The sequence ID in the raw event stream to stop indexing through
          events at. Leave blank to start indexing from the most recent events
        in: query
        name: endsequence
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: correlator
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: reference
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: sequence
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: topic
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: tx
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: type
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      - description: Return a total count as well as items (adds extra database processing)
        in: query
        name: count
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    correlator:
                      description: For message events, this is the 'header.cid' field
                        from the referenced message. For certain other event types,
                        a secondary object is referenced such as a token pool
                      format: uuid
                      type: string
                    created:
                      description: The time the event was emitted. Not guaranteed
                        to be unique, or to increase between events in the same order
                        as the final sequence events are delivered to your application.
                        As such, the 'sequence' field should be used instead of the
                        'created' field for querying events in the exact order they
                        are delivered to applications
                      format: date-time
                      type: string
                    id:
                      description: The UUID assigned to this event by your local FireFly
                        node
                      format: uuid
                      type: string
                    namespace:
                      description: The namespace of the event. Your application must
                        subscribe to events within a namespace
                      type: string
                    reference:
                      description: The UUID of an resource that is the subject of
                        this event. The event type determines what type of resource
                        is referenced, and whether this field might be unset
                      format: uuid
                      type: string
                    sequence:
                      description: A sequence indicating the order in which events
                        are delivered to your application. Assure to be unique per
                        event in your local FireFly database (unlike the created timestamp)
                      format: int64
                      type: integer
                    topic:
                      description: A stream of information this event relates to.
                        For message confirmation events, a separate event is emitted
                        for each topic in the message. For blockchain events, the
                        listener specifies the topic. Rules exist for how the topic
                        is set for other event types
                      type: string
                    tx:
                      description: The UUID of a transaction that is event is part
                        of. Not all events are part of a transaction
                      format: uuid
                      type: string
                    type:
                      description: All interesting activity in FireFly is emitted
                        as a FireFly event, of a given type. The 'type' combined with
                        the 'reference' can be used to determine how to process the
                        event within your application
                      enum:
                      - transaction_submitted
                      - message_confirmed
                      - message_rejected
                      - datatype_confirmed
                      - identity_confirmed
                      - identity_updated
                      - token_pool_confirmed
                      - token_pool_op_failed
                      - token_transfer_confirmed
                      - token_transfer_op_failed
                      - token_approval_confirmed
                      - token_approval_op_failed
                      - contract_interface_confirmed
                      - contract_api_confirmed
                      - blockchain_event_received
                      - blockchain_invoke_op_succeeded
                      - blockchain_invoke_op_failed
                      - blockchain_contract_deploy_op_succeeded
                      - blockchain_contract_deploy_op_failed
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Subscriptions
  /transactions:
    get:
      description: Gets a list of transactions
      operationId: getTxns
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: blockchainids
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: idempotencykey
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: type
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      - description: Return a total count as well as items (adds extra database processing)
        in: query
        name: count
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    blockchainIds:
                      description: The blockchain transaction ID, in the format specific
                        to the blockchain involved in the transaction. Not all FireFly
                        transactions include a blockchain. FireFly transactions are
                        extensible to support multiple blockchain transactions
                      items:
                        description: The blockchain transaction ID, in the format
                          specific to the blockchain involved in the transaction.
                          Not all FireFly transactions include a blockchain. FireFly
                          transactions are extensible to support multiple blockchain
                          transactions
                        type: string
                      type: array
                    created:
                      description: The time the transaction was created on this node.
                        Note the transaction is individually created with the same
                        UUID on each participant in the FireFly transaction
                      format: date-time
                      type: string
                    id:
                      description: The UUID of the FireFly transaction
                      format: uuid
                      type: string
                    idempotencyKey:
                      description: An optional unique identifier for a transaction.
                        Cannot be duplicated within a namespace, thus allowing idempotent
                        submission of transactions to the API
                      type: string
                    namespace:
                      description: The namespace of the FireFly transaction
                      type: string
                    type:
                      description: The type of the FireFly transaction
                      enum:
                      - none
                      - unpinned
                      - batch_pin
                      - network_action
                      - token_pool
                      - token_transfer
                      - contract_deploy
                      - contract_invoke
                      - contract_invoke_pin
                      - token_approval
                      - data_publish
                      - user_operation_send
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Transactions
  /transactions/{txnid}:
    get:
      description: Gets a transaction by its ID
      operationId: getTxnByID
      parameters:
      - description: The transaction ID
        in: path
        name: txnid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: blockchainids
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: idempotencykey
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: type
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      - description: Return a total count as well as items (adds extra database processing)
        in: query
        name: count
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  blockchainIds:
                    description: The blockchain transaction ID, in the format specific
                      to the blockchain involved in the transaction. Not all FireFly
                      transactions include a blockchain. FireFly transactions are
                      extensible to support multiple blockchain transactions
                    items:
                      description: The blockchain transaction ID, in the format specific
                        to the blockchain involved in the transaction. Not all FireFly
                        transactions include a blockchain. FireFly transactions are
                        extensible to support multiple blockchain transactions
                      type: string
                    type: array
                  created:
                    description: The time the transaction was created on this node.
                      Note the transaction is individually created with the same UUID
                      on each participant in the FireFly transaction
                    format: date-time
                    type: string
                  id:
                    description: The UUID of the FireFly transaction
                    format: uuid
                    type: string
                  idempotencyKey:
                    description: An optional unique identifier for a transaction.
                      Cannot be duplicated within a namespace, thus allowing idempotent
                      submission of transactions to the API
                    type: string
                  namespace:
                    description: The namespace of the FireFly transaction
                    type: string
                  type:
                    description: The type of the FireFly transaction
                    enum:
                    - none
                    - unpinned
                    - batch_pin
                    - network_action
                    - token_pool
                    - token_transfer
                    - contract_deploy
                    - contract_invoke
                    - contract_invoke_pin
                    - token_approval
                    - data_publish
                    - user_operation_send
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Transactions
  /transactions/{txnid}/blockchainevents:
    get:
      description: Gets a list blockchain events for a specific transaction
      operationId: getTxnBlockchainEvents
      parameters:
      - description: The transaction ID
        in: path
        name: txnid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    id:
                      description: The UUID assigned to the event by FireFly
                      format: uuid
                      type: string
                    info:
                      additionalProperties:
                        description: Detailed blockchain specific information about
                          the event, as generated by the blockchain connector
                      description: Detailed blockchain specific information about
                        the event, as generated by the blockchain connector
                      type: object
                    listener:
                      description: The UUID of the listener that detected this event,
                        or nil for built-in events in the system namespace
                      format: uuid
                      type: string
                    name:
                      description: The name of the event in the blockchain smart contract
                      type: string
                    namespace:
                      description: The namespace of the listener that detected this
                        blockchain event
                      type: string
                    output:
                      additionalProperties:
                        description: The data output by the event, parsed to JSON
                          according to the interface of the smart contract
                      description: The data output by the event, parsed to JSON according
                        to the interface of the smart contract
                      type: object
                    protocolId:
                      description: An alphanumerically sortable string that represents
                        this event uniquely on the blockchain (convention for plugins
                        is zero-padded values BLOCKNUMBER/TXN_INDEX/EVENT_INDEX)
                      type: string
                    source:
                      description: The blockchain plugin or token service that detected
                        the event
                      type: string
                    timestamp:
                      description: The time allocated to this event by the blockchain.
                        This is the block timestamp for most blockchain connectors
                      format: date-time
                      type: string
                    tx:
                      description: If this blockchain event is coorelated to FireFly
                        transaction such as a FireFly submitted token transfer, this
                        field is set to the UUID of the FireFly transaction
                      properties:
                        blockchainId:
                          description: The blockchain transaction ID, in the format
                            specific to the blockchain involved in the transaction.
                            Not all FireFly transactions include a blockchain
                          type: string
                        id:
                          description: The UUID of the FireFly transaction
                          format: uuid
                          type: string
                        type:
                          description: The type of the FireFly transaction
                          type: string
                      type: object
                  type: object
                type: array
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Transactions
  /transactions/{txnid}/operations:
    get:
      description: Gets a list of operations in a specific transaction
      operationId: getTxnOps
      parameters:
      - description: The transaction ID
        in: path
        name: txnid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    created:
                      description: The time the operation was created
                      format: date-time
                      type: string
                    data:
                      additionalProperties:
                        description: Operation.data
                      description: Operation.data
                      type: object
                    error:
                      description: Any error reported back from the plugin for this
                        operation
                      type: string
                    id:
                      description: The UUID of the operation
                      format: uuid
                      type: string
                    input:
                      additionalProperties:
                        description: The input to this operation
                      description: The input to this operation
                      type: object
                    namespace:
                      description: The namespace of the operation
                      type: string
                    output:
                      additionalProperties:
                        description: Any output reported back from the plugin for
                          this operation
                      description: Any output reported back from the plugin for this
                        operation
                      type: object
                    plugin:
                      description: The plugin responsible for performing the operation
                      type: string
                    retry:
                      description: If this operation was initiated as a retry to a
                        previous operation, this field points to the UUID of the operation
                        being retried
                      format: uuid
                      type: string
                    status:
                      description: The current status of the operation
                      type: string
                    tx:
                      description: The UUID of the FireFly transaction the operation
                        is part of
                      format: uuid
                      type: string
                    type:
                      description: The type of the operation
                      enum:
                      - blockchain_invoke
                      - user_operation_send
                      type: string
                    updated:
                      description: The last update time of the operation
                      format: date-time
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Transactions
  /transactions/{txnid}/status:
    get:
      description: Gets the status of a transaction
      operationId: getTxnStatus
      parameters:
      - description: The transaction ID
        in: path
        name: txnid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  details:
                    description: A set of records describing the activities within
                      the transaction known by the local FireFly node
                    items:
                      description: A set of records describing the activities within
                        the transaction known by the local FireFly node
                      properties:
                        error:
                          description: If an error occurred related to the detail
                            entry, it is included here
                          type: string
                        id:
                          description: The UUID of the entry referenced by this detail.
                            The type of this record can be inferred from the entry
                            type
                          format: uuid
                          type: string
                        info:
                          additionalProperties:
                            description: Output details for this entry
                          description: Output details for this entry
                          type: object
                        status:
                          description: The status of the detail record. Cases where
                            an event is required for completion, but has not arrived
                            yet are marked with a 'pending' record
                          type: string
                        subtype:
                          description: A sub-type, such as an operation type, or an
                            event type
                          type: string
                        timestamp:
                          description: The time relevant to when the record was updated,
                            such as the time an event was created, or the last update
                            time of an operation
                          format: date-time
                          type: string
                        type:
                          description: The type of the transaction status detail record
                          type: string
                      type: object
                    type: array
                  status:
                    description: The overall computed status of the transaction, after
                      analyzing the details during the API call
                    type: string
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - Transactions
  /websockets:
    get:
      description: Gets a list of the current WebSocket connections to this node
      operationId: getWebSockets
      parameters:
      - description: Server-side request timeout (milliseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 2m0s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  connections:
                    description: List of currently active websocket client connections
                    items:
                      description: List of currently active websocket client connections
                      properties:
                        id:
                          description: The unique ID assigned to this client connection
                          type: string
                        remoteAddress:
                          description: The remote address of the connected client
                            (if available)
                          type: string
                        subscriptions:
                          description: List of subscriptions currently started by
                            this client
                          items:
                            description: List of subscriptions currently started by
                              this client
                            properties:
                              ephemeral:
                                description: Indicates whether the subscription is
                                  ephemeral (vs durable)
                                type: boolean
                              filter:
                                description: The subscription filter specification
                                properties:
                                  author:
                                    description: 'Deprecated: Please use ''message.author''
                                      instead'
                                    type: string
                                  blockchainevent:
                                    description: Filters specific to blockchain events.
                                      If an event is not a blockchain event, these
                                      filters are ignored
                                    properties:
                                      listener:
                                        description: Regular expression to apply to
                                          the blockchain event 'listener' field, which
                                          is the UUID of the event listener. So you
                                          can restrict your subscription to certain
                                          blockchain listeners. Alternatively to avoid
                                          your application need to know listener UUIDs
                                          you can set the 'topic' field of blockchain
                                          event listeners, and use a topic filter
                                          on your subscriptions
                                        type: string
                                      name:
                                        description: Regular expression to apply to
                                          the blockchain event 'name' field, which
                                          is the name of the event in the underlying
                                          blockchain smart contract
                                        type: string
                                    type: object
                                  events:
                                    description: Regular expression to apply to the
                                      event type, to subscribe to a subset of event
                                      types
                                    type: string
                                  group:
                                    description: 'Deprecated: Please use ''message.group''
                                      instead'
                                    type: string
                                  message:
                                    description: Filters specific to message events.
                                      If an event is not a message event, these filters
                                      are ignored
                                    properties:
                                      author:
                                        description: Regular expression to apply to
                                          the message 'header.author' field
                                        type: string
                                      group:
                                        description: Regular expression to apply to
                                          the message 'header.group' field
                                        type: string
                                      tag:
                                        description: Regular expression to apply to
                                          the message 'header.tag' field
                                        type: string
                                    type: object
                                  tag:
                                    description: 'Deprecated: Please use ''message.tag''
                                      instead'
                                    type: string
                                  topic:
                                    description: Regular expression to apply to the
                                      topic of the event, to subscribe to a subset
                                      of topics. Note for messages sent with multiple
                                      topics, a separate event is emitted for each
                                      topic
                                    type: string
                                  topics:
                                    description: 'Deprecated: Please use ''topic''
                                      instead'
                                    type: string
                                  transaction:
                                    description: Filters specific to events with a
                                      transaction. If an event is not associated with
                                      a transaction, this filter is ignored
                                    properties:
                                      type:
                                        description: Regular expression to apply to
                                          the transaction 'type' field
                                        type: string
                                    type: object
                                type: object
                              name:
                                description: The subscription name (for durable subscriptions
                                  only)
                                type: string
                              namespace:
                                description: The subscription namespace
                                type: string
                              startTime:
                                description: The time the subscription started (reset
                                  on dynamic namespace reload)
                                format: date-time
                                type: string
                            type: object
                          type: array
                        userAgent:
                          description: The user agent of the connected client (if
                            available)
                          type: string
                      type: object
                    type: array
                  enabled:
                    description: Indicates whether the websockets plugin is enabled
                    type: boolean
                type: object
          description: Success
        default:
          description: ""
      security:
      - BearerAuth: []
      tags:
      - WebSockets
servers:
- url: https://payadmin.bic.pro/spi/v1
