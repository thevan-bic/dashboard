// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import {
    DeleteAdminsByIdData,
    DeleteAdminsByIdResponse,
    DeleteApisByApiNameData,
    DeleteApisByApiNameResponse,
    DeleteContractsInterfacesByInterfaceIdData,
    DeleteContractsInterfacesByInterfaceIdResponse,
    DeleteContractsListenersByNameOrIdData,
    DeleteContractsListenersByNameOrIdResponse,
    DeleteSubscriptionsBySubidData,
    DeleteSubscriptionsBySubidResponse,
    GetAdminsByIdData,
    GetAdminsByIdResponse,
    GetAdminsData,
    GetAdminsResponse,
    GetApisByApiNameData,
    GetApisByApiNameInterfaceData,
    GetApisByApiNameInterfaceResponse,
    GetApisByApiNameListenersByEventPathData,
    GetApisByApiNameListenersByEventPathResponse,
    GetApisByApiNameResponse,
    GetApisData,
    GetApisResponse,
    GetBlockchaineventsByIdData,
    GetBlockchaineventsByIdResponse,
    GetBlockchaineventsData,
    GetBlockchaineventsResponse,
    GetChartsHistogramByCollectionData,
    GetChartsHistogramByCollectionResponse,
    GetContractsInterfacesByInterfaceIdData,
    GetContractsInterfacesByInterfaceIdResponse,
    GetContractsInterfacesByNameByVersionData,
    GetContractsInterfacesByNameByVersionResponse,
    GetContractsInterfacesData,
    GetContractsInterfacesResponse,
    GetContractsListenersByNameOrIdData,
    GetContractsListenersByNameOrIdResponse,
    GetContractsListenersData,
    GetContractsListenersResponse,
    GetEventsByEidData,
    GetEventsByEidResponse,
    GetEventsData,
    GetEventsWithCountResponse,
    GetNamespacesByNsData,
    GetNamespacesByNsResponse,
    GetNamespacesData,
    GetNamespacesResponse,
    GetOperationsData,
    GetOperationsOnchainByOpidData,
    GetOperationsOnchainByOpidResponse,
    GetOperationsWithCountResponse,
    GetSignersByIdData,
    GetSignersByIdResponse,
    GetSignersData,
    GetSignersResponse,
    GetStatusData,
    GetStatusResponse,
    GetSubscriptionsBySubidData,
    GetSubscriptionsBySubidEventsData,
    GetSubscriptionsBySubidEventsResponse,
    GetSubscriptionsBySubidResponse,
    GetSubscriptionsData,
    GetSubscriptionsWithCountResponse,
    GetTransactionsByTxnidBlockchaineventsData,
    GetTransactionsByTxnidBlockchaineventsResponse,
    GetTransactionsByTxnidData,
    GetTransactionsByTxnidOperationsData,
    GetTransactionsByTxnidOperationsResponse,
    GetTransactionsByTxnidResponse,
    GetTransactionsByTxnidStatusData,
    GetTransactionsByTxnidStatusResponse,
    GetTransactionsData,
    GetTransactionsResponse,
    GetWebsocketsData,
    GetWebsocketsResponse,
    PatchOperationsByNsopidData,
    PatchOperationsByNsopidResponse,
    PostAdminsData,
    PostAdminsLoginData,
    PostAdminsLoginResponse,
    PostAdminsResponse,
    PostApisByApiNameInvokeByMethodPathData,
    PostApisByApiNameInvokeByMethodPathResponse,
    PostApisByApiNameListenersByEventPathData,
    PostApisByApiNameListenersByEventPathResponse,
    PostApisByApiNamePublishData,
    PostApisByApiNamePublishResponse,
    PostApisByApiNameQueryByMethodPathData,
    PostApisByApiNameQueryByMethodPathResponse,
    PostApisData,
    PostApisResponse,
    PostContractsInterfacesByNameByVersionPublishData,
    PostContractsInterfacesByNameByVersionPublishResponse,
    PostContractsInterfacesData,
    PostContractsInterfacesGenerateData,
    PostContractsInterfacesGenerateResponse,
    PostContractsInterfacesResponse,
    PostContractsInvokeData,
    PostContractsInvokeResponse,
    PostContractsListenersData,
    PostContractsListenersResponse,
    PostContractsListenersSignatureData,
    PostContractsListenersSignatureResponse,
    PostContractsQueryData,
    PostContractsQueryResponse,
    PostOperationsByOpidRetryData,
    PostOperationsByOpidRetryResponse,
    PostOperationsByOpidStatusData,
    PostOperationsByOpidStatusResponse,
    PostResetData,
    PostResetResponse,
    PostSignersData,
    PostSignersResponse,
    PostSubscriptionsData,
    PostSubscriptionsResponse,
    PutApisByApiNameData,
    PutApisByApiNameResponse,
    PutSubscriptionsData,
    PutSubscriptionsResponse,
} from './types.gen';

export class AdminsService {
    /**
     * Gets a list of system user
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.email Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.id Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.namespace Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.sort Sort field. For multi-field sort use comma separated values (or multiple query values) with '-' prefix for descending
     * @param data.ascending Ascending sort order (overrides all fields in a multi-field sort)
     * @param data.descending Descending sort order (overrides all fields in a multi-field sort)
     * @param data.skip The number of records to skip (max: 1,000). Unsuitable for bulk operations
     * @param data.limit The maximum number of records to return (max: 1,000)
     * @param data.count Return a total count as well as items (adds extra database processing)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getAdmins(data: GetAdminsData = {}): CancelablePromise<GetAdminsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/admins',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                email: data.email,
                id: data.id,
                namespace: data.namespace,
                sort: data.sort,
                ascending: data.ascending,
                descending: data.descending,
                skip: data.skip,
                limit: data.limit,
                count: data.count,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Create new admin
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @throws ApiError
     */
    public static postAdmins(data: PostAdminsData = {}): CancelablePromise<PostAdminsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admins',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }

    /**
     * Delete admin by id
     * @param data The data for the request.
     * @param data.id The admin ID key to get
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static deleteAdminsById(
        data: DeleteAdminsByIdData,
    ): CancelablePromise<DeleteAdminsByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/admins/{id}',
            path: {
                id: data.id,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Get admin by id
     * @param data The data for the request.
     * @param data.id The admin ID key to get
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getAdminsById(data: GetAdminsByIdData): CancelablePromise<GetAdminsByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/admins/{id}',
            path: {
                id: data.id,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Login
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @throws ApiError
     */
    public static postAdminsLogin(
        data: PostAdminsLoginData = {},
    ): CancelablePromise<PostAdminsLoginResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/admins/login',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }
}

export class ContractApIsService {
    /**
     * Gets a list of contract APIs that have been published
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.id Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data._interface Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.name Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.networkname Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.published Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.sort Sort field. For multi-field sort use comma separated values (or multiple query values) with '-' prefix for descending
     * @param data.ascending Ascending sort order (overrides all fields in a multi-field sort)
     * @param data.descending Descending sort order (overrides all fields in a multi-field sort)
     * @param data.skip The number of records to skip (max: 1,000). Unsuitable for bulk operations
     * @param data.limit The maximum number of records to return (max: 1,000)
     * @param data.count Return a total count as well as items (adds extra database processing)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getApis(data: GetApisData = {}): CancelablePromise<GetApisResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/apis',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                id: data.id,
                interface: data._interface,
                name: data.name,
                networkname: data.networkname,
                published: data.published,
                sort: data.sort,
                ascending: data.ascending,
                descending: data.descending,
                skip: data.skip,
                limit: data.limit,
                count: data.count,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Creates and broadcasts a new custom smart contract API
     * @param data The data for the request.
     * @param data.confirm When true the HTTP request blocks until the message is confirmed
     * @param data.publish When true the definition will be published to all other members of the multiparty network
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @returns unknown Success
     * @throws ApiError
     */
    public static postApis(data: PostApisData = {}): CancelablePromise<PostApisResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/apis',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                confirm: data.confirm,
                publish: data.publish,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }

    /**
     * Delete a contract API
     * @param data The data for the request.
     * @param data.apiName The name of the contract API
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns void Success
     * @throws ApiError
     */
    public static deleteApisByApiName(
        data: DeleteApisByApiNameData,
    ): CancelablePromise<DeleteApisByApiNameResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/apis/{apiName}',
            path: {
                apiName: data.apiName,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Gets information about a contract API, including the URLs for the OpenAPI Spec and Swagger UI for the API
     * @param data The data for the request.
     * @param data.apiName The name of the contract API
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getApisByApiName(
        data: GetApisByApiNameData,
    ): CancelablePromise<GetApisByApiNameResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/apis/{apiName}',
            path: {
                apiName: data.apiName,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * The ID of the contract API
     * @param data The data for the request.
     * @param data.id The name of the contract API
     * @param data.confirm When true the HTTP request blocks until the message is confirmed
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @returns unknown Success
     * @throws ApiError
     */
    public static putApisByApiName(
        data: PutApisByApiNameData,
    ): CancelablePromise<PutApisByApiNameResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/apis/{apiName}',
            path: {
                id: data.id,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                confirm: data.confirm,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }

    /**
     * Gets a contract interface for a contract API
     * @param data The data for the request.
     * @param data.apiName The name of the contract API
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getApisByApiNameInterface(
        data: GetApisByApiNameInterfaceData,
    ): CancelablePromise<GetApisByApiNameInterfaceResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/apis/{apiName}/interface',
            path: {
                apiName: data.apiName,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Invokes a method on a smart contract API. Performs a blockchain transaction.
     * @param data The data for the request.
     * @param data.apiName The name of the contract API
     * @param data.methodPath The name or uniquely generated path name of a method on a smart contract
     * @param data.confirm When true the HTTP request blocks until the message is confirmed
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @returns unknown Success
     * @throws ApiError
     */
    public static postApisByApiNameInvokeByMethodPath(
        data: PostApisByApiNameInvokeByMethodPathData,
    ): CancelablePromise<PostApisByApiNameInvokeByMethodPathResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/apis/{apiName}/invoke/{methodPath}',
            path: {
                apiName: data.apiName,
                methodPath: data.methodPath,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                confirm: data.confirm,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }

    /**
     * Gets a list of contract listeners
     * @param data The data for the request.
     * @param data.apiName The name of the contract API
     * @param data.eventPath The name or uniquely generated path name of a event on a smart contract
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.backendid Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.created Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.filters Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.id Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data._interface Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.location Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.name Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.signature Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.state Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.topic Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.updated Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.sort Sort field. For multi-field sort use comma separated values (or multiple query values) with '-' prefix for descending
     * @param data.ascending Ascending sort order (overrides all fields in a multi-field sort)
     * @param data.descending Descending sort order (overrides all fields in a multi-field sort)
     * @param data.skip The number of records to skip (max: 1,000). Unsuitable for bulk operations
     * @param data.limit The maximum number of records to return (max: 1,000)
     * @param data.count Return a total count as well as items (adds extra database processing)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getApisByApiNameListenersByEventPath(
        data: GetApisByApiNameListenersByEventPathData,
    ): CancelablePromise<GetApisByApiNameListenersByEventPathResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/apis/{apiName}/listeners/{eventPath}',
            path: {
                apiName: data.apiName,
                eventPath: data.eventPath,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                backendid: data.backendid,
                created: data.created,
                filters: data.filters,
                id: data.id,
                interface: data._interface,
                location: data.location,
                name: data.name,
                signature: data.signature,
                state: data.state,
                topic: data.topic,
                updated: data.updated,
                sort: data.sort,
                ascending: data.ascending,
                descending: data.descending,
                skip: data.skip,
                limit: data.limit,
                count: data.count,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Creates a new blockchain listener for events emitted by custom smart contracts
     * @param data The data for the request.
     * @param data.apiName The name of the contract API
     * @param data.eventPath The name or uniquely generated path name of a event on a smart contract
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @throws ApiError
     */
    public static postApisByApiNameListenersByEventPath(
        data: PostApisByApiNameListenersByEventPathData,
    ): CancelablePromise<PostApisByApiNameListenersByEventPathResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/apis/{apiName}/listeners/{eventPath}',
            path: {
                apiName: data.apiName,
                eventPath: data.eventPath,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }

    /**
     * Publish a contract API to all other members of the multiparty network
     * @param data The data for the request.
     * @param data.apiName The name of the contract API
     * @param data.confirm When true the HTTP request blocks until the message is confirmed
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @returns unknown Success
     * @throws ApiError
     */
    public static postApisByApiNamePublish(
        data: PostApisByApiNamePublishData,
    ): CancelablePromise<PostApisByApiNamePublishResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/apis/{apiName}/publish',
            path: {
                apiName: data.apiName,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                confirm: data.confirm,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }

    /**
     * Queries a method on a smart contract API. Performs a read-only query.
     * @param data The data for the request.
     * @param data.apiName The name of the contract API
     * @param data.methodPath The name or uniquely generated path name of a method on a smart contract
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @throws ApiError
     */
    public static postApisByApiNameQueryByMethodPath(
        data: PostApisByApiNameQueryByMethodPathData,
    ): CancelablePromise<PostApisByApiNameQueryByMethodPathResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/apis/{apiName}/query/{methodPath}',
            path: {
                apiName: data.apiName,
                methodPath: data.methodPath,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }
}

export class BlockchainEventsService {
    /**
     * Gets a list of blockchain events
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.id Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.listener Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.name Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.protocolid Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.source Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.timestamp Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.txBlockchainid Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.txId Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.txType Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.sort Sort field. For multi-field sort use comma separated values (or multiple query values) with '-' prefix for descending
     * @param data.ascending Ascending sort order (overrides all fields in a multi-field sort)
     * @param data.descending Descending sort order (overrides all fields in a multi-field sort)
     * @param data.skip The number of records to skip (max: 1,000). Unsuitable for bulk operations
     * @param data.limit The maximum number of records to return (max: 1,000)
     * @param data.count Return a total count as well as items (adds extra database processing)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getBlockchainevents(
        data: GetBlockchaineventsData = {},
    ): CancelablePromise<GetBlockchaineventsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/blockchainevents',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                id: data.id,
                listener: data.listener,
                name: data.name,
                protocolid: data.protocolid,
                source: data.source,
                timestamp: data.timestamp,
                'tx.blockchainid': data.txBlockchainid,
                'tx.id': data.txId,
                'tx.type': data.txType,
                sort: data.sort,
                ascending: data.ascending,
                descending: data.descending,
                skip: data.skip,
                limit: data.limit,
                count: data.count,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Gets a blockchain event
     * @param data The data for the request.
     * @param data.id The blockchain event ID
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getBlockchaineventsById(
        data: GetBlockchaineventsByIdData,
    ): CancelablePromise<GetBlockchaineventsByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/blockchainevents/{id}',
            path: {
                id: data.id,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            errors: {
                default: '',
            },
        });
    }
}

export class ChartHistogramService {
    /**
     * Gets a JSON object containing statistics data that can be used to build a graphical representation of recent activity in a given database collection
     * @param data The data for the request.
     * @param data.collection The collection ID
     * @param data.startTime Start time of the data to be fetched
     * @param data.endTime End time of the data to be fetched
     * @param data.buckets Number of buckets between start time and end time
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getChartsHistogramByCollection(
        data: GetChartsHistogramByCollectionData,
    ): CancelablePromise<GetChartsHistogramByCollectionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/charts/histogram/{collection}',
            path: {
                collection: data.collection,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                startTime: data.startTime,
                endTime: data.endTime,
                buckets: data.buckets,
            },
            errors: {
                default: '',
            },
        });
    }
}

export class ContractsService {
    /**
     * Gets a list of contract interfaces that have been published
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.id Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.name Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.networkname Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.published Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.version Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.sort Sort field. For multi-field sort use comma separated values (or multiple query values) with '-' prefix for descending
     * @param data.ascending Ascending sort order (overrides all fields in a multi-field sort)
     * @param data.descending Descending sort order (overrides all fields in a multi-field sort)
     * @param data.skip The number of records to skip (max: 1,000). Unsuitable for bulk operations
     * @param data.limit The maximum number of records to return (max: 1,000)
     * @param data.count Return a total count as well as items (adds extra database processing)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getContractsInterfaces(
        data: GetContractsInterfacesData = {},
    ): CancelablePromise<GetContractsInterfacesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/contracts/interfaces',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                id: data.id,
                name: data.name,
                networkname: data.networkname,
                published: data.published,
                version: data.version,
                sort: data.sort,
                ascending: data.ascending,
                descending: data.descending,
                skip: data.skip,
                limit: data.limit,
                count: data.count,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Creates and broadcasts a new custom smart contract interface
     * @param data The data for the request.
     * @param data.confirm When true the HTTP request blocks until the message is confirmed
     * @param data.publish When true the definition will be published to all other members of the multiparty network
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @throws ApiError
     */
    public static postContractsInterfaces(
        data: PostContractsInterfacesData = {},
    ): CancelablePromise<PostContractsInterfacesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/contracts/interfaces',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                confirm: data.confirm,
                publish: data.publish,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }

    /**
     * Delete a contract interface
     * @param data The data for the request.
     * @param data.interfaceId The ID of the contract interface
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns void Success
     * @throws ApiError
     */
    public static deleteContractsInterfacesByInterfaceId(
        data: DeleteContractsInterfacesByInterfaceIdData,
    ): CancelablePromise<DeleteContractsInterfacesByInterfaceIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/contracts/interfaces/{interfaceId}',
            path: {
                interfaceId: data.interfaceId,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Gets a contract interface by its ID
     * @param data The data for the request.
     * @param data.interfaceId The ID of the contract interface
     * @param data.fetchchildren When set, the API will return the full FireFly Interface document including all methods, events, and parameters
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getContractsInterfacesByInterfaceId(
        data: GetContractsInterfacesByInterfaceIdData,
    ): CancelablePromise<GetContractsInterfacesByInterfaceIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/contracts/interfaces/{interfaceId}',
            path: {
                interfaceId: data.interfaceId,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                fetchchildren: data.fetchchildren,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Gets a contract interface by its name and version
     * @param data The data for the request.
     * @param data.name The name of the contract interface
     * @param data.version The version of the contract interface
     * @param data.fetchchildren When set, the API will return the full FireFly Interface document including all methods, events, and parameters
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getContractsInterfacesByNameByVersion(
        data: GetContractsInterfacesByNameByVersionData,
    ): CancelablePromise<GetContractsInterfacesByNameByVersionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/contracts/interfaces/{name}/{version}',
            path: {
                name: data.name,
                version: data.version,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                fetchchildren: data.fetchchildren,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Publish a contract interface to all other members of the multiparty network
     * @param data The data for the request.
     * @param data.name The name of the contract interface
     * @param data.version The version of the contract interface
     * @param data.confirm When true the HTTP request blocks until the message is confirmed
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @returns unknown Success
     * @throws ApiError
     */
    public static postContractsInterfacesByNameByVersionPublish(
        data: PostContractsInterfacesByNameByVersionPublishData,
    ): CancelablePromise<PostContractsInterfacesByNameByVersionPublishResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/contracts/interfaces/{name}/{version}/publish',
            path: {
                name: data.name,
                version: data.version,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                confirm: data.confirm,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }

    /**
     * A convenience method to convert a blockchain specific smart contract format into a FireFly Interface format. The specific blockchain plugin in use must support this functionality.
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @throws ApiError
     */
    public static postContractsInterfacesGenerate(
        data: PostContractsInterfacesGenerateData = {},
    ): CancelablePromise<PostContractsInterfacesGenerateResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/contracts/interfaces/generate',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }

    /**
     * Invokes a method on a smart contract. Performs a blockchain transaction.
     * @param data The data for the request.
     * @param data.confirm When true the HTTP request blocks until the blockchain transaction is confirmed
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @returns unknown Success
     * @throws ApiError
     */
    public static postContractsInvoke(
        data: PostContractsInvokeData = {},
    ): CancelablePromise<PostContractsInvokeResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/contracts/invoke',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                confirm: data.confirm,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }

    /**
     * Gets a list of contract listeners
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.backendid Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.created Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.filters Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.id Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data._interface Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.location Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.name Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.signature Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.state Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.topic Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.updated Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.sort Sort field. For multi-field sort use comma separated values (or multiple query values) with '-' prefix for descending
     * @param data.ascending Ascending sort order (overrides all fields in a multi-field sort)
     * @param data.descending Descending sort order (overrides all fields in a multi-field sort)
     * @param data.skip The number of records to skip (max: 1,000). Unsuitable for bulk operations
     * @param data.limit The maximum number of records to return (max: 1,000)
     * @param data.count Return a total count as well as items (adds extra database processing)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getContractsListeners(
        data: GetContractsListenersData = {},
    ): CancelablePromise<GetContractsListenersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/contracts/listeners',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                backendid: data.backendid,
                created: data.created,
                filters: data.filters,
                id: data.id,
                interface: data._interface,
                location: data.location,
                name: data.name,
                signature: data.signature,
                state: data.state,
                topic: data.topic,
                updated: data.updated,
                sort: data.sort,
                ascending: data.ascending,
                descending: data.descending,
                skip: data.skip,
                limit: data.limit,
                count: data.count,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Creates a new blockchain listener for events emitted by custom smart contracts
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @throws ApiError
     */
    public static postContractsListeners(
        data: PostContractsListenersData = {},
    ): CancelablePromise<PostContractsListenersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/contracts/listeners',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }

    /**
     * Deletes a contract listener referenced by its name or its ID
     * @param data The data for the request.
     * @param data.nameOrId The contract listener name or ID
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns void Success
     * @throws ApiError
     */
    public static deleteContractsListenersByNameOrId(
        data: DeleteContractsListenersByNameOrIdData,
    ): CancelablePromise<DeleteContractsListenersByNameOrIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/contracts/listeners/{nameOrId}',
            path: {
                nameOrId: data.nameOrId,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Gets a contract listener by its name or ID
     * @param data The data for the request.
     * @param data.nameOrId The contract listener name or ID
     * @param data.fetchstatus When set, the API will return additional status information if available
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getContractsListenersByNameOrId(
        data: GetContractsListenersByNameOrIdData,
    ): CancelablePromise<GetContractsListenersByNameOrIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/contracts/listeners/{nameOrId}',
            path: {
                nameOrId: data.nameOrId,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                fetchstatus: data.fetchstatus,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Calculates the hash of a blockchain listener filters and events
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @throws ApiError
     */
    public static postContractsListenersSignature(
        data: PostContractsListenersSignatureData = {},
    ): CancelablePromise<PostContractsListenersSignatureResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/contracts/listeners/signature',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }

    /**
     * Queries a method on a smart contract. Performs a read-only query.
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @throws ApiError
     */
    public static postContractsQuery(
        data: PostContractsQueryData = {},
    ): CancelablePromise<PostContractsQueryResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/contracts/query',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }
}

export class EventsService {
    /**
     * Gets a list of events
     * @param data The data for the request.
     * @param data.fetchreferences When set, the API will return the record that this item references in its 'reference' field
     * @param data.fetchreference When set, the API will return the record that this item references in its 'reference' field
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.correlator Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.created Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.id Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.reference Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.sequence Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.topic Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.tx Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.type Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.sort Sort field. For multi-field sort use comma separated values (or multiple query values) with '-' prefix for descending
     * @param data.ascending Ascending sort order (overrides all fields in a multi-field sort)
     * @param data.descending Descending sort order (overrides all fields in a multi-field sort)
     * @param data.skip The number of records to skip (max: 1,000). Unsuitable for bulk operations
     * @param data.limit The maximum number of records to return (max: 1,000)
     * @param data.count Return a total count as well as items (adds extra database processing)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getEvents(
        data: GetEventsData = {},
    ): CancelablePromise<GetEventsWithCountResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/events',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                fetchreferences: data.fetchreferences,
                fetchreference: data.fetchreference,
                correlator: data.correlator,
                created: data.created,
                id: data.id,
                reference: data.reference,
                sequence: data.sequence,
                topic: data.topic,
                tx: data.tx,
                type: data.type,
                sort: data.sort,
                ascending: data.ascending,
                descending: data.descending,
                skip: data.skip,
                limit: data.limit,
                count: data.count,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Gets an event by its ID
     * @param data The data for the request.
     * @param data.eid The event ID
     * @param data.fetchreference When set, the API will return the record that this item references in its 'reference' field
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getEventsByEid(
        data: GetEventsByEidData,
    ): CancelablePromise<GetEventsByEidResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/events/{eid}',
            path: {
                eid: data.eid,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                fetchreference: data.fetchreference,
            },
            errors: {
                default: '',
            },
        });
    }
}

export class NamespacesService {
    /**
     * Gets a list of namespaces
     * @param data The data for the request.
     * @param data.includeinitializing When set, the API will return namespaces even if they are not yet initialized, including in error cases where an initializationError is included
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getNamespaces(
        data: GetNamespacesData = {},
    ): CancelablePromise<GetNamespacesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/namespaces',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                includeinitializing: data.includeinitializing,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Gets a namespace
     * @param data The data for the request.
     * @param data.ns The namespace which scopes this request
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getNamespacesByNs(
        data: GetNamespacesByNsData,
    ): CancelablePromise<GetNamespacesByNsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/namespaces/{ns}',
            path: {
                ns: data.ns,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Updates an operation by ID
     * @param data The data for the request.
     * @param data.nsopid The operation ID as passed to the connector when the operation was performed, including the 'namespace:' prefix
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @throws ApiError
     */
    public static patchOperationsByNsopid(
        data: PatchOperationsByNsopidData,
    ): CancelablePromise<PatchOperationsByNsopidResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/operations/{nsopid}',
            path: {
                nsopid: data.nsopid,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }

    /**
     * Restarts FireFly Core HTTP servers and apply all configuration updates
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns void Success
     * @throws ApiError
     */
    public static postReset(data: PostResetData = {}): CancelablePromise<PostResetResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/reset',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            body: data.requestBody,
            errors: {
                default: '',
            },
        });
    }
}

export class OperationsService {
    /**
     * Gets a a list of operations
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.created Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.error Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.id Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.input Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.output Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.data Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.plugin Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.retry Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.status Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.tx Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.type Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.updated Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.sort Sort field. For multi-field sort use comma separated values (or multiple query values) with '-' prefix for descending
     * @param data.ascending Ascending sort order (overrides all fields in a multi-field sort)
     * @param data.descending Descending sort order (overrides all fields in a multi-field sort)
     * @param data.skip The number of records to skip (max: 1,000). Unsuitable for bulk operations
     * @param data.limit The maximum number of records to return (max: 1,000)
     * @param data.count Return a total count as well as items (adds extra database processing)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getOperations(
        data: GetOperationsData = {},
    ): CancelablePromise<GetOperationsWithCountResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/operations',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                created: data.created,
                error: data.error,
                id: data.id,
                input: data.input,
                data: data.data,
                output: data.output,
                plugin: data.plugin,
                retry: data.retry,
                status: data.status,
                tx: data.tx,
                type: data.type,
                updated: data.updated,
                sort: data.sort,
                ascending: data.ascending,
                descending: data.descending,
                skip: data.skip,
                limit: data.limit,
                count: data.count,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Gets an operation by ID
     * @param data The data for the request.
     * @param data.opid The operation ID key to get
     * @param data.fetchstatus When set, the API will return additional status information if available
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getOperationsOnchainByOpid(
        data: GetOperationsOnchainByOpidData,
    ): CancelablePromise<GetOperationsOnchainByOpidResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/operations-onchain/{opid}',
            path: {
                opid: data.opid,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                fetchstatus: data.fetchstatus,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Retries a failed operation
     * @param data The data for the request.
     * @param data.opid The UUID of the operation
     * @param data.txHash transaction hash
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @throws ApiError
     */
    public static postOperationsByOpidRetry(
        data: PostOperationsByOpidRetryData,
    ): CancelablePromise<PostOperationsByOpidRetryResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/operations/{opid}/retry',
            path: {
                opid: data.opid,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                txHash: data.txHash,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }

    /**
     * Set operation pending status
     * @param data The data for the request.
     * @param data.opid The UUID of the operation
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @throws ApiError
     */
    public static postOperationsByOpidStatus(
        data: PostOperationsByOpidStatusData,
    ): CancelablePromise<PostOperationsByOpidStatusResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/operations/{opid}/status',
            path: {
                opid: data.opid,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }
}

export class SignersService {
    /**
     * Get signers
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.keyIdentifier Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.id Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.sort Sort field. For multi-field sort use comma separated values (or multiple query values) with '-' prefix for descending
     * @param data.ascending Ascending sort order (overrides all fields in a multi-field sort)
     * @param data.descending Descending sort order (overrides all fields in a multi-field sort)
     * @param data.skip The number of records to skip (max: 1,000). Unsuitable for bulk operations
     * @param data.limit The maximum number of records to return (max: 1,000)
     * @param data.count Return a total count as well as items (adds extra database processing)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getSigners(data: GetSignersData = {}): CancelablePromise<GetSignersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/signers',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                KeyIdentifier: data.keyIdentifier,
                id: data.id,
                sort: data.sort,
                ascending: data.ascending,
                descending: data.descending,
                skip: data.skip,
                limit: data.limit,
                count: data.count,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Create new signer
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @throws ApiError
     */
    public static postSigners(data: PostSignersData = {}): CancelablePromise<PostSignersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/signers',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }

    /**
     * Get signer by id
     * @param data The data for the request.
     * @param data.id Signer ID
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getSignersById(
        data: GetSignersByIdData,
    ): CancelablePromise<GetSignersByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/signers/{id}',
            path: {
                id: data.id,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            errors: {
                default: '',
            },
        });
    }
}

export class StatusService {
    /**
     * Gets the status of this namespace
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getStatus(data: GetStatusData = {}): CancelablePromise<GetStatusResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/status',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            errors: {
                default: '',
            },
        });
    }
}

export class SubscriptionsService {
    /**
     * Gets a list of subscriptions
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.created Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.events Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.filters Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.id Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.name Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.options Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.transport Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.sort Sort field. For multi-field sort use comma separated values (or multiple query values) with '-' prefix for descending
     * @param data.ascending Ascending sort order (overrides all fields in a multi-field sort)
     * @param data.descending Descending sort order (overrides all fields in a multi-field sort)
     * @param data.skip The number of records to skip (max: 1,000). Unsuitable for bulk operations
     * @param data.limit The maximum number of records to return (max: 1,000)
     * @param data.count Return a total count as well as items (adds extra database processing)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getSubscriptions(
        data: GetSubscriptionsData = {},
    ): CancelablePromise<GetSubscriptionsWithCountResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/subscriptions',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                created: data.created,
                events: data.events,
                filters: data.filters,
                id: data.id,
                name: data.name,
                options: data.options,
                transport: data.transport,
                sort: data.sort,
                ascending: data.ascending,
                descending: data.descending,
                skip: data.skip,
                limit: data.limit,
                count: data.count,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Creates a new subscription for an application to receive events from FireFly
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @throws ApiError
     */
    public static postSubscriptions(
        data: PostSubscriptionsData = {},
    ): CancelablePromise<PostSubscriptionsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/subscriptions',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }

    /**
     * Update an existing subscription
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.requestBody
     * @returns unknown Success
     * @throws ApiError
     */
    public static putSubscriptions(
        data: PutSubscriptionsData = {},
    ): CancelablePromise<PutSubscriptionsResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/subscriptions',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                default: '',
            },
        });
    }

    /**
     * Deletes a subscription
     * @param data The data for the request.
     * @param data.subid The subscription ID
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns void Success
     * @throws ApiError
     */
    public static deleteSubscriptionsBySubid(
        data: DeleteSubscriptionsBySubidData,
    ): CancelablePromise<DeleteSubscriptionsBySubidResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/subscriptions/{subid}',
            path: {
                subid: data.subid,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Gets a subscription by its ID
     * @param data The data for the request.
     * @param data.subid The subscription ID
     * @param data.fetchstatus When set, the API will return additional status information if available
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getSubscriptionsBySubid(
        data: GetSubscriptionsBySubidData,
    ): CancelablePromise<GetSubscriptionsBySubidResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/subscriptions/{subid}',
            path: {
                subid: data.subid,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                fetchstatus: data.fetchstatus,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Gets a collection of events filtered by the subscription for further filtering
     * @param data The data for the request.
     * @param data.subid The subscription ID
     * @param data.startsequence The sequence ID in the raw event stream to start indexing through events from. Leave blank to start indexing from the most recent events
     * @param data.endsequence The sequence ID in the raw event stream to stop indexing through events at. Leave blank to start indexing from the most recent events
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.correlator Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.created Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.id Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.reference Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.sequence Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.topic Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.tx Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.type Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.sort Sort field. For multi-field sort use comma separated values (or multiple query values) with '-' prefix for descending
     * @param data.ascending Ascending sort order (overrides all fields in a multi-field sort)
     * @param data.descending Descending sort order (overrides all fields in a multi-field sort)
     * @param data.skip The number of records to skip (max: 1,000). Unsuitable for bulk operations
     * @param data.limit The maximum number of records to return (max: 1,000)
     * @param data.count Return a total count as well as items (adds extra database processing)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getSubscriptionsBySubidEvents(
        data: GetSubscriptionsBySubidEventsData,
    ): CancelablePromise<GetSubscriptionsBySubidEventsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/subscriptions/{subid}/events',
            path: {
                subid: data.subid,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                startsequence: data.startsequence,
                endsequence: data.endsequence,
                correlator: data.correlator,
                created: data.created,
                id: data.id,
                reference: data.reference,
                sequence: data.sequence,
                topic: data.topic,
                tx: data.tx,
                type: data.type,
                sort: data.sort,
                ascending: data.ascending,
                descending: data.descending,
                skip: data.skip,
                limit: data.limit,
                count: data.count,
            },
            errors: {
                default: '',
            },
        });
    }
}

export class TransactionsService {
    /**
     * Gets a list of transactions
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.blockchainids Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.created Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.id Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.idempotencykey Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.type Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.sort Sort field. For multi-field sort use comma separated values (or multiple query values) with '-' prefix for descending
     * @param data.ascending Ascending sort order (overrides all fields in a multi-field sort)
     * @param data.descending Descending sort order (overrides all fields in a multi-field sort)
     * @param data.skip The number of records to skip (max: 1,000). Unsuitable for bulk operations
     * @param data.limit The maximum number of records to return (max: 1,000)
     * @param data.count Return a total count as well as items (adds extra database processing)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getTransactions(
        data: GetTransactionsData = {},
    ): CancelablePromise<GetTransactionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/transactions',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                blockchainids: data.blockchainids,
                created: data.created,
                id: data.id,
                idempotencykey: data.idempotencykey,
                type: data.type,
                sort: data.sort,
                ascending: data.ascending,
                descending: data.descending,
                skip: data.skip,
                limit: data.limit,
                count: data.count,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Gets a transaction by its ID
     * @param data The data for the request.
     * @param data.txnid The transaction ID
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @param data.blockchainids Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.created Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.id Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.idempotencykey Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.type Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^
     * @param data.sort Sort field. For multi-field sort use comma separated values (or multiple query values) with '-' prefix for descending
     * @param data.ascending Ascending sort order (overrides all fields in a multi-field sort)
     * @param data.descending Descending sort order (overrides all fields in a multi-field sort)
     * @param data.skip The number of records to skip (max: 1,000). Unsuitable for bulk operations
     * @param data.limit The maximum number of records to return (max: 1,000)
     * @param data.count Return a total count as well as items (adds extra database processing)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getTransactionsByTxnid(
        data: GetTransactionsByTxnidData,
    ): CancelablePromise<GetTransactionsByTxnidResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/transactions/{txnid}',
            path: {
                txnid: data.txnid,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            query: {
                blockchainids: data.blockchainids,
                created: data.created,
                id: data.id,
                idempotencykey: data.idempotencykey,
                type: data.type,
                sort: data.sort,
                ascending: data.ascending,
                descending: data.descending,
                skip: data.skip,
                limit: data.limit,
                count: data.count,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Gets a list blockchain events for a specific transaction
     * @param data The data for the request.
     * @param data.txnid The transaction ID
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getTransactionsByTxnidBlockchainevents(
        data: GetTransactionsByTxnidBlockchaineventsData,
    ): CancelablePromise<GetTransactionsByTxnidBlockchaineventsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/transactions/{txnid}/blockchainevents',
            path: {
                txnid: data.txnid,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Gets a list of operations in a specific transaction
     * @param data The data for the request.
     * @param data.txnid The transaction ID
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getTransactionsByTxnidOperations(
        data: GetTransactionsByTxnidOperationsData,
    ): CancelablePromise<GetTransactionsByTxnidOperationsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/transactions/{txnid}/operations',
            path: {
                txnid: data.txnid,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            errors: {
                default: '',
            },
        });
    }

    /**
     * Gets the status of a transaction
     * @param data The data for the request.
     * @param data.txnid The transaction ID
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getTransactionsByTxnidStatus(
        data: GetTransactionsByTxnidStatusData,
    ): CancelablePromise<GetTransactionsByTxnidStatusResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/transactions/{txnid}/status',
            path: {
                txnid: data.txnid,
            },
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            errors: {
                default: '',
            },
        });
    }
}

export class WebSocketsService {
    /**
     * Gets a list of the current WebSocket connections to this node
     * @param data The data for the request.
     * @param data.requestTimeout Server-side request timeout (milliseconds, or set a custom suffix like 10s)
     * @returns unknown Success
     * @throws ApiError
     */
    public static getWebsockets(
        data: GetWebsocketsData = {},
    ): CancelablePromise<GetWebsocketsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/websockets',
            headers: {
                'Request-Timeout': data.requestTimeout,
            },
            errors: {
                default: '',
            },
        });
    }
}
